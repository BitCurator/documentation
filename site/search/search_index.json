{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BitCurator Environment The BitCurator Environment is a Ubuntu-derived Linux distribution geared towards the needs of archivists and librarians. It includes a suite of open source digital forensics and data analysis tools to help collecting institutions process born-digital materials. BitCurator supports positive digital preservation outcomes using software and practices adopted from the digital forensics community. In the BitCurator Environment you can: Create forensic disk images: Disk images packaged with metadata about devices, file systems, and the creation process. Analyze files and file systems: View details on file system contents from a wide variety of file systems. Extract file system metadata: File system metadata is a critical link in the chain of custody and in records of provenance. Identify sensitive information: Locate private and sensitive information on digital media and prepare materials for access. Locate and remove duplicate files: Know what files to keep and what can be discarded. BitCurator on GitHub The BitCurator group on GitHub provides all source code and development documentation for the BitCurator NLP (2016-2018), BitCurator Access (2014-2016), and BitCurator (2011-2014) projects. Quick Start Guide The Quick Start Guide provides instructions on installation and an initial walkthrough of the BitCurator Environment. BitCurator Google Group The BitCurator Google Group is the place to post questions, discuss issues with the project and development staff, and request features and updates. Licenses Wiki content and associated documentation generated by BitCurator Consortium members and the BitCurator team is licensed under Creative Commons Attribution 4.0 International (CC BY 4.0) . All software included in the BitCurator environment is distributed in accordance with original licenses. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the About section.","title":"BitCurator Environment"},{"location":"#bitcurator-environment","text":"The BitCurator Environment is a Ubuntu-derived Linux distribution geared towards the needs of archivists and librarians. It includes a suite of open source digital forensics and data analysis tools to help collecting institutions process born-digital materials. BitCurator supports positive digital preservation outcomes using software and practices adopted from the digital forensics community. In the BitCurator Environment you can: Create forensic disk images: Disk images packaged with metadata about devices, file systems, and the creation process. Analyze files and file systems: View details on file system contents from a wide variety of file systems. Extract file system metadata: File system metadata is a critical link in the chain of custody and in records of provenance. Identify sensitive information: Locate private and sensitive information on digital media and prepare materials for access. Locate and remove duplicate files: Know what files to keep and what can be discarded.","title":"BitCurator Environment"},{"location":"#bitcurator-on-github","text":"The BitCurator group on GitHub provides all source code and development documentation for the BitCurator NLP (2016-2018), BitCurator Access (2014-2016), and BitCurator (2011-2014) projects.","title":"BitCurator on GitHub"},{"location":"#quick-start-guide","text":"The Quick Start Guide provides instructions on installation and an initial walkthrough of the BitCurator Environment.","title":"Quick Start Guide"},{"location":"#bitcurator-google-group","text":"The BitCurator Google Group is the place to post questions, discuss issues with the project and development staff, and request features and updates.","title":"BitCurator Google Group"},{"location":"#licenses","text":"Wiki content and associated documentation generated by BitCurator Consortium members and the BitCurator team is licensed under Creative Commons Attribution 4.0 International (CC BY 4.0) . All software included in the BitCurator environment is distributed in accordance with original licenses. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the About section.","title":"Licenses"},{"location":"Resources/","text":"Resources Links to BitCurator blog, forums and user groups, scripts library, and user and technical documentation. BitCurator-Related Resources User and Technical Documentation Datasets Library General Resources about Digital Forensics Sample Data Digital Corpora CD-ROM and Floppy Disk Library \u2013 Indiana University Preservation and Access Virtual Education Laboratory (PAVEL) Corpora Designed for Targeted System Testing Open Preservation Foundation National Institute of Standards and Technology Library of Congress Labs Web Archive Data Sets Artefactual Sample Data digicam corpus - Digital Camera files OSSArcFlow Resources BitCurator-Related Resources News, updates, and BitCurator blog posts: https://bitcurator.net/ BitCurator User Group : Get support and discuss issues with the community. Screencasts and Video Tutorials :Useful screencasts on our YouTube channel. BitCurator Consortium Resources : A library of webinars, workflows, instructional videos, presentations, and other resources useful for born-digital practitioners and adjacent audiences. Forums and User Groups Ubuntu Forums: https://ubuntuforums.org/forumdisplay.php?f=48 Ask Ubuntu Help Center: http://askubuntu.com/help Oracle Virtual Box Forum: https://forums.virtualbox.org/ Bulk Extractor Google Group: https://groups.google.com/forum/?hl=en#!forum/bulk_extractor-users The Sleuth Kit Forum: http://forum.sleuthkit.org/ The Sleuth Kit User Discussion List: https://lists.sourceforge.net/lists/listinfo/sleuthkit-users FITS Discussion Group: https://groups.google.com/forum/#!forum/fits-users User and Technical Documentation Official Ubuntu Documentation: https://help.ubuntu.com/ Oracle Virtual Box Documentation: https://www.virtualbox.org/wiki/Documentation ClamAV Manual: https://www.clamav.net/documents/clam-antivirus-user-manual Bulk Extractor Forensic Wiki: https://forensicswiki.xyz/wiki/index.php?title=Bulk_extractor Bulk Extractor User Manual: http://digitalcorpora.org/downloads/bulk_extractor/BEUsersManual.pdf Brunnhilde Wiki: https://www.bitarchivist.net/projects/brunnhilde FSLint User Manual: https://booki.flossmanuals.net/fslint/ Guymager Wiki: https://sourceforge.net/p/guymager/wiki/Home/ The Sleuth Kit Wiki: http://wiki.sleuthkit.org/index.php?title=The_Sleuth_Kit FITS Documentation: http://projects.iq.harvard.edu/fits/documentation Datasets Library The BitCuratorEdu project team is building a library of datasets for educational, testing, and research purposes. This document summarizes known available sample data. If you know of other examples that are already publicly available or how your own examples that you would be willing to share, please let the BitCuratorEdu project team know. The team will continue to build this content as we gather it over the 2019-2021 project period. General Resources about Digital Forensics Sample Data A comprehensive review of available datasets for cyber forensics research was presented at the 2017 Digital Forensics Research Workshop. See original article at https://www.sciencedirect.com/science/article/pii/S1742287617301913 81 datasets listed at: https://datasets.fbreitinger.de/datasets/ Forensics Wiki list of forensic corpora: https://forensicswiki.xyz/wiki/index.php?title=Forensic_corpora Digital Corpora Nitroba University Harassment Scenario: https://digitalcorpora.org/corpora/scenarios/nitroba-university-harassment-scenario M57-Patents Scenario: https://digitalcorpora.org/corpora/scenarios/m57-patents-scenario M57-Jean Scenario: https://digitalcorpora.org/corpora/scenarios/m57-jean National Gallery DC Scenario: https://digitalcorpora.org/corpora/scenarios/national-gallery-dc-2012-attack Lone Wolf Scenario: https://digitalcorpora.org/corpora/scenarios/2018-lone-wolf-scenario Govdocs1 set: https://digitalcorpora.org/corpora/files NPS-2010 emails: https://digitalcorpora.org/corpora/disk-images/nps-2010-emails Real Data Corpus (restricted access): https://digitalcorpora.org/corpora/disk-images/real-data-corpus This is arguably the most directly applicable and widely used source for sample data in digital forensics education. Simson Garfinkel and his collaborators have developed several realistic corpora for digital forensics education and research, available at http://digitalcorpora.org . These include \u201cscenarios,\u201d which represent fictional but realistic events. For example, UNC SILS frequently uses the M57-Patents Scenario for classes and a variety of continuing education offerings, including conference workshops and the Digital Archives Specialist (DAS) digital forensics courses offered through the Society of American Archivists. The full hard drive images are of a manageable size for longer assignments and exercises that require a drive with a full operating system; the USB flash drive images are smaller and well-suited for short workshops, class exercises and demonstrations. CD-ROM and Floppy Disk Library \u2013 Indiana University Online collection of \"nearly 5,000 CD-ROMs, DVDs, and floppy disks distributed by the GPO under the Federal Depository Library Program (FDLP). These tangible products have been received through the FDLP since the 1980s and consist of millions of individual files containing fundamental data on economics, the environment, population, and life and physical sciences.\" https://webapp1.dlib.indiana.edu/virtual_disk_library/ Each disk image has an associated catalog record. For use in classes, one approach is to share a subset of the images directly with students, so they don\u2019t immediately encounter all of the descriptive metadata from the site. Preservation and Access Virtual Education Laboratory (PAVEL) The Preservation and Access Virtual Education Lab (PAVEL) project at the University of Michigan School of Information (2010-2012), funded by the National Endowment for the Humanities, developed a \u201cvirtual education laboratory featuring digital access and preservation tools.\u201d This includes four data sets: a small set of six (ZIP file, 6.1 MB) (approximately 19,000 messages) (ZIP file, 47.9 MB) from her tenure in the White House, along with an (PDF file, 161 KB) and (PDF file, 119 KB) the Enron email collection (approximately 600,000 messages) (ZIP file, 112.4 MB), along with (PDF file, 214 KB) a set of documents (ZIP file, 182.9 MB) from the University of Michigan College of Literature, Science, and the Arts IT department (approximately 450 megabytes of Microsoft Office files) and document providing (PDF file, 15 KB) information Many thanks to David Wallace and Beth Yakel from the PAVEL team for allowing us to redistribute the datasets. PAVEL data sets have the advantage of being selected for use in archival education, and they contain important supplementary information (e.g. organizational charts) for understanding their contexts of creation. However, they do not allow for the replication of many forensic tasks. For example, all of the email messages are stored as separate ASCII text files, rather than being embedded in a disk image or within a wrapper format such as PST, a scenario likely to be encountered during acquisition of a new collection. Corpora Designed for Targeted System Testing Brian Carrier\u2019s valuable, but highly targeted Digital Forensics Tool Testing Images: http://dftt.sourceforge.net/ Computer Forensic Reference Data Sets (CFReDS) from the National Institute for Standards and Technology (NIST): http://www.cfreds.nist.gov/ Open Preservation Foundation The Open Preservation Foundation maintains a site that includes \u201cDatasets, preservation and curation Issues with those Datasets, and Solutions to those Issues.\u201d The experiences of solving specific Issues are written up on Solution pages, which then link to pages in the OPF Tool Registry. In many cases, this leads to \u201cactual code that can be downloaded and re-used.\u201d http://wiki.opf-labs.org/display/REQ/Digital+Preservation+and+Data+Curation+Requirements+and+Solutions National Institute of Standards and Technology The National Institute of Standards and Technology creates and maintains data sets including disk images for testing forensic tools. Some of these are deprecated over time; the current list can be found at: https://www.nist.gov/itl/ssd/software-quality-group/computer-forensics-tool-testing-program-cftt/cfreds/cfreds-0 Library of Congress Labs Web Archive Data Sets The 1000 .gov PDF Datasets provided by LC are a particularly useful dataset for exploring BitCurator functionality and can be applied to educational contexts. https://labs.loc.gov/work/experiments/webarchive-datasets/ Artefactual Sample Data Archivematica Sample Data digicam corpus - Digital Camera files digicam_corpus Scripts Library This is a list of scripts created by BitCurator users that can assist with digital forensics tasks and activities. If you have a script you would like added to the library, please contact us or post in our Google Group . Guymager Log Parser , Euan Cochrane: Script to parse and process Guymager logs in bulk KryoFlux Disk Format ID , Euan Cochrane This program is intended to help to identify floppy disk formats. It takes a folder of KryoFlux stream files as input Relevant Resource: Floppy Disk Format Identifier Tool (blog post) hfs2dfxml , Dianne Dietrich Utility to parse hfsutils output and produce DFXML for HFS-formatted disk images Relevant Resource: Advanced Topics - Scripting in BitCurator (webinar, slides) populate_did.sh (shell script, 844 bytes), Jarrett Drake What are the key metadata points to extract from complex, multi-level born-digital records and later represent in EAD? This shell script extracts information from directories of digital content for use in the Descriptive Identification element wrapper. Relevant Resource: Advanced Topics - Scripting in BitCurator (webinar, slides) floppy-utils , John Durno Sample scripts for acquiring and processing floppy disk images Relevant Resource: Digital Archaeology and/or Forensics: Working with Floppy Disks from the 1980s (paper) rl-bitcurator-scripts , Matthew Farrell, Kam Woods Scripts (bash, Python) developed to automate processes disk-image-timeline , Walker Sampson Generate file system event timelines from a collection of disk images automatically, and collects the individual timelines into a master CSV file Relevant Resource: Aggregating Temporal Forensic Data Across Archival Digital Media (paper) InstArch_regex.txt , Joe Carrano Bulk_extractor regex file inspired by be_regex , Matthew Farrell Emulation Resources Emulation resources, GitLab , Ethan Gates OSSArcFlow Resources The OSSArcFlow project (2017-2020) was supported by a grant from the Institute of Museum and Library Services. OSSArcFlow project personnel worked with partner institutions to document and analyze born-digital workflows, and created an implementation guide and videos to support workflow documentation and analysis. Digital Dossiers : Project partners created digital dossiers outlining the form, function, and future of digital curation at their home institutions. As-Is Workflows : In the fall of 2017, the project team worked with partners at each institution to mockup a visual representation of their current workflow activities. Representing a \u201csnapshot in time,\u201d these documents show how a diverse group of institutions are using OSS tools in their workflows to curate born-digital content. They also provide an essential starting point for synthesizing and comparing both the gaps and overlaps that currently exist between common OSS tools and environments. Guide to Documenting Born-Digital Workflows : The purpose of the Guide to Documenting Born-Digital Archival Workflows is to encourage and assist collecting institutions of all shapes, sizes, and types to begin documenting their born-digital workflows. The Guide includes four main sections: Introduction \u2013 provides a brief background of the project, the research questions that have driven our inquiry, and how to use this Guide in your own work as an archivist and curator of born-digital collections. Common Steps in OSS Born-Digital Archival Workflows \u2013 provides brief descriptions of each of the main steps in born-digital archiving (13 in total) and what tools are commonly used to accomplish each of these steps today. Documenting Born-Digital Workflows \u2013 provides detailed guidance to help you use the OSSArcFlow survey, interview questions, and visualization model to document and depict your own workflow. Using Workflows \u2013 provides guidance and examples of how an institution can use its existing workflows to identify growth/maturity goals, to advocate for resources, and to transform roles/relationships as needed to improve its born-digital archiving practices. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Resources section.","title":"Resources"},{"location":"Resources/#resources","text":"Links to BitCurator blog, forums and user groups, scripts library, and user and technical documentation. BitCurator-Related Resources User and Technical Documentation Datasets Library General Resources about Digital Forensics Sample Data Digital Corpora CD-ROM and Floppy Disk Library \u2013 Indiana University Preservation and Access Virtual Education Laboratory (PAVEL) Corpora Designed for Targeted System Testing Open Preservation Foundation National Institute of Standards and Technology Library of Congress Labs Web Archive Data Sets Artefactual Sample Data digicam corpus - Digital Camera files OSSArcFlow Resources","title":"Resources"},{"location":"Resources/#bitcurator-related-resources","text":"News, updates, and BitCurator blog posts: https://bitcurator.net/ BitCurator User Group : Get support and discuss issues with the community. Screencasts and Video Tutorials :Useful screencasts on our YouTube channel. BitCurator Consortium Resources : A library of webinars, workflows, instructional videos, presentations, and other resources useful for born-digital practitioners and adjacent audiences. Forums and User Groups Ubuntu Forums: https://ubuntuforums.org/forumdisplay.php?f=48 Ask Ubuntu Help Center: http://askubuntu.com/help Oracle Virtual Box Forum: https://forums.virtualbox.org/ Bulk Extractor Google Group: https://groups.google.com/forum/?hl=en#!forum/bulk_extractor-users The Sleuth Kit Forum: http://forum.sleuthkit.org/ The Sleuth Kit User Discussion List: https://lists.sourceforge.net/lists/listinfo/sleuthkit-users FITS Discussion Group: https://groups.google.com/forum/#!forum/fits-users","title":"BitCurator-Related Resources"},{"location":"Resources/#user-and-technical-documentation","text":"Official Ubuntu Documentation: https://help.ubuntu.com/ Oracle Virtual Box Documentation: https://www.virtualbox.org/wiki/Documentation ClamAV Manual: https://www.clamav.net/documents/clam-antivirus-user-manual Bulk Extractor Forensic Wiki: https://forensicswiki.xyz/wiki/index.php?title=Bulk_extractor Bulk Extractor User Manual: http://digitalcorpora.org/downloads/bulk_extractor/BEUsersManual.pdf Brunnhilde Wiki: https://www.bitarchivist.net/projects/brunnhilde FSLint User Manual: https://booki.flossmanuals.net/fslint/ Guymager Wiki: https://sourceforge.net/p/guymager/wiki/Home/ The Sleuth Kit Wiki: http://wiki.sleuthkit.org/index.php?title=The_Sleuth_Kit FITS Documentation: http://projects.iq.harvard.edu/fits/documentation","title":"User and Technical Documentation"},{"location":"Resources/#datasets-library","text":"The BitCuratorEdu project team is building a library of datasets for educational, testing, and research purposes. This document summarizes known available sample data. If you know of other examples that are already publicly available or how your own examples that you would be willing to share, please let the BitCuratorEdu project team know. The team will continue to build this content as we gather it over the 2019-2021 project period.","title":"Datasets Library"},{"location":"Resources/#general-resources-about-digital-forensics-sample-data","text":"A comprehensive review of available datasets for cyber forensics research was presented at the 2017 Digital Forensics Research Workshop. See original article at https://www.sciencedirect.com/science/article/pii/S1742287617301913 81 datasets listed at: https://datasets.fbreitinger.de/datasets/ Forensics Wiki list of forensic corpora: https://forensicswiki.xyz/wiki/index.php?title=Forensic_corpora","title":"General Resources about Digital Forensics Sample Data"},{"location":"Resources/#digital-corpora","text":"Nitroba University Harassment Scenario: https://digitalcorpora.org/corpora/scenarios/nitroba-university-harassment-scenario M57-Patents Scenario: https://digitalcorpora.org/corpora/scenarios/m57-patents-scenario M57-Jean Scenario: https://digitalcorpora.org/corpora/scenarios/m57-jean National Gallery DC Scenario: https://digitalcorpora.org/corpora/scenarios/national-gallery-dc-2012-attack Lone Wolf Scenario: https://digitalcorpora.org/corpora/scenarios/2018-lone-wolf-scenario Govdocs1 set: https://digitalcorpora.org/corpora/files NPS-2010 emails: https://digitalcorpora.org/corpora/disk-images/nps-2010-emails Real Data Corpus (restricted access): https://digitalcorpora.org/corpora/disk-images/real-data-corpus This is arguably the most directly applicable and widely used source for sample data in digital forensics education. Simson Garfinkel and his collaborators have developed several realistic corpora for digital forensics education and research, available at http://digitalcorpora.org . These include \u201cscenarios,\u201d which represent fictional but realistic events. For example, UNC SILS frequently uses the M57-Patents Scenario for classes and a variety of continuing education offerings, including conference workshops and the Digital Archives Specialist (DAS) digital forensics courses offered through the Society of American Archivists. The full hard drive images are of a manageable size for longer assignments and exercises that require a drive with a full operating system; the USB flash drive images are smaller and well-suited for short workshops, class exercises and demonstrations.","title":"Digital Corpora"},{"location":"Resources/#cd-rom-and-floppy-disk-library-indiana-university","text":"Online collection of \"nearly 5,000 CD-ROMs, DVDs, and floppy disks distributed by the GPO under the Federal Depository Library Program (FDLP). These tangible products have been received through the FDLP since the 1980s and consist of millions of individual files containing fundamental data on economics, the environment, population, and life and physical sciences.\" https://webapp1.dlib.indiana.edu/virtual_disk_library/ Each disk image has an associated catalog record. For use in classes, one approach is to share a subset of the images directly with students, so they don\u2019t immediately encounter all of the descriptive metadata from the site.","title":"CD-ROM and Floppy Disk Library \u2013 Indiana University"},{"location":"Resources/#preservation-and-access-virtual-education-laboratory-pavel","text":"The Preservation and Access Virtual Education Lab (PAVEL) project at the University of Michigan School of Information (2010-2012), funded by the National Endowment for the Humanities, developed a \u201cvirtual education laboratory featuring digital access and preservation tools.\u201d This includes four data sets: a small set of six (ZIP file, 6.1 MB) (approximately 19,000 messages) (ZIP file, 47.9 MB) from her tenure in the White House, along with an (PDF file, 161 KB) and (PDF file, 119 KB) the Enron email collection (approximately 600,000 messages) (ZIP file, 112.4 MB), along with (PDF file, 214 KB) a set of documents (ZIP file, 182.9 MB) from the University of Michigan College of Literature, Science, and the Arts IT department (approximately 450 megabytes of Microsoft Office files) and document providing (PDF file, 15 KB) information Many thanks to David Wallace and Beth Yakel from the PAVEL team for allowing us to redistribute the datasets. PAVEL data sets have the advantage of being selected for use in archival education, and they contain important supplementary information (e.g. organizational charts) for understanding their contexts of creation. However, they do not allow for the replication of many forensic tasks. For example, all of the email messages are stored as separate ASCII text files, rather than being embedded in a disk image or within a wrapper format such as PST, a scenario likely to be encountered during acquisition of a new collection.","title":"Preservation and Access Virtual Education Laboratory (PAVEL)"},{"location":"Resources/#corpora-designed-for-targeted-system-testing","text":"Brian Carrier\u2019s valuable, but highly targeted Digital Forensics Tool Testing Images: http://dftt.sourceforge.net/ Computer Forensic Reference Data Sets (CFReDS) from the National Institute for Standards and Technology (NIST): http://www.cfreds.nist.gov/","title":"Corpora Designed for Targeted System Testing"},{"location":"Resources/#open-preservation-foundation","text":"The Open Preservation Foundation maintains a site that includes \u201cDatasets, preservation and curation Issues with those Datasets, and Solutions to those Issues.\u201d The experiences of solving specific Issues are written up on Solution pages, which then link to pages in the OPF Tool Registry. In many cases, this leads to \u201cactual code that can be downloaded and re-used.\u201d http://wiki.opf-labs.org/display/REQ/Digital+Preservation+and+Data+Curation+Requirements+and+Solutions","title":"Open Preservation Foundation"},{"location":"Resources/#national-institute-of-standards-and-technology","text":"The National Institute of Standards and Technology creates and maintains data sets including disk images for testing forensic tools. Some of these are deprecated over time; the current list can be found at: https://www.nist.gov/itl/ssd/software-quality-group/computer-forensics-tool-testing-program-cftt/cfreds/cfreds-0","title":"National Institute of Standards and Technology"},{"location":"Resources/#library-of-congress-labs-web-archive-data-sets","text":"The 1000 .gov PDF Datasets provided by LC are a particularly useful dataset for exploring BitCurator functionality and can be applied to educational contexts. https://labs.loc.gov/work/experiments/webarchive-datasets/","title":"Library of Congress Labs Web Archive Data Sets"},{"location":"Resources/#artefactual-sample-data","text":"Archivematica Sample Data","title":"Artefactual Sample Data"},{"location":"Resources/#digicam-corpus-digital-camera-files","text":"digicam_corpus Scripts Library This is a list of scripts created by BitCurator users that can assist with digital forensics tasks and activities. If you have a script you would like added to the library, please contact us or post in our Google Group . Guymager Log Parser , Euan Cochrane: Script to parse and process Guymager logs in bulk KryoFlux Disk Format ID , Euan Cochrane This program is intended to help to identify floppy disk formats. It takes a folder of KryoFlux stream files as input Relevant Resource: Floppy Disk Format Identifier Tool (blog post) hfs2dfxml , Dianne Dietrich Utility to parse hfsutils output and produce DFXML for HFS-formatted disk images Relevant Resource: Advanced Topics - Scripting in BitCurator (webinar, slides) populate_did.sh (shell script, 844 bytes), Jarrett Drake What are the key metadata points to extract from complex, multi-level born-digital records and later represent in EAD? This shell script extracts information from directories of digital content for use in the Descriptive Identification element wrapper. Relevant Resource: Advanced Topics - Scripting in BitCurator (webinar, slides) floppy-utils , John Durno Sample scripts for acquiring and processing floppy disk images Relevant Resource: Digital Archaeology and/or Forensics: Working with Floppy Disks from the 1980s (paper) rl-bitcurator-scripts , Matthew Farrell, Kam Woods Scripts (bash, Python) developed to automate processes disk-image-timeline , Walker Sampson Generate file system event timelines from a collection of disk images automatically, and collects the individual timelines into a master CSV file Relevant Resource: Aggregating Temporal Forensic Data Across Archival Digital Media (paper) InstArch_regex.txt , Joe Carrano Bulk_extractor regex file inspired by be_regex , Matthew Farrell Emulation Resources Emulation resources, GitLab , Ethan Gates","title":"digicam corpus - Digital Camera files"},{"location":"Resources/#ossarcflow-resources","text":"The OSSArcFlow project (2017-2020) was supported by a grant from the Institute of Museum and Library Services. OSSArcFlow project personnel worked with partner institutions to document and analyze born-digital workflows, and created an implementation guide and videos to support workflow documentation and analysis. Digital Dossiers : Project partners created digital dossiers outlining the form, function, and future of digital curation at their home institutions. As-Is Workflows : In the fall of 2017, the project team worked with partners at each institution to mockup a visual representation of their current workflow activities. Representing a \u201csnapshot in time,\u201d these documents show how a diverse group of institutions are using OSS tools in their workflows to curate born-digital content. They also provide an essential starting point for synthesizing and comparing both the gaps and overlaps that currently exist between common OSS tools and environments. Guide to Documenting Born-Digital Workflows : The purpose of the Guide to Documenting Born-Digital Archival Workflows is to encourage and assist collecting institutions of all shapes, sizes, and types to begin documenting their born-digital workflows. The Guide includes four main sections: Introduction \u2013 provides a brief background of the project, the research questions that have driven our inquiry, and how to use this Guide in your own work as an archivist and curator of born-digital collections. Common Steps in OSS Born-Digital Archival Workflows \u2013 provides brief descriptions of each of the main steps in born-digital archiving (13 in total) and what tools are commonly used to accomplish each of these steps today. Documenting Born-Digital Workflows \u2013 provides detailed guidance to help you use the OSSArcFlow survey, interview questions, and visualization model to document and depict your own workflow. Using Workflows \u2013 provides guidance and examples of how an institution can use its existing workflows to identify growth/maturity goals, to advocate for resources, and to transform roles/relationships as needed to improve its born-digital archiving practices. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Resources section.","title":"OSSArcFlow Resources"},{"location":"Tools/","text":"Tools Overview The BitCurator Environment includes many individual tools to perform specific curation tasks. Listed here are all tools packaged by default in the environment, organized by the folder found on the BitCurator desktop. Links will take users to the corresponding external site or documentation. Where applicable, relevant BitCurator Step-by-Step Guides are listed as well. Because BitCurator is an Ubuntu environment, users are able to download and install tools as in any other Ubuntu distribution or Linux OS. In addition, much functionality is found in the file navigation system, Nautilus, through contextual menus. Listed are guides for many of these scripts. Data Triage Create MD5 Sums Display a file in Hex editor Disk Image Metadata Extract Compressed Files Live Search for Files Safely Mount Device Imaging and Recovery Brasero : GUI application to copy data and audio CD and DVDs Guymager : Open-source forensic disk imaging tool See the Creating a Disk Image Using Guymager Step-by-Step Guide . cdrdao : CD imaging tool (primarily for audio CDs) Clonezilla : A imaging and cloning program for partitions and disks dcfldd : A forensics-focused rewrite of dd dd : Create raw disk images and transfer data between devices ddrescue : A version of dd with additional options for data recovery dumpfloppy : Suite of tools for reading floppy disks in arbitrary formats supported by the PC floppy controller, and for working with the resulting image files ewfacquire : Acquire Expert Witness packaged disk images from devices on the command line. Part of the libewf library of Expert Witness tools. More documentation at the Forensics wiki . Forensic analysis tools BitCurator Disk Image Access: A GUI interface to browse raw and forensically-packaged disk images, export files and deleted items, and view disk image metadata. BitCurator Mounter : A GUI application to list currently attached devices along with technical details. Allows users to mount fixed and removable media according to the current mount policy. BitCurator Reporting Tool : A GUI-driven (and optionally command-line) tool for running forensics tools in sequence to produce human- and machine-readable reports in DFXML . Find instructions at the Creating Disk Image Reports using the BitCurator Reporting Tool Step-by-Step Guide . Use of the Reporting Tool is also covered in the Quickstart Guide . Brunnhilde : Generates aggregate reports of files in a directory or disk image based on input from Richard Lehane's Siegfried . bulk_extractor Viewer (BEViewer) : A GUI front-end for bulk_extractor See the Bulk Extractor Viewer Step-by-Step Guide . See the Regular Expressions in Bulk Extractor Step-by-Step Guide . bulk_extractor is a critical component of the Annotated Features Report Step-by-Step Guide . Disktype : Detects the content format of a disk or disk image Fiwalk : Fiwalk is part of The Sleuth Kit's collection of digital forensics tools and is used to produce a DFXML (Digital Forensics XML) report on the contents of a disk image within the BitCurator Reporting Tool . See the fiwalk Step-by-Step Guide . md5deep : Set of programs to compute MD5, SHA-1, SHA-256, Tiger, or Whirlpool message digests on an arbitrary number of files nsrllookup : Query tool to check for a matching MD5 hash in the National Software Reference Library Reference Data Set PhotoRec : File data recovery software designed to recover lost files including video, documents and archives from hard disks, CD-ROMs, and lost pictures from digital camera memory RegRipper : Tool for extracting and parsing information (keys, values, data) from the Windows Registry SDHash : File similarity tool using similarity digests ssdeep : Fast hash generation TestDisk : Data recovery software with focus on recovering lost partitions, making non-booting disks bootable again/partition table recovery Packaging and Transfer BagIt Python Library : Command line implementation of the BagIt specification Grsync : GUI fronted for the rysnc command line tool to synchronize or transfer data between locations Additional tools Antiword : Converts the Microsoft Word 2, 6, 7, 97, 2000, 2002 and 2003 formats to plain text and PostScript BitCurator Reports (command line): Command line implementation of the BitCurator Reporting Tool , see GUI entry under the Forensic analysis tools section Bless Hex Editor : Hex editor to edit and view files as a sequence of bytes ClamTK : Virus scanning FIDO Format Identification : Command line tool to identify the file formats of digital objects, designed for integration into automated workflows Fiwalk (command line): Fiwalk is part of The Sleuth Kit's collection of digital forensics tools and is used to produce a DFXML (Digital Forensics XML) report on the contents of a disk image within the BitCurator Reporting Tool . See the fiwalk Step-by-Step Guide . GHex : A hex viewer/editor GtkHash : A cryptographic hashing tool Hashrat : Hashing tool supporting MD5, SHA1, SAH256, SHA512, Whirlpool, JH and HMAC versions of these. Includes recursive file hashing and other features. H FS Explorer : Provides access to the legacy HFS file systems See the View and export information from HFS-formatted disk images Step-by-Step Guide . Match BE Features to File Names : Command line implementation of the BitCurator Reporting Tool function nwipe : Securely erase disks Read Outlook PST File : A utility for reading and exporting the contents of PST files. System Profiler and Benchmark : Link to the native system information tool VLC media player : Multimedia player and framework that plays most multimedia files as well as DVDs, audio CDs, VCDs, and various streaming protocols. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Tools section.","title":"Tools"},{"location":"Tools/#tools","text":"","title":"Tools"},{"location":"Tools/#overview","text":"The BitCurator Environment includes many individual tools to perform specific curation tasks. Listed here are all tools packaged by default in the environment, organized by the folder found on the BitCurator desktop. Links will take users to the corresponding external site or documentation. Where applicable, relevant BitCurator Step-by-Step Guides are listed as well. Because BitCurator is an Ubuntu environment, users are able to download and install tools as in any other Ubuntu distribution or Linux OS. In addition, much functionality is found in the file navigation system, Nautilus, through contextual menus. Listed are guides for many of these scripts. Data Triage Create MD5 Sums Display a file in Hex editor Disk Image Metadata Extract Compressed Files Live Search for Files Safely Mount Device Imaging and Recovery Brasero : GUI application to copy data and audio CD and DVDs Guymager : Open-source forensic disk imaging tool See the Creating a Disk Image Using Guymager Step-by-Step Guide . cdrdao : CD imaging tool (primarily for audio CDs) Clonezilla : A imaging and cloning program for partitions and disks dcfldd : A forensics-focused rewrite of dd dd : Create raw disk images and transfer data between devices ddrescue : A version of dd with additional options for data recovery dumpfloppy : Suite of tools for reading floppy disks in arbitrary formats supported by the PC floppy controller, and for working with the resulting image files ewfacquire : Acquire Expert Witness packaged disk images from devices on the command line. Part of the libewf library of Expert Witness tools. More documentation at the Forensics wiki . Forensic analysis tools BitCurator Disk Image Access: A GUI interface to browse raw and forensically-packaged disk images, export files and deleted items, and view disk image metadata. BitCurator Mounter : A GUI application to list currently attached devices along with technical details. Allows users to mount fixed and removable media according to the current mount policy. BitCurator Reporting Tool : A GUI-driven (and optionally command-line) tool for running forensics tools in sequence to produce human- and machine-readable reports in DFXML . Find instructions at the Creating Disk Image Reports using the BitCurator Reporting Tool Step-by-Step Guide . Use of the Reporting Tool is also covered in the Quickstart Guide . Brunnhilde : Generates aggregate reports of files in a directory or disk image based on input from Richard Lehane's Siegfried . bulk_extractor Viewer (BEViewer) : A GUI front-end for bulk_extractor See the Bulk Extractor Viewer Step-by-Step Guide . See the Regular Expressions in Bulk Extractor Step-by-Step Guide . bulk_extractor is a critical component of the Annotated Features Report Step-by-Step Guide . Disktype : Detects the content format of a disk or disk image Fiwalk : Fiwalk is part of The Sleuth Kit's collection of digital forensics tools and is used to produce a DFXML (Digital Forensics XML) report on the contents of a disk image within the BitCurator Reporting Tool . See the fiwalk Step-by-Step Guide . md5deep : Set of programs to compute MD5, SHA-1, SHA-256, Tiger, or Whirlpool message digests on an arbitrary number of files nsrllookup : Query tool to check for a matching MD5 hash in the National Software Reference Library Reference Data Set PhotoRec : File data recovery software designed to recover lost files including video, documents and archives from hard disks, CD-ROMs, and lost pictures from digital camera memory RegRipper : Tool for extracting and parsing information (keys, values, data) from the Windows Registry SDHash : File similarity tool using similarity digests ssdeep : Fast hash generation TestDisk : Data recovery software with focus on recovering lost partitions, making non-booting disks bootable again/partition table recovery Packaging and Transfer BagIt Python Library : Command line implementation of the BagIt specification Grsync : GUI fronted for the rysnc command line tool to synchronize or transfer data between locations","title":"Overview"},{"location":"Tools/#additional-tools","text":"Antiword : Converts the Microsoft Word 2, 6, 7, 97, 2000, 2002 and 2003 formats to plain text and PostScript BitCurator Reports (command line): Command line implementation of the BitCurator Reporting Tool , see GUI entry under the Forensic analysis tools section Bless Hex Editor : Hex editor to edit and view files as a sequence of bytes ClamTK : Virus scanning FIDO Format Identification : Command line tool to identify the file formats of digital objects, designed for integration into automated workflows Fiwalk (command line): Fiwalk is part of The Sleuth Kit's collection of digital forensics tools and is used to produce a DFXML (Digital Forensics XML) report on the contents of a disk image within the BitCurator Reporting Tool . See the fiwalk Step-by-Step Guide . GHex : A hex viewer/editor GtkHash : A cryptographic hashing tool Hashrat : Hashing tool supporting MD5, SHA1, SAH256, SHA512, Whirlpool, JH and HMAC versions of these. Includes recursive file hashing and other features. H FS Explorer : Provides access to the legacy HFS file systems See the View and export information from HFS-formatted disk images Step-by-Step Guide . Match BE Features to File Names : Command line implementation of the BitCurator Reporting Tool function nwipe : Securely erase disks Read Outlook PST File : A utility for reading and exporting the contents of PST files. System Profiler and Benchmark : Link to the native system information tool VLC media player : Multimedia player and framework that plays most multimedia files as well as DVDs, audio CDs, VCDs, and various streaming protocols. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Tools section.","title":"Additional tools"},{"location":"Troubleshooting%20and%20FAQ/","text":"Troubleshooting and FAQ Troubleshooting Where can I go to get help? I'm having trouble reading a specific legacy floppy disk. I've added the BitCurator VM using VirtualBox, but the virtual machine won't start (or crashes when it tries to boot) ) I've downloaded the BitCurator virtual machine. What do I do with this .tar.gz file? I mounted a USB drive and lost control of my mouse cursor Why isn\u2019t Bulk Extractor finding SSNs that I know are there? Using an FC5025 with the BitCurator VM FAQ Is BitCurator intended to be a data preservation environment? I work at a small institution with limited resources. Am I going to need an expensive new dedicated workstation just to do digital forensics work? The BitCurator virtual machine is built for VirtualBox. Can I use VMWare instead? What's a hardware write-blocker? Do I really need one? What's the advantage of saving my disk images as AFF or E01 rather than raw? What file systems does BitCurator support? Will BitCurator help me crack passwords on encrypted files in my collection? Troubleshooting Where can I go to get help? The BitCurator Google Group is the place to post questions and discuss issues. There, an active BitCurator community of practitioners ask for and offer help. I'm having trouble reading a specific legacy floppy disk. Problem Determining how to extract data from a specific floppy disk within my collection. Solution BitCurator does not provide specific solutions for working with magnetic media. There are a number of projects that handle floppy drive interfaces. In particular, these include the KryoFlux ( a low-level data recovery device widely-used within the archives community), the SuperCard Pro (similar to the KryoFlux but with more limited support), the FC5025 (a USB interface for 5.25\" drives) and the DiscFerret . Given the appropriate floppy interface, software used by BitCurator can read raw data on any required media. I've added the BitCurator VM using VirtualBox, but the virtual machine won't start (or crashes when it tries to boot) Problem The Virtual Machine won't boot, or crashes on startup. Solution There are a number of reasons this could be happening. If you're attempting to run BitCurator on a machine with less than 4GB of RAM, the default settings could be causing the host to lock up. Check the Oracle VM VirtualBox Manager to see if any of the tabs under \"Settings\" are indicating \"non-optimal settings detected\". Many PC laptops with Intel processors ship with hardware-assisted virtualization extensions disabled in the BIOS , which may affect your ability to run 64-bit guest OSs in VirtualBox in Windows. If this is the case, you will need to reboot the machine and change the BIOS settings to enable Intel VT-x extensions . The process for doing this varies from machine to machine. You may need to Google the manufacturer and model of your machine along with \"VT-x enable\" to determine how to do this. If you're attempting to run BitCurator on a machine running a 32-bit (uncommon) operating system, please note that we do not test or support this configuration. I've downloaded the BitCurator virtual machine. What do I do with this .tar.gz file? Problem I'm not familiar with the .tar.gz format, or how to unpack it. Solution On most modern Windows 10 and Mac OS operating systems, you can simply double-click on the file to decompress the contained folder. If you're using an earlier version of Windows (not recommended or supported), you can download 7-zip here to provide support for this compressed format. Once you've installed 7-zip, you'll need to right click on the .tar.gz file and click \"Extract here\". Once the .tar file has been extracted, you'll need to right click on that file and again click \"Extract here\". This will produce a folder containing the latest BitCurator virtual machine image. Once you've extracted the contents, you can add the machine in VirtualBox by choosing Machine->Add in the VirtualBox menu, and navigating to the location where you've extracted the .vdi and .vbox files. On a Mac, you can simply double-click the .tar.gz file, and the built-in extractor should take care of extracting the contents. Then you can add the VM in VirtualBox using the same method. I mounted a USB drive and lost control of my mouse cursor Problem Mouse control lost when plugging in another USB device. Solution This is a known issue with VirtualBox on some Windows hosts when both a USB mouse and USB drive are plugged into the computer. On some Windows systems you may need to right-click on the Oracle VirtualBox icon and choose \"Run as Administrator\" when starting up VirtualBox. Alternatively, shut down BitCurator and unplug the USB drive; restart BitCurator. Once BitCurator has fully started up, plug the USB drive in again; both the drive and your mouse should now work. Why isn\u2019t Bulk Extractor finding SSNs that I know are there? Problem Bulk Extractor does not find Social Security numbers that you as a user know are present in the disk or directory being scanned. Solution Command line In Bulk Extractor 1.5+, the program offers three modes for identifying social security numbers. These are: ssn_mode=0 SSN\u2019s must be labeled \u201cSSN:\u201d. Dashes or no dashes are okay. ssn_mode=1 No \u201cSSN\u201d required, but dashes are required. ssn_mode=2 No dashes required. Allow any 9-digit number that matches SSN allocation range. By default, Bulk Extractor uses ssn_mode 0, meaning that only social security numbers prefaced with the exact string \"SSN:\" will be located. When running Bulk Extractor from the command line, you can specify which ssn_mode to use with the -S flag. For example, to use ssn_mode pattern matching mode 1, the appropriate command is: bulk_extractor -S ssn_mode=1 -o <output directory> -i <source to scan> Using higher ssn_modes will likely result in more matches (including, potentially, more false positives). Bulk Extractor Viewer (GUI) BEViewer (Bulk Extractor Viewer) does not currently allow users to select which ssn_mode to use for pattern matching of Social Security numbers. However, BEViewer does allow users to specify particular regular expressions to search for, the results of which are written into the \"find.txt\" feature file. In the \"Run bulk_extractor\" menu, the user can enter a regular expression directly into the GUI using the \"Use Find Regex Text\" option or provide a regular expressions file to Bulk Extractor with the \"Use Find Regex Text File\" option. To find all valid SSNs matching the patterns #########, ### ## ####, or ###-##-####, you can use the following regex: ^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$ Using an FC5025 with the BitCurator VM See this post: http://www.wcsarchivesblog.org/getting-data-out-of-its-floppy-cage/ for additional guidance. FAQ Is BitCurator intended to be a data preservation environment? Problem I'm trying to determine if BitCurator can be used as a discrete data preservation environment. Solution BitCurator is not a data preservation environment . BitCurator is intended to support existing long-term data preservation environments, both as a data triage system and as a provider of software that may be integrated as microservices into existing toolchains. BitCurator depends on and produces only open source and public domain software, in order that the technologies may be fully integrated into existing Free data management and preservation environments such as Archivematica . I work at a small institution with limited resources. Am I going to need an expensive new dedicated workstation just to do digital forensics work? Problem Determining if the hardware requirements for digital forensics tools are within my budget. Solution Modern digital forensics workstations incorporate features such as built-in write-blockers, hard-disk cooling trays, and dedicated storage media for local artifacts and databases in order to support a high level of performance and low level of failure in risk-reduced environments. The higher initial cost (relative to a standard workstation) is often offset by the simplicity of having an integrated, manufacturer-supported solution. However, most of the functionality can be replicated on standard desktop hardware using add-on write blockers. If you have a clear plan for of the types of media you will be working with, purchasing standalone write-blockers, external drives, and cooling solutions to work with existing hardware can lower the overall cost. The BitCurator virtual machine is built for VirtualBox. Can I use VMWare instead? Problem Trying to run the virtual machine in VMWare. Solution The BitCurator VM is shipped as a .vdi, which is VirtualBox-specific. You can convert a .vdi to .vmdk (the VMWare native format) by following the instructions on this page . This process can be somewhat involved. A more reliable alternative is simply to create a new VMWare-specific VM and install BitCurator on that using the BitCurator ISO. What's a hardware write-blocker? Do I really need one? Problem Determining whether a hardware write-blocker is appropriate for my use case. Solution A hardware write-blocker is a device that connects to your host machine and prevents inadvertent changes to writeable media. Changes can be caused by modern operating systems at the time of connection even if you do not issue an explicit command or action within the operating system. Detailed information is available at the forensics wiki . We recommend that you use a hardware write blocker with all writable media, in order to prevent hidden, accidental, and malicious changes. We do not make specific hardware recommendations; the BitCurator project has successfully tested Tableau USB writeblockers, Tableau Ultrabays, and Digital Intelligence read-only switchable 3.5\" floppy drives with a variety of media. NIST has prepared a series of technical reports on tests of software write blockers. The reports can be found at software write block tools page . What's the advantage of saving my disk images as AFF or E01 rather than raw? Problem Determining whether or not a forensic disk image format is appropriate for my use case. Solution Both the Advanced Forensic Format (AFF) and Expert Witness Format (E01) file formats supported by BitCurator store bitstreams compressed, and incorporate metadata about the capture process and device configuration. There are some known issues with AFFv3 when working with heavily fragmented NTFS volumes. The original developer recommends the use of E01, which has a fully open library for read and write access. Forensic formats can provide an additional degree of resilience against bitrot in the long term, as file damage can be isolated to checksummed segments within the image. What file systems does BitCurator support? Problem Determining which file systems are supported by BitCurator. Solution BitCurator natively supports FAT16, FAT32, NTFS, HFS, HFS+ and ext2, 3, and 4. The various forensic tools included may support only a subset of these (for example, The Sleuthkit does not provide support for legacy HFS). The BitCurator virtual environment can recognize and provide browsable access to additional file systems, but many of the tools that the we rely on (including fiwalk for producing file system hierarchical metadata) are currently limited to these file systems. Note that stream-based tools, such as bulk_extractor, will attempt to extract relevant features irrespective of the underlying file system, although the effectiveness of the feature extractors will be limited in cases where the underlying file formats are not recognized. Will BitCurator help me crack passwords on encrypted files in my collection? Problem I'm trying to decrypt or crack a specific item within my collection. Solution BitCurator does not currently include password or encryption cracking tools. There are many good commercial and open source tools to help you do this, some of which can be installed in BitCurator. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Troubleshooting and FAQ section.","title":"Troubleshooting and FAQ"},{"location":"Troubleshooting%20and%20FAQ/#troubleshooting-and-faq","text":"Troubleshooting Where can I go to get help? I'm having trouble reading a specific legacy floppy disk. I've added the BitCurator VM using VirtualBox, but the virtual machine won't start (or crashes when it tries to boot) ) I've downloaded the BitCurator virtual machine. What do I do with this .tar.gz file? I mounted a USB drive and lost control of my mouse cursor Why isn\u2019t Bulk Extractor finding SSNs that I know are there? Using an FC5025 with the BitCurator VM FAQ Is BitCurator intended to be a data preservation environment? I work at a small institution with limited resources. Am I going to need an expensive new dedicated workstation just to do digital forensics work? The BitCurator virtual machine is built for VirtualBox. Can I use VMWare instead? What's a hardware write-blocker? Do I really need one? What's the advantage of saving my disk images as AFF or E01 rather than raw? What file systems does BitCurator support? Will BitCurator help me crack passwords on encrypted files in my collection?","title":"Troubleshooting and FAQ"},{"location":"Troubleshooting%20and%20FAQ/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"Troubleshooting%20and%20FAQ/#where-can-i-go-to-get-help","text":"The BitCurator Google Group is the place to post questions and discuss issues. There, an active BitCurator community of practitioners ask for and offer help.","title":"Where can I go to get help?"},{"location":"Troubleshooting%20and%20FAQ/#im-having-trouble-reading-a-specific-legacy-floppy-disk","text":"","title":"I'm having trouble reading a specific legacy floppy disk."},{"location":"Troubleshooting%20and%20FAQ/#problem","text":"Determining how to extract data from a specific floppy disk within my collection.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution","text":"BitCurator does not provide specific solutions for working with magnetic media. There are a number of projects that handle floppy drive interfaces. In particular, these include the KryoFlux ( a low-level data recovery device widely-used within the archives community), the SuperCard Pro (similar to the KryoFlux but with more limited support), the FC5025 (a USB interface for 5.25\" drives) and the DiscFerret . Given the appropriate floppy interface, software used by BitCurator can read raw data on any required media.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#ive-added-the-bitcurator-vm-using-virtualbox-but-the-virtual-machine-wont-start-or-crashes-when-it-tries-to-boot","text":"","title":"I've added the BitCurator VM using VirtualBox, but the virtual machine won't start (or crashes when it tries to boot)"},{"location":"Troubleshooting%20and%20FAQ/#problem_1","text":"The Virtual Machine won't boot, or crashes on startup.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_1","text":"There are a number of reasons this could be happening. If you're attempting to run BitCurator on a machine with less than 4GB of RAM, the default settings could be causing the host to lock up. Check the Oracle VM VirtualBox Manager to see if any of the tabs under \"Settings\" are indicating \"non-optimal settings detected\". Many PC laptops with Intel processors ship with hardware-assisted virtualization extensions disabled in the BIOS , which may affect your ability to run 64-bit guest OSs in VirtualBox in Windows. If this is the case, you will need to reboot the machine and change the BIOS settings to enable Intel VT-x extensions . The process for doing this varies from machine to machine. You may need to Google the manufacturer and model of your machine along with \"VT-x enable\" to determine how to do this. If you're attempting to run BitCurator on a machine running a 32-bit (uncommon) operating system, please note that we do not test or support this configuration.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#ive-downloaded-the-bitcurator-virtual-machine-what-do-i-do-with-this-targz-file","text":"","title":"I've downloaded the BitCurator virtual machine. What do I do with this .tar.gz file?"},{"location":"Troubleshooting%20and%20FAQ/#problem_2","text":"I'm not familiar with the .tar.gz format, or how to unpack it.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_2","text":"On most modern Windows 10 and Mac OS operating systems, you can simply double-click on the file to decompress the contained folder. If you're using an earlier version of Windows (not recommended or supported), you can download 7-zip here to provide support for this compressed format. Once you've installed 7-zip, you'll need to right click on the .tar.gz file and click \"Extract here\". Once the .tar file has been extracted, you'll need to right click on that file and again click \"Extract here\". This will produce a folder containing the latest BitCurator virtual machine image. Once you've extracted the contents, you can add the machine in VirtualBox by choosing Machine->Add in the VirtualBox menu, and navigating to the location where you've extracted the .vdi and .vbox files. On a Mac, you can simply double-click the .tar.gz file, and the built-in extractor should take care of extracting the contents. Then you can add the VM in VirtualBox using the same method.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#i-mounted-a-usb-drive-and-lost-control-of-my-mouse-cursor","text":"","title":"I mounted a USB drive and lost control of my mouse cursor"},{"location":"Troubleshooting%20and%20FAQ/#problem_3","text":"Mouse control lost when plugging in another USB device.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_3","text":"This is a known issue with VirtualBox on some Windows hosts when both a USB mouse and USB drive are plugged into the computer. On some Windows systems you may need to right-click on the Oracle VirtualBox icon and choose \"Run as Administrator\" when starting up VirtualBox. Alternatively, shut down BitCurator and unplug the USB drive; restart BitCurator. Once BitCurator has fully started up, plug the USB drive in again; both the drive and your mouse should now work.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#why-isnt-bulk-extractor-finding-ssns-that-i-know-are-there","text":"","title":"Why isn\u2019t Bulk Extractor finding SSNs that I know are there?"},{"location":"Troubleshooting%20and%20FAQ/#problem_4","text":"Bulk Extractor does not find Social Security numbers that you as a user know are present in the disk or directory being scanned.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_4","text":"","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#command-line","text":"In Bulk Extractor 1.5+, the program offers three modes for identifying social security numbers. These are: ssn_mode=0 SSN\u2019s must be labeled \u201cSSN:\u201d. Dashes or no dashes are okay. ssn_mode=1 No \u201cSSN\u201d required, but dashes are required. ssn_mode=2 No dashes required. Allow any 9-digit number that matches SSN allocation range. By default, Bulk Extractor uses ssn_mode 0, meaning that only social security numbers prefaced with the exact string \"SSN:\" will be located. When running Bulk Extractor from the command line, you can specify which ssn_mode to use with the -S flag. For example, to use ssn_mode pattern matching mode 1, the appropriate command is: bulk_extractor -S ssn_mode=1 -o <output directory> -i <source to scan> Using higher ssn_modes will likely result in more matches (including, potentially, more false positives).","title":"Command line"},{"location":"Troubleshooting%20and%20FAQ/#bulk-extractor-viewer-gui","text":"BEViewer (Bulk Extractor Viewer) does not currently allow users to select which ssn_mode to use for pattern matching of Social Security numbers. However, BEViewer does allow users to specify particular regular expressions to search for, the results of which are written into the \"find.txt\" feature file. In the \"Run bulk_extractor\" menu, the user can enter a regular expression directly into the GUI using the \"Use Find Regex Text\" option or provide a regular expressions file to Bulk Extractor with the \"Use Find Regex Text File\" option. To find all valid SSNs matching the patterns #########, ### ## ####, or ###-##-####, you can use the following regex: ^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$","title":"Bulk Extractor Viewer (GUI)"},{"location":"Troubleshooting%20and%20FAQ/#using-an-fc5025-with-the-bitcurator-vm","text":"See this post: http://www.wcsarchivesblog.org/getting-data-out-of-its-floppy-cage/ for additional guidance.","title":"Using an FC5025 with the BitCurator VM"},{"location":"Troubleshooting%20and%20FAQ/#faq","text":"","title":"FAQ"},{"location":"Troubleshooting%20and%20FAQ/#is-bitcurator-intended-to-be-a-data-preservation-environment","text":"","title":"Is BitCurator intended to be a data preservation environment?"},{"location":"Troubleshooting%20and%20FAQ/#problem_5","text":"I'm trying to determine if BitCurator can be used as a discrete data preservation environment.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_5","text":"BitCurator is not a data preservation environment . BitCurator is intended to support existing long-term data preservation environments, both as a data triage system and as a provider of software that may be integrated as microservices into existing toolchains. BitCurator depends on and produces only open source and public domain software, in order that the technologies may be fully integrated into existing Free data management and preservation environments such as Archivematica .","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#i-work-at-a-small-institution-with-limited-resources-am-i-going-to-need-an-expensive-new-dedicated-workstation-just-to-do-digital-forensics-work","text":"","title":"I work at a small institution with limited resources. Am I going to need an expensive new dedicated workstation just to do digital forensics work?"},{"location":"Troubleshooting%20and%20FAQ/#problem_6","text":"Determining if the hardware requirements for digital forensics tools are within my budget.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_6","text":"Modern digital forensics workstations incorporate features such as built-in write-blockers, hard-disk cooling trays, and dedicated storage media for local artifacts and databases in order to support a high level of performance and low level of failure in risk-reduced environments. The higher initial cost (relative to a standard workstation) is often offset by the simplicity of having an integrated, manufacturer-supported solution. However, most of the functionality can be replicated on standard desktop hardware using add-on write blockers. If you have a clear plan for of the types of media you will be working with, purchasing standalone write-blockers, external drives, and cooling solutions to work with existing hardware can lower the overall cost.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#the-bitcurator-virtual-machine-is-built-for-virtualbox-can-i-use-vmware-instead","text":"","title":"The BitCurator virtual machine is built for VirtualBox. Can I use VMWare instead?"},{"location":"Troubleshooting%20and%20FAQ/#problem_7","text":"Trying to run the virtual machine in VMWare.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_7","text":"The BitCurator VM is shipped as a .vdi, which is VirtualBox-specific. You can convert a .vdi to .vmdk (the VMWare native format) by following the instructions on this page . This process can be somewhat involved. A more reliable alternative is simply to create a new VMWare-specific VM and install BitCurator on that using the BitCurator ISO.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#whats-a-hardware-write-blocker-do-i-really-need-one","text":"","title":"What's a hardware write-blocker? Do I really need one?"},{"location":"Troubleshooting%20and%20FAQ/#problem_8","text":"Determining whether a hardware write-blocker is appropriate for my use case.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_8","text":"A hardware write-blocker is a device that connects to your host machine and prevents inadvertent changes to writeable media. Changes can be caused by modern operating systems at the time of connection even if you do not issue an explicit command or action within the operating system. Detailed information is available at the forensics wiki . We recommend that you use a hardware write blocker with all writable media, in order to prevent hidden, accidental, and malicious changes. We do not make specific hardware recommendations; the BitCurator project has successfully tested Tableau USB writeblockers, Tableau Ultrabays, and Digital Intelligence read-only switchable 3.5\" floppy drives with a variety of media. NIST has prepared a series of technical reports on tests of software write blockers. The reports can be found at software write block tools page .","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#whats-the-advantage-of-saving-my-disk-images-as-aff-or-e01-rather-than-raw","text":"","title":"What's the advantage of saving my disk images as AFF or E01 rather than raw?"},{"location":"Troubleshooting%20and%20FAQ/#problem_9","text":"Determining whether or not a forensic disk image format is appropriate for my use case.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_9","text":"Both the Advanced Forensic Format (AFF) and Expert Witness Format (E01) file formats supported by BitCurator store bitstreams compressed, and incorporate metadata about the capture process and device configuration. There are some known issues with AFFv3 when working with heavily fragmented NTFS volumes. The original developer recommends the use of E01, which has a fully open library for read and write access. Forensic formats can provide an additional degree of resilience against bitrot in the long term, as file damage can be isolated to checksummed segments within the image.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#what-file-systems-does-bitcurator-support","text":"","title":"What file systems does BitCurator support?"},{"location":"Troubleshooting%20and%20FAQ/#problem_10","text":"Determining which file systems are supported by BitCurator.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_10","text":"BitCurator natively supports FAT16, FAT32, NTFS, HFS, HFS+ and ext2, 3, and 4. The various forensic tools included may support only a subset of these (for example, The Sleuthkit does not provide support for legacy HFS). The BitCurator virtual environment can recognize and provide browsable access to additional file systems, but many of the tools that the we rely on (including fiwalk for producing file system hierarchical metadata) are currently limited to these file systems. Note that stream-based tools, such as bulk_extractor, will attempt to extract relevant features irrespective of the underlying file system, although the effectiveness of the feature extractors will be limited in cases where the underlying file formats are not recognized.","title":"Solution"},{"location":"Troubleshooting%20and%20FAQ/#will-bitcurator-help-me-crack-passwords-on-encrypted-files-in-my-collection","text":"","title":"Will BitCurator help me crack passwords on encrypted files in my collection?"},{"location":"Troubleshooting%20and%20FAQ/#problem_11","text":"I'm trying to decrypt or crack a specific item within my collection.","title":"Problem"},{"location":"Troubleshooting%20and%20FAQ/#solution_11","text":"BitCurator does not currently include password or encryption cracking tools. There are many good commercial and open source tools to help you do this, some of which can be installed in BitCurator. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Troubleshooting and FAQ section.","title":"Solution"},{"location":"About/Original%20Project%20Diagrams/","text":"Original Project Diagrams The following original diagrams for the BitCurator Environment's functionality give insight into the high-level design and thought process for acquisition, processing, analysis and description, along with the technical implementation of tools and specifications. Forensic Disk Imaging Forensic Processing and Identification of Potentially Sensitive Information Data Triage Metadata Export If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the About section.","title":"Original Project Diagrams"},{"location":"About/Original%20Project%20Diagrams/#original-project-diagrams","text":"The following original diagrams for the BitCurator Environment's functionality give insight into the high-level design and thought process for acquisition, processing, analysis and description, along with the technical implementation of tools and specifications.","title":"Original Project Diagrams"},{"location":"About/Original%20Project%20Diagrams/#forensic-disk-imaging","text":"","title":"Forensic Disk Imaging"},{"location":"About/Original%20Project%20Diagrams/#forensic-processing-and-identification-of-potentially-sensitive-information","text":"","title":"Forensic Processing and Identification of Potentially Sensitive Information"},{"location":"About/Original%20Project%20Diagrams/#data-triage","text":"","title":"Data Triage"},{"location":"About/Original%20Project%20Diagrams/#metadata-export","text":"If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the About section.","title":"Metadata Export"},{"location":"About/Support%20and%20Past%20Funding/","text":"Support and Past Funding Grants from the Andrew W. Mellon Foundation supported the BitCurator project (a partnership between the School of Information and Library Science at the University of North Carolina at Chapel Hill and the Maryland Institute for Technology in the Humanities ) from September 2011 to September 2014. BitCurator Consortium members provide continuing support for the BitCurator environment. If you or your organization use BitCurator tools, please consider joining the Consortium ! If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the About section.","title":"Support and Past Funding"},{"location":"About/Support%20and%20Past%20Funding/#support-and-past-funding","text":"Grants from the Andrew W. Mellon Foundation supported the BitCurator project (a partnership between the School of Information and Library Science at the University of North Carolina at Chapel Hill and the Maryland Institute for Technology in the Humanities ) from September 2011 to September 2014. BitCurator Consortium members provide continuing support for the BitCurator environment. If you or your organization use BitCurator tools, please consider joining the Consortium ! If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the About section.","title":"Support and Past Funding"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/","text":"Forensics and Reporting Guides Overview Guides for file format identification, location of deleted files and files fragments, cryptographic hashing, and reporting on potentially private and personally identifying information. Guides Fiwalk pyExifToolGUI HFS Explorer Bulk Extractor Viewer Regular Expressions in Bulk Extractor Understanding Bulk Extractor Scanners Disk Image Reports Annotated Features Report Forensic Reports FSlint Access and Export Files from Disk Images Data Triage (Nautilus) Create MD5 Sums (Nautilus) Display a file in Hex editor (Nautilus) Disk Image Metadata (Nautilus) Extract Compressed Files (Nautilus) Live Search for Files (Nautilus) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Forensics and Reporting Guides"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/#forensics-and-reporting-guides","text":"","title":"Forensics and Reporting Guides"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/#overview","text":"Guides for file format identification, location of deleted files and files fragments, cryptographic hashing, and reporting on potentially private and personally identifying information.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/#guides","text":"Fiwalk pyExifToolGUI HFS Explorer Bulk Extractor Viewer Regular Expressions in Bulk Extractor Understanding Bulk Extractor Scanners Disk Image Reports Annotated Features Report Forensic Reports FSlint Access and Export Files from Disk Images Data Triage (Nautilus) Create MD5 Sums (Nautilus) Display a file in Hex editor (Nautilus) Disk Image Metadata (Nautilus) Extract Compressed Files (Nautilus) Live Search for Files (Nautilus) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Guides"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/","text":"Imaging and Recovery Guides Overview Whether you are creating forensic disk images, mounting physical media to inspect and analyze digital materials, or transferring files, BitCurator supports multiple acquisition scenarios. BitCurator uses open source disk imaging tools, such as Guymager and dcfldd , to capture bit-identical images from magnetic, optical, solid-state, and hybrid media. Disk images can be captured in various formats, including raw (just the bitstream), E01 (Expert Witness Format, which we support using the open source libewf library), and AFF (Advanced Forensic Format). Capturing disk images in forensic formats such as E01 and AFF provides many advantages. The images can be stored compressed or uncompressed, can be split into multiple storage containers, can be parsed at the file system level without explicitly extracting the raw image, and can be embedded with provenance and capture metadata. Forensic images ensure that no inadvertent changes are made during pre-ingest chain-of-custody , and provide a consistent baseline for generating different types of access materials. In the BitCurator Environment, forensically-packaged disk images can be mounted by right-clicking on them and selecting \"Mount Disk Image\". This allows you to browse the source in a safe, read-only environment. Guides Safely Mount Devices Imaging with Guymager If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Imaging and Recovery Guides"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/#imaging-and-recovery-guides","text":"","title":"Imaging and Recovery Guides"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/#overview","text":"Whether you are creating forensic disk images, mounting physical media to inspect and analyze digital materials, or transferring files, BitCurator supports multiple acquisition scenarios. BitCurator uses open source disk imaging tools, such as Guymager and dcfldd , to capture bit-identical images from magnetic, optical, solid-state, and hybrid media. Disk images can be captured in various formats, including raw (just the bitstream), E01 (Expert Witness Format, which we support using the open source libewf library), and AFF (Advanced Forensic Format). Capturing disk images in forensic formats such as E01 and AFF provides many advantages. The images can be stored compressed or uncompressed, can be split into multiple storage containers, can be parsed at the file system level without explicitly extracting the raw image, and can be embedded with provenance and capture metadata. Forensic images ensure that no inadvertent changes are made during pre-ingest chain-of-custody , and provide a consistent baseline for generating different types of access materials. In the BitCurator Environment, forensically-packaged disk images can be mounted by right-clicking on them and selecting \"Mount Disk Image\". This allows you to browse the source in a safe, read-only environment.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/#guides","text":"Safely Mount Devices Imaging with Guymager If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Guides"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/","text":"Packaging and Transfer Guides Overview Guide for preparing and packaging born-digital materials for transfer to preservation storage and access platforms. Guide Package files and metadata with Bagger Share files to and from the BitCurator Environment If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Packaging and Transfer Guides"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/#packaging-and-transfer-guides","text":"","title":"Packaging and Transfer Guides"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/#overview","text":"Guide for preparing and packaging born-digital materials for transfer to preservation storage and access platforms.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/#guide","text":"Package files and metadata with Bagger Share files to and from the BitCurator Environment If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Guide"},{"location":"All%20Step-by-Step%20Guides/Step-by-Step-Guides/","text":"All Step-by-Step Guides Overview The following guides provide step-by-step instructions for using the tools in BitCurator. See the BitCurator Walkthrough page for additional context, as well as information on how to use these tools as part of a workflow. Contents Imaging and Recovery Guides Forensics and Reporting Guides Packaging and Transfer Guides If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Step-by-Step-Guides/#all-step-by-step-guides","text":"","title":"All Step-by-Step Guides"},{"location":"All%20Step-by-Step%20Guides/Step-by-Step-Guides/#overview","text":"The following guides provide step-by-step instructions for using the tools in BitCurator. See the BitCurator Walkthrough page for additional context, as well as information on how to use these tools as part of a workflow.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Step-by-Step-Guides/#contents","text":"Imaging and Recovery Guides Forensics and Reporting Guides Packaging and Transfer Guides If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Contents"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Access%20and%20Export%20Files%20from%20Disk%20Images/","text":"Access and Export Files from Disk Images Overview The \"File Access\" tab in the BitCurator Reporting tool allows you to access files on a disk image (including partial, hidden, and deleted files). For example, you can use this tool to open and read a Word Document on a disk image. Step-by-Step Guide Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Once the BitCurator Reporting Tool finishes opening, select the \"File Access\" tab from the options along the top (see Figure 1). Figure 1 : Selecting the File Access tab. 3. In the \"Image File\" field, fill in or navigate to (using the \"...\" button to the right of the field) the disk image file you wish to access. In the \"Output Directory\" field, fill in or navigate to create a new folder in which to place the output. Click the \"Run\" button in the bottom-right of the window when you're done (see Figure 2). Figure 2 : Filling out the fields and clicking \"Run\". 4. You'll see a success message in the \"Command Line Output\" window once the utility has completed, and a new window will open allowing you to access the files on your disk image (including partial, hidden, and deleted files). Select any number of files you wish to view or work with and click the \"Export\" button to place them somewhere where you can work with them like normal files (see Figure 3). Figure 3 : Access the files on the disk image. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Access and Export Files from Disk Images"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Access%20and%20Export%20Files%20from%20Disk%20Images/#access-and-export-files-from-disk-images","text":"","title":"Access and Export Files from Disk Images"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Access%20and%20Export%20Files%20from%20Disk%20Images/#overview","text":"The \"File Access\" tab in the BitCurator Reporting tool allows you to access files on a disk image (including partial, hidden, and deleted files). For example, you can use this tool to open and read a Word Document on a disk image.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Access%20and%20Export%20Files%20from%20Disk%20Images/#step-by-step-guide","text":"Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Once the BitCurator Reporting Tool finishes opening, select the \"File Access\" tab from the options along the top (see Figure 1). Figure 1 : Selecting the File Access tab. 3. In the \"Image File\" field, fill in or navigate to (using the \"...\" button to the right of the field) the disk image file you wish to access. In the \"Output Directory\" field, fill in or navigate to create a new folder in which to place the output. Click the \"Run\" button in the bottom-right of the window when you're done (see Figure 2). Figure 2 : Filling out the fields and clicking \"Run\". 4. You'll see a success message in the \"Command Line Output\" window once the utility has completed, and a new window will open allowing you to access the files on your disk image (including partial, hidden, and deleted files). Select any number of files you wish to view or work with and click the \"Export\" button to place them somewhere where you can work with them like normal files (see Figure 3). Figure 3 : Access the files on the disk image. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Annotated%20Features%20Report/","text":"Annotated Features Report Overview The Annotated Features tab in the BitCurator Reporting Tool matches the \"features\" found by bulk_extractor with their corresponding file on the disk image. This step is necessary because bulk_extractor locates features by scanning the bit stream, not the file system . The annotated features report acts as a bridge between the output from bulk_extractor and the DFXML report from fiwalk to create a report that not only locates a feature, but also identifies the specific file in which it can be found. Bulk_extractor uses the term \"feature\" to describe any items it finds while scanning a disk image. A social security number or email address would be examples of a bulk_extractor feature. See this page for more information on what features bulk_extractor can locate.### Step-by-Step Guide Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Once the BitCurator Reporting Tool finishes opening, select the \"Annotated Features\" tab from the options along the top (see Figure 1). Type or navigate to the location of the following files or directories (see Figure 1): Image File: The location of the forensics disk image being analyzed. Bulk Extractor Feature Directory: The directory containing the bulk_extractor results from the disk image above. Annotated Feature Files Directory (new): A new directory the BitCurator Reporting Tool will create to contain the annotated features report you are currently generating. Note: if you use the navigation button to select this directory, type the name of the new directory in the \"Name:\" field on the top left of the window. Do not use the \"Create Folder\" button on the right to create this new directory (see Figure 2). Bulk Extractor Python Directory (optional): location of any additional python scripts--generally left blank Figure 1 : The Annotate Features tab in the BitCurator Reporting Tool. Figure 2 : Type the name of the new directory in the \"Name\" field. 4. Once each of the file and directory fields above are properly filled out, click the \"Run\" button. The activity bar on the bottom left will indicated the annotation process is still ongoing. Once complete, a success or error message will appear in the \"Command Line Output\" window (see Figure 3). Figure 3 : The annotated features report has been successfully created. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Annotated Features Report"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Annotated%20Features%20Report/#annotated-features-report","text":"","title":"Annotated Features Report"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Annotated%20Features%20Report/#overview","text":"The Annotated Features tab in the BitCurator Reporting Tool matches the \"features\" found by bulk_extractor with their corresponding file on the disk image. This step is necessary because bulk_extractor locates features by scanning the bit stream, not the file system . The annotated features report acts as a bridge between the output from bulk_extractor and the DFXML report from fiwalk to create a report that not only locates a feature, but also identifies the specific file in which it can be found. Bulk_extractor uses the term \"feature\" to describe any items it finds while scanning a disk image. A social security number or email address would be examples of a bulk_extractor feature. See this page for more information on what features bulk_extractor can locate.### Step-by-Step Guide Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Once the BitCurator Reporting Tool finishes opening, select the \"Annotated Features\" tab from the options along the top (see Figure 1). Type or navigate to the location of the following files or directories (see Figure 1): Image File: The location of the forensics disk image being analyzed. Bulk Extractor Feature Directory: The directory containing the bulk_extractor results from the disk image above. Annotated Feature Files Directory (new): A new directory the BitCurator Reporting Tool will create to contain the annotated features report you are currently generating. Note: if you use the navigation button to select this directory, type the name of the new directory in the \"Name:\" field on the top left of the window. Do not use the \"Create Folder\" button on the right to create this new directory (see Figure 2). Bulk Extractor Python Directory (optional): location of any additional python scripts--generally left blank Figure 1 : The Annotate Features tab in the BitCurator Reporting Tool. Figure 2 : Type the name of the new directory in the \"Name\" field. 4. Once each of the file and directory fields above are properly filled out, click the \"Run\" button. The activity bar on the bottom left will indicated the annotation process is still ongoing. Once complete, a success or error message will appear in the \"Command Line Output\" window (see Figure 3). Figure 3 : The annotated features report has been successfully created. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Bulk%20Extractor%20Viewer/","text":"Bulk Extractor Viewer Overview The Bulk Extractor Viewer (BEviewer) is a graphical interface for bulk_extractor , \"a C++ program that scans a disk image, a file, or a directory of files and extracts useful information without parsing the file system or file system structures. The results can be easily inspected, parsed, or processed with automated tools. bulk_extractor also creates a histogram of features that it finds, as features that are more common tend to be more important.\" While originally intended for law enforcement, bulk_extractor can be used by digital archivists to quickly and thoroughly examine a disk image for a wide variety of information. The most common use for such analysis is locating personally identifiable information (PII) that a donor may want redacted before his or her materials are made publicly available, but bulk_extractor can locate other types of potentially sensitive information as well. The instructions below take you through the process of running bulk_extractor via the Bulk Extractor Viewer utility, a GUI interface for running bulk_extractor and viewing the results. Archivists can view the results through the GUI and also further process them using the digital forensics tools in the BitCurator environment. Step-by-step Guide Using bulk_extractor to Find Potentially Sensitive Information on a Disk Image The first step is to create a working directory to hold the bulk_extractor data. To do this, open Nautilus by double clicking on the \"Home\" folder on your desktop. Then right click anywhere on the white background (i.e., not on an existing folder), and click \"Create New Folder\" from the pull-down menu. You can name the directory as you see fit, but for this example we'll name the directory \"test_data\". Next open the Bulk Extractor Viewer utility by double clicking on the \"Forensics Tools\" folder on your desktop, and then double clicking on \"Bulk Extractor Viewer\". After Bulk Extractor Viewer opens, click on the gear icon with the down arrow to begin generating a report using bulk_extractor (see Figure 1). Figure 1 : Click the gear icon to begin the bulk_extractor process. 4. Clicking on the Generate a Report icon will open the \"Run bulk_extractor\" window. From this window you can specify the image you would like to analyze, the location of the output directory, and further refine the types of data objects bulk_extractor will search for.To begin your analysis, first select the type of media you want to scan, which in our case is a disk image, so we'll select the \"image file\" radial button (see Figure 2) 5. Next, type or navigate to the location of the disk image in the \"Image file\" field (see Figure 2). Figure 2 : The \"Run bulk_extractor\" window. 6. Enter the name of the directory you wish to create for holding the Bulk Extractor output; Bulk Extractor Viewer will create this directory for you. For example, if you wanted to save the bulk_extractor output to a directory named \"be_reports\" in your working directory, you would enter \"/home/bcadmin/[name of working directory]/be_reports\" in the Output Feature Directory field. If the directory be_reports doesn't already exist, BE Viewer will create it for you. 7. Optional: If desired, you may check or uncheck the scanner options from the list on the right (see Figure 3). You can refine your analysis of the disk image by choosing which \"scanners\" bulk_extractor employs. \"Scanners\" in bulk_extractor are modular sets of rules that allow bulk_extractor to find specific types of information on a disk image. For example, if you have the \"accts\" scanner selected, bulk_extractor will find objects (which it calls \"features\") such as credit card numbers, social security numbers, phone numbers, etc. A chart defining the various scanners, how they may be useful to you, and where they output their results can be found here . Figure 3 : Scanner options in the Bulk Extractor Viewer. Note: Because bulk_extractor generates a large number of files, it requires a new directory for the output. Bulk_extractor will create the new directory. If you navigate to the output directory instead of type it in, a window will open asking you for the path to the new directory along with its name. In our example, the output directory would be \"/home/bcadmin/test_data/\" and the new directory to be created by bulk_extractor would be called \"be_data\" (see Figure 4). Figure 4 : The \"Name the output folder for bulk_extractor. 8. Finally, click the \"Start bulk_extractor\" button at the bottom of the screen to begin the scan. 9. Once bulk_extractor has finished analyzing the disk image, you can view the output by selecting the new report in the \"Reports\" window of Bulk Extractor Viewer. The report will be named after the Features Output Directory you created in step 6, so in our example we will see \"be_report\" (see Figure 5). Once you select the report, you will see a listing of each scanner for which a feature was found by bulk_extractor. Selecting a specific scanner or its histogram will cause the features to be listed in the window to the right. Selecting a specific feature will show the file in which it is located to be displayed in the \"Image\" window. Figure 5 : View the bulk_extractor report. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Bulk Extractor Viewer"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Bulk%20Extractor%20Viewer/#bulk-extractor-viewer","text":"","title":"Bulk Extractor Viewer"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Bulk%20Extractor%20Viewer/#overview","text":"The Bulk Extractor Viewer (BEviewer) is a graphical interface for bulk_extractor , \"a C++ program that scans a disk image, a file, or a directory of files and extracts useful information without parsing the file system or file system structures. The results can be easily inspected, parsed, or processed with automated tools. bulk_extractor also creates a histogram of features that it finds, as features that are more common tend to be more important.\" While originally intended for law enforcement, bulk_extractor can be used by digital archivists to quickly and thoroughly examine a disk image for a wide variety of information. The most common use for such analysis is locating personally identifiable information (PII) that a donor may want redacted before his or her materials are made publicly available, but bulk_extractor can locate other types of potentially sensitive information as well. The instructions below take you through the process of running bulk_extractor via the Bulk Extractor Viewer utility, a GUI interface for running bulk_extractor and viewing the results. Archivists can view the results through the GUI and also further process them using the digital forensics tools in the BitCurator environment.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Bulk%20Extractor%20Viewer/#step-by-step-guide","text":"","title":"Step-by-step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Bulk%20Extractor%20Viewer/#using-bulk_extractor-to-find-potentially-sensitive-information-on-a-disk-image","text":"The first step is to create a working directory to hold the bulk_extractor data. To do this, open Nautilus by double clicking on the \"Home\" folder on your desktop. Then right click anywhere on the white background (i.e., not on an existing folder), and click \"Create New Folder\" from the pull-down menu. You can name the directory as you see fit, but for this example we'll name the directory \"test_data\". Next open the Bulk Extractor Viewer utility by double clicking on the \"Forensics Tools\" folder on your desktop, and then double clicking on \"Bulk Extractor Viewer\". After Bulk Extractor Viewer opens, click on the gear icon with the down arrow to begin generating a report using bulk_extractor (see Figure 1). Figure 1 : Click the gear icon to begin the bulk_extractor process. 4. Clicking on the Generate a Report icon will open the \"Run bulk_extractor\" window. From this window you can specify the image you would like to analyze, the location of the output directory, and further refine the types of data objects bulk_extractor will search for.To begin your analysis, first select the type of media you want to scan, which in our case is a disk image, so we'll select the \"image file\" radial button (see Figure 2) 5. Next, type or navigate to the location of the disk image in the \"Image file\" field (see Figure 2). Figure 2 : The \"Run bulk_extractor\" window. 6. Enter the name of the directory you wish to create for holding the Bulk Extractor output; Bulk Extractor Viewer will create this directory for you. For example, if you wanted to save the bulk_extractor output to a directory named \"be_reports\" in your working directory, you would enter \"/home/bcadmin/[name of working directory]/be_reports\" in the Output Feature Directory field. If the directory be_reports doesn't already exist, BE Viewer will create it for you. 7. Optional: If desired, you may check or uncheck the scanner options from the list on the right (see Figure 3). You can refine your analysis of the disk image by choosing which \"scanners\" bulk_extractor employs. \"Scanners\" in bulk_extractor are modular sets of rules that allow bulk_extractor to find specific types of information on a disk image. For example, if you have the \"accts\" scanner selected, bulk_extractor will find objects (which it calls \"features\") such as credit card numbers, social security numbers, phone numbers, etc. A chart defining the various scanners, how they may be useful to you, and where they output their results can be found here . Figure 3 : Scanner options in the Bulk Extractor Viewer. Note: Because bulk_extractor generates a large number of files, it requires a new directory for the output. Bulk_extractor will create the new directory. If you navigate to the output directory instead of type it in, a window will open asking you for the path to the new directory along with its name. In our example, the output directory would be \"/home/bcadmin/test_data/\" and the new directory to be created by bulk_extractor would be called \"be_data\" (see Figure 4). Figure 4 : The \"Name the output folder for bulk_extractor. 8. Finally, click the \"Start bulk_extractor\" button at the bottom of the screen to begin the scan. 9. Once bulk_extractor has finished analyzing the disk image, you can view the output by selecting the new report in the \"Reports\" window of Bulk Extractor Viewer. The report will be named after the Features Output Directory you created in step 6, so in our example we will see \"be_report\" (see Figure 5). Once you select the report, you will see a listing of each scanner for which a feature was found by bulk_extractor. Selecting a specific scanner or its histogram will cause the features to be listed in the window to the right. Selecting a specific feature will show the file in which it is located to be displayed in the \"Image\" window. Figure 5 : View the bulk_extractor report. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Using bulk_extractor to Find Potentially Sensitive Information on a Disk Image"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Create%20MD5%20Sums%20%28Nautilus%29/","text":"Create MD5 Sums (Nautilus) Overview A checksum (of which MD5 sums are one type) is a string of characters produced by an algorithm acting on a file. The checksum is used to validate data integrity, as the algorithm will produce a different checksum if any changes occur to the file in question, making it easy to detect errors that may have been introduced during the file's transmission or storage (e.g. due to physical damage, bit rot, malicious intent, or accidental non-write-protected usage). The sum thus acts as an identifier for the file in its exact current state. You can calculate the sum at a point when you know your file (e.g. a disk image) isn't corrupted or altered from how you think it should be, and calculate the sum again at later points in time, comparing the newly calculated sum to the original sum to check that the disk has not been corrupted or altered. See this page for more on how checksums work. Step-by-Step Guide Open Nautilus and navigate to the file or files for which you would like to calculate MD5 sums. Select the desired file or files. Right click on any of the file icons and select Scripts > File Analysis > Calculate MD5 (see Figure 2). Figure 2 : Select \"Calculate MD5\" from the Nautilus script menu. 4. Select whether you would like the MD5 sum to be displayed or saved (if you have selected multiple files, the output will be saved by default) (see Figure 3). Figure 3 : Choose to either save or display the MD5 sum output. 5. If you chose to save the MD5 sum(s), a file listing each of the MD5's will be generated in your present directory. Otherwise the MD5 sum will be displayed in a window. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Create MD5 Sums (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Create%20MD5%20Sums%20%28Nautilus%29/#create-md5-sums-nautilus","text":"","title":"Create MD5 Sums (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Create%20MD5%20Sums%20%28Nautilus%29/#overview","text":"A checksum (of which MD5 sums are one type) is a string of characters produced by an algorithm acting on a file. The checksum is used to validate data integrity, as the algorithm will produce a different checksum if any changes occur to the file in question, making it easy to detect errors that may have been introduced during the file's transmission or storage (e.g. due to physical damage, bit rot, malicious intent, or accidental non-write-protected usage). The sum thus acts as an identifier for the file in its exact current state. You can calculate the sum at a point when you know your file (e.g. a disk image) isn't corrupted or altered from how you think it should be, and calculate the sum again at later points in time, comparing the newly calculated sum to the original sum to check that the disk has not been corrupted or altered. See this page for more on how checksums work.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Create%20MD5%20Sums%20%28Nautilus%29/#step-by-step-guide","text":"Open Nautilus and navigate to the file or files for which you would like to calculate MD5 sums. Select the desired file or files. Right click on any of the file icons and select Scripts > File Analysis > Calculate MD5 (see Figure 2). Figure 2 : Select \"Calculate MD5\" from the Nautilus script menu. 4. Select whether you would like the MD5 sum to be displayed or saved (if you have selected multiple files, the output will be saved by default) (see Figure 3). Figure 3 : Choose to either save or display the MD5 sum output. 5. If you chose to save the MD5 sum(s), a file listing each of the MD5's will be generated in your present directory. Otherwise the MD5 sum will be displayed in a window. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Creating%20Disk%20Image%20Reports%20using%20the%20BitCurator%20Reporting%20Tool/","text":"Creating Disk Image Reports using the BitCurator Reporting Tool Overview BitCurator users have the option to run a number of different reporting tools against their disk images. Although each of these tools can be run individually, users may alternatively use the \"Run All\" tab of the BitCurator Reporting Tool in order to simultaneously execute fiwalk , the annotated features report , and the BitCurator forensic reports . Step 1 Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Step 2 Select the \"Run All\" tab from the options along the top (\"Run All\" is the default selection, see Figure 1). Step 3 Type or navigate to the location of the following files or directories (see Figure 1): Image File: The location of the forensic disk image to be analyzed. Bulk Extractor Feature Directory: The directory containing the bulk_extractor results associated with the disk image above. Output Directory (fiwalk output, annotated features, and reports will appear in here): A new directory that will be created by the BitCurator Reporting Tool to contain the listed reports. Config File (optional): For additional configuration files; generally left empty. If you use the navigation button to select the Output Directory , type the name of the new directory in the \"Name:\" field at the top left of the window and then click \"Save\". Do not use the \"Create Folder\" button on the right to create this new directory. Figure 1 Step 4 Once each of the file and directory fields above are properly filled out, click the \"Run\" button. The activity bar on the bottom left will indicated that the report generation process is still ongoing. Once complete, a success or error message will appear in the \"Command Line Output\" window (see Figure 2). Figure 2 Step 5 Completion of the steps above generates the following files in the directory you specified under Output Directory in Step 3: features (directory): The annotated features generated by bulk extractor; bc_format_bargraph.pdf (file): Histogram showing file formats; bulk_extractor_report.pdf (file): High-level overview of bulk extractor feature locations on disk; fiwalk_deleted_files.pdf (file): File documenting paths to any deleted materials found in a given partition; fiwalk-output.xml.xlsx (file): DFXML output (file system metadata) converted to an Excel spreadsheet; fiwalk_report.pdf (file): High-level overview of file system characteristics; format_table.pdf (file): Long-form file format names for formats shown in bc_format_bargraph.pdf; premis.xml (file): PREMIS preservation metadata. Open the BitCurator reports directory to examine the files. You\u2019ll find visualizations, XLSX transcriptions of file system metadata, high-level reports on file types, and overviews of features identified by bulk_extractor. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Creating Disk Image Reports using the BitCurator Reporting Tool"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Creating%20Disk%20Image%20Reports%20using%20the%20BitCurator%20Reporting%20Tool/#creating-disk-image-reports-using-the-bitcurator-reporting-tool","text":"","title":"Creating Disk Image Reports using the BitCurator Reporting Tool"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Creating%20Disk%20Image%20Reports%20using%20the%20BitCurator%20Reporting%20Tool/#overview","text":"BitCurator users have the option to run a number of different reporting tools against their disk images. Although each of these tools can be run individually, users may alternatively use the \"Run All\" tab of the BitCurator Reporting Tool in order to simultaneously execute fiwalk , the annotated features report , and the BitCurator forensic reports . Step 1 Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Step 2 Select the \"Run All\" tab from the options along the top (\"Run All\" is the default selection, see Figure 1). Step 3 Type or navigate to the location of the following files or directories (see Figure 1): Image File: The location of the forensic disk image to be analyzed. Bulk Extractor Feature Directory: The directory containing the bulk_extractor results associated with the disk image above. Output Directory (fiwalk output, annotated features, and reports will appear in here): A new directory that will be created by the BitCurator Reporting Tool to contain the listed reports. Config File (optional): For additional configuration files; generally left empty. If you use the navigation button to select the Output Directory , type the name of the new directory in the \"Name:\" field at the top left of the window and then click \"Save\". Do not use the \"Create Folder\" button on the right to create this new directory. Figure 1 Step 4 Once each of the file and directory fields above are properly filled out, click the \"Run\" button. The activity bar on the bottom left will indicated that the report generation process is still ongoing. Once complete, a success or error message will appear in the \"Command Line Output\" window (see Figure 2). Figure 2 Step 5 Completion of the steps above generates the following files in the directory you specified under Output Directory in Step 3: features (directory): The annotated features generated by bulk extractor; bc_format_bargraph.pdf (file): Histogram showing file formats; bulk_extractor_report.pdf (file): High-level overview of bulk extractor feature locations on disk; fiwalk_deleted_files.pdf (file): File documenting paths to any deleted materials found in a given partition; fiwalk-output.xml.xlsx (file): DFXML output (file system metadata) converted to an Excel spreadsheet; fiwalk_report.pdf (file): High-level overview of file system characteristics; format_table.pdf (file): Long-form file format names for formats shown in bc_format_bargraph.pdf; premis.xml (file): PREMIS preservation metadata. Open the BitCurator reports directory to examine the files. You\u2019ll find visualizations, XLSX transcriptions of file system metadata, high-level reports on file types, and overviews of features identified by bulk_extractor. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/","text":"Data Triage (Nautilus) Nautilus (see Figure 1) is a popular GUI file manager for Linux and is the default file manager in Ubuntu Linux 12.04. It functions similarly to Windows Explorer on Windows systems and Finder on Macs. One key feature of Nautilus is the ability to add custom functionality by incorporating user-created back-end scripts . These scripts work much like plug-ins for a web browser and extend Nautilus's basic functionality. We have included a number of custom Nautilus scripts in the BitCurator Environment specifically geared to assist the digital archivist in pre-ingest data analysis. See below for specific instruction on how to use Nautilus to perform a number of critical data analysis tasks. Figure 1 : Nautilus file manager in Ubuntu Linux 12.04 Common disk image, file, and metadata handling tasks: Create MD5 Sums (Nautilus) Display a file in Hex editor (Nautilus) Disk Image Metadata (Nautilus) Extract Compressed Files (Nautilus) Live Search for Files (Nautilus) Review File Info and Details (Nautilus) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Data Triage (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#data-triage-nautilus","text":"Nautilus (see Figure 1) is a popular GUI file manager for Linux and is the default file manager in Ubuntu Linux 12.04. It functions similarly to Windows Explorer on Windows systems and Finder on Macs. One key feature of Nautilus is the ability to add custom functionality by incorporating user-created back-end scripts . These scripts work much like plug-ins for a web browser and extend Nautilus's basic functionality. We have included a number of custom Nautilus scripts in the BitCurator Environment specifically geared to assist the digital archivist in pre-ingest data analysis. See below for specific instruction on how to use Nautilus to perform a number of critical data analysis tasks. Figure 1 : Nautilus file manager in Ubuntu Linux 12.04","title":"Data Triage (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#common-disk-image-file-and-metadata-handling-tasks","text":"","title":"Common disk image, file, and metadata handling tasks:"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#create-md5-sums-nautilus","text":"","title":"Create MD5 Sums (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#display-a-file-in-hex-editor-nautilus","text":"","title":"Display a file in Hex editor (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#disk-image-metadata-nautilus","text":"","title":"Disk Image Metadata (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#extract-compressed-files-nautilus","text":"","title":"Extract Compressed Files (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#live-search-for-files-nautilus","text":"","title":"Live Search for Files (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Data%20Triage%20%28Nautilus%29/#review-file-info-and-details-nautilus","text":"If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Review File Info and Details (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Disk%20Image%20Metadata%20%28Nautilus%29/","text":"Disk Image Metadata (Nautilus) Overview One of the primary benefits to using forensics disk images--as opposed to a raw disk image--is that the metadata created during the imaging process is packaged with the disk image itself. That way, no matter where the disk image is moved, its metadata always travels with it. This Nautilus script allows users to quickly and easily view the forensics metadata associated with either an EnCase (E01) or Advanced Forensics Format (AFF) disk image. Step-by-Step Guide Open Nautilus and navigate to the directory containing either an AFF or E01 disk image. Right click on the disk image and select Scripts > Disk Image Info > Show E01 Info (or Show AFF Info if viewing an AFF disk image; see Figure 12). Figure 12 : Select either EO1 or AFF depending on the disk image type 3. A new window will open displaying the forensics metadata captured during the disk imaging process. The metadata displayed includes the case or accession number, a description of the original media, the name of the processor, original media size, date the disk image was create, any hashes created during the imaging process, and more (see Figure 13). Figure 13 : Metadata about the original media, disk image, and imaging process. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Disk Image Metadata (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Disk%20Image%20Metadata%20%28Nautilus%29/#disk-image-metadata-nautilus","text":"","title":"Disk Image Metadata (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Disk%20Image%20Metadata%20%28Nautilus%29/#overview","text":"One of the primary benefits to using forensics disk images--as opposed to a raw disk image--is that the metadata created during the imaging process is packaged with the disk image itself. That way, no matter where the disk image is moved, its metadata always travels with it. This Nautilus script allows users to quickly and easily view the forensics metadata associated with either an EnCase (E01) or Advanced Forensics Format (AFF) disk image.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Disk%20Image%20Metadata%20%28Nautilus%29/#step-by-step-guide","text":"Open Nautilus and navigate to the directory containing either an AFF or E01 disk image. Right click on the disk image and select Scripts > Disk Image Info > Show E01 Info (or Show AFF Info if viewing an AFF disk image; see Figure 12). Figure 12 : Select either EO1 or AFF depending on the disk image type 3. A new window will open displaying the forensics metadata captured during the disk imaging process. The metadata displayed includes the case or accession number, a description of the original media, the name of the processor, original media size, date the disk image was create, any hashes created during the imaging process, and more (see Figure 13). Figure 13 : Metadata about the original media, disk image, and imaging process. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Display%20a%20file%20in%20Hex%20editor%20%28Nautilus%29/","text":"Display a file in Hex editor (Nautilus) Open Nautilus and navigate to the desired file. Right click the file and select Scripts > File Analysis > View in Hexeditor (see Figure 6). Figure 6 : Viewing a file in hex. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Display a file in Hex editor (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Display%20a%20file%20in%20Hex%20editor%20%28Nautilus%29/#display-a-file-in-hex-editor-nautilus","text":"Open Nautilus and navigate to the desired file. Right click the file and select Scripts > File Analysis > View in Hexeditor (see Figure 6). Figure 6 : Viewing a file in hex. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Display a file in Hex editor (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Extract%20Compressed%20Files%20%28Nautilus%29/","text":"Extract Compressed Files (Nautilus) Open Nautilus and navigate to the archive you would like to decompress. Right click on the file that has been compressed using zip or gzip. Select 'Open With Archive Manager'. (Note that a compressed file type such as a zip file is often referred to as an 'archive' within the Ubuntu Linux environment and technical communities.) A new window will open from which you can either browse the contents or extract them (see Figure 10). Figure 10 : Either browse or extract the archive from this window. 4. Left click on the 'Extract' button to extract the contents. 5. Navigate to the location to which you would like the files extracted using the navigation window (see Figure 11). Figure 11 : Navigate to where you would like the file extracted and then click 'Extract'. 6. Left click the 'Extract' button on the bottom right of the window to complete the process. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Extract Compressed Files (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Extract%20Compressed%20Files%20%28Nautilus%29/#extract-compressed-files-nautilus","text":"Open Nautilus and navigate to the archive you would like to decompress. Right click on the file that has been compressed using zip or gzip. Select 'Open With Archive Manager'. (Note that a compressed file type such as a zip file is often referred to as an 'archive' within the Ubuntu Linux environment and technical communities.) A new window will open from which you can either browse the contents or extract them (see Figure 10). Figure 10 : Either browse or extract the archive from this window. 4. Left click on the 'Extract' button to extract the contents. 5. Navigate to the location to which you would like the files extracted using the navigation window (see Figure 11). Figure 11 : Navigate to where you would like the file extracted and then click 'Extract'. 6. Left click the 'Extract' button on the bottom right of the window to complete the process. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Extract Compressed Files (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/FSlint/","text":"FSlint As of February 5, 2020, FSlint is no longer included in the BitCurator Environment (version 2.2.0 and beyond). It can still be installed in the environment - see the project website for more details. Overview The BitCurator environment incorporates FSlint to help you to rapidly scan file directory contents to identify duplicate files, and delete selected items from those duplicates. Step-by-Step Guide Double-click on the \"Forensics Tools\" folder on the BitCurator desktop, then double-click on the \"FSlint\" icon. Click the button with the green plus sign that says \"Add\", at the left of the window, and navigate to the directory you wish to scan for duplicates. You can use the \"Add\" button to add more directories to scan, or use the \"Remove\" button immediately below it to remove a selected directory path from the list of directories to scan. \"Check the \"recurse?\" checkbox at the right side of the window if you wish to scan not just that directory's direct contents, but also the files inside any folders it contains (see Figure 1). Figure 1 : Choose the directories to scan for duplicates. 3. Click on the \"Find\" button with the magnifying glass icon in the lower-left of the window. A list of any located duplicate files will populate the window. Select any of these files that you wish to delete; select multiple files at once using the control key. Click on the \"Delete\" button at the bottom-right of the window (see Figure 2). Figure 2 : Viewing and deleting the duplicates. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"FSlint"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/FSlint/#fslint","text":"As of February 5, 2020, FSlint is no longer included in the BitCurator Environment (version 2.2.0 and beyond). It can still be installed in the environment - see the project website for more details.","title":"FSlint"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/FSlint/#overview","text":"The BitCurator environment incorporates FSlint to help you to rapidly scan file directory contents to identify duplicate files, and delete selected items from those duplicates.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/FSlint/#step-by-step-guide","text":"Double-click on the \"Forensics Tools\" folder on the BitCurator desktop, then double-click on the \"FSlint\" icon. Click the button with the green plus sign that says \"Add\", at the left of the window, and navigate to the directory you wish to scan for duplicates. You can use the \"Add\" button to add more directories to scan, or use the \"Remove\" button immediately below it to remove a selected directory path from the list of directories to scan. \"Check the \"recurse?\" checkbox at the right side of the window if you wish to scan not just that directory's direct contents, but also the files inside any folders it contains (see Figure 1). Figure 1 : Choose the directories to scan for duplicates. 3. Click on the \"Find\" button with the magnifying glass icon in the lower-left of the window. A list of any located duplicate files will populate the window. Select any of these files that you wish to delete; select multiple files at once using the control key. Click on the \"Delete\" button at the bottom-right of the window (see Figure 2). Figure 2 : Viewing and deleting the duplicates. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Fiwalk/","text":"Fiwalk Overview Fiwalk is part of The Sleuth Kit's collection of digital forensics tools and is used to produce a DFXML (Digital Forensics XML) report on the contents of a disk image. As the name suggests, fiwalk \"walks\" the file tree and collects information (metadata) about each of the files along the way, including the date the file was last accessed, the date it was last modified, the file type, the user who created the file, and more. Fiwalk can be run via the command line or from the BitCurator Reporting Tool. The instructions below detail the process of using fiwalk to generate DFXML output via the BitCurator Reporting Tool. Step-by-Step Guide Step 1: Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Step 2: Once the BitCurator Reporting Tool finishes opening, select the \"Fiwalk XML\" tab from the options along the top (see Figure 1). Step 3: Type the location of the disk image you would like to analyze in the \"Image File\" field, or navigate to the image by clicking on the \"...\" button to the right of the field (see Figure 1). Figure 1 : The Fiwalk XML tab in the BitCurator Reporting Tool. Step 4: Type the location and name of the DFXML file you would like to create in the \"Output XML File\" field or click on the \"...\" button to the right of the field to navigate to the directory in which you would like to create the file. The DFXML file can be named according to whatever naming conventions you are using for your collection, but it should end with a .xml extension. Once you have finished naming your DFXML file, click \"Save\" to return to the BitCurator Reporting Tool (see Figure 2). Figure 2: Step 5: Click \"Run\" in the bottom right-hand corner of the BitCurator Reporting Tool and wait for fiwalk to finish analyzing the disk image. The activity bar on the bottom left will indicate that fiwalk is still running. Once fiwalk has finished, a success or error message will appear in the \"Command Line Output\" window (see Figure 3). Figure 3: fiwalk has successfully create the DFXML file. Step 6: You can navigate to the DFXML file and open it with any program that handles XML display (e.g. any internet browser) to view the contents and confirm the file was created (see Figure 4). Figure 4: View the DFXML file. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Fiwalk"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Fiwalk/#fiwalk","text":"","title":"Fiwalk"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Fiwalk/#overview","text":"Fiwalk is part of The Sleuth Kit's collection of digital forensics tools and is used to produce a DFXML (Digital Forensics XML) report on the contents of a disk image. As the name suggests, fiwalk \"walks\" the file tree and collects information (metadata) about each of the files along the way, including the date the file was last accessed, the date it was last modified, the file type, the user who created the file, and more. Fiwalk can be run via the command line or from the BitCurator Reporting Tool. The instructions below detail the process of using fiwalk to generate DFXML output via the BitCurator Reporting Tool.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Fiwalk/#step-by-step-guide","text":"Step 1: Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Step 2: Once the BitCurator Reporting Tool finishes opening, select the \"Fiwalk XML\" tab from the options along the top (see Figure 1). Step 3: Type the location of the disk image you would like to analyze in the \"Image File\" field, or navigate to the image by clicking on the \"...\" button to the right of the field (see Figure 1). Figure 1 : The Fiwalk XML tab in the BitCurator Reporting Tool. Step 4: Type the location and name of the DFXML file you would like to create in the \"Output XML File\" field or click on the \"...\" button to the right of the field to navigate to the directory in which you would like to create the file. The DFXML file can be named according to whatever naming conventions you are using for your collection, but it should end with a .xml extension. Once you have finished naming your DFXML file, click \"Save\" to return to the BitCurator Reporting Tool (see Figure 2). Figure 2: Step 5: Click \"Run\" in the bottom right-hand corner of the BitCurator Reporting Tool and wait for fiwalk to finish analyzing the disk image. The activity bar on the bottom left will indicate that fiwalk is still running. Once fiwalk has finished, a success or error message will appear in the \"Command Line Output\" window (see Figure 3). Figure 3: fiwalk has successfully create the DFXML file. Step 6: You can navigate to the DFXML file and open it with any program that handles XML display (e.g. any internet browser) to view the contents and confirm the file was created (see Figure 4). Figure 4: View the DFXML file. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Forensic%20Reports/","text":"Forensic Reports Overview The culmination of the previous steps in the BitCurator process result in the BitCurator Forensic Reports. These reports bring together the various outputs from bulk_extractor, fiwalk and the annotation tool to generate both machine and human readable reports that can be read directly or crosswalked to other archival tools. Step-by-Step Guide Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Once the BitCurator Reporting Tool finishes opening, select the \"Reports\" tab from the options along the top (see Figure 1). Type or navigate to the location of the following files or directories (see Figure 1): Fiwalk XML File: The location of the DFXML output from running fiwalk . Annotated Features Files Directory: The directory containing the output from the Annotated Features report Output Directory For Reports (new): A new directory created by the BitCurator Reporting Tool to contain the BitCurator forensics reports. Note : if you use the navigation button to select this directory, type the name of the new directory in the \"Name:\" field on the top left of the window. Do not use the \"Create Folder\" button on the right to create this new directory. (see Figure 2). Config File (optional): For additional configuration files; generally left empty. Figure 1 : The Reports tab in the BitCurator Reporting Tool. Figure 2 : Type the name of the new directory in the \"Name\" field. 4. Once each of the file and directory fields above are properly filled out, click the \"Run\" button. The activity bar on the bottom left will indicated that the report generation process is still ongoing. Once complete, a success or error message will appear in the \"Command Line Output\" window (see Figure 3). Figure 3 : The BitCurator forensics reports have been successfully created. 5. Completion of the steps above generates the following files in the directory you specified under \"Output Directory\" in Step 3: * features (directory): the annotated features * bc\\_format\\_bargraph.pdf (file): the format histogram * bulk\\_extractor\\_report.pdf (file): high-level overview of feature locations on disk * fiwalk\\_deleted\\_files.pdf (file): shows paths to any deleted materials found in a given partition * fiwalk-output.xml.xlsx (file): Excel converted DFXML output (file system metadata) * fiwalk\\_report.pdf (file): High-level overview of file system characteristics * format\\_table.pdf (file): Long-form file format names for formats shown in bargraph * premis.xml (file): PREMIS preservation metadata Open the BitCurator reports directory to examine the files. You\u2019ll find visualizations, XLSX transcriptions of file system metadata, high-level reports on file types, and overviews of features identified by bulk\\_extractor. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Forensic Reports"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Forensic%20Reports/#forensic-reports","text":"","title":"Forensic Reports"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Forensic%20Reports/#overview","text":"The culmination of the previous steps in the BitCurator process result in the BitCurator Forensic Reports. These reports bring together the various outputs from bulk_extractor, fiwalk and the annotation tool to generate both machine and human readable reports that can be read directly or crosswalked to other archival tools.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Forensic%20Reports/#step-by-step-guide","text":"Open the BitCurator Reporting Tool by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"BitCurator Reporting Tool\" icon. Once the BitCurator Reporting Tool finishes opening, select the \"Reports\" tab from the options along the top (see Figure 1). Type or navigate to the location of the following files or directories (see Figure 1): Fiwalk XML File: The location of the DFXML output from running fiwalk . Annotated Features Files Directory: The directory containing the output from the Annotated Features report Output Directory For Reports (new): A new directory created by the BitCurator Reporting Tool to contain the BitCurator forensics reports. Note : if you use the navigation button to select this directory, type the name of the new directory in the \"Name:\" field on the top left of the window. Do not use the \"Create Folder\" button on the right to create this new directory. (see Figure 2). Config File (optional): For additional configuration files; generally left empty. Figure 1 : The Reports tab in the BitCurator Reporting Tool. Figure 2 : Type the name of the new directory in the \"Name\" field. 4. Once each of the file and directory fields above are properly filled out, click the \"Run\" button. The activity bar on the bottom left will indicated that the report generation process is still ongoing. Once complete, a success or error message will appear in the \"Command Line Output\" window (see Figure 3). Figure 3 : The BitCurator forensics reports have been successfully created. 5. Completion of the steps above generates the following files in the directory you specified under \"Output Directory\" in Step 3: * features (directory): the annotated features * bc\\_format\\_bargraph.pdf (file): the format histogram * bulk\\_extractor\\_report.pdf (file): high-level overview of feature locations on disk * fiwalk\\_deleted\\_files.pdf (file): shows paths to any deleted materials found in a given partition * fiwalk-output.xml.xlsx (file): Excel converted DFXML output (file system metadata) * fiwalk\\_report.pdf (file): High-level overview of file system characteristics * format\\_table.pdf (file): Long-form file format names for formats shown in bargraph * premis.xml (file): PREMIS preservation metadata Open the BitCurator reports directory to examine the files. You\u2019ll find visualizations, XLSX transcriptions of file system metadata, high-level reports on file types, and overviews of features identified by bulk\\_extractor. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/HFS%20Explorer/","text":"HFS Explorer Overview This utility allows you to view the contents of and detailed information on HFS-formatted disk image files, as well as extract files from those images to the BitCurator environment. HFS is a proprietary file system developed by Apple Inc. for use in computer systems running Mac OS. The HFS Explorer is included in the BitCurator environment because many of BitCurator's features (such as Sleuth Kit tools like fiwalk , which is used to generate DFXML output) cannot currently read HFS-formatted disks. To use HFS Explorer, first image the disk using Guymager . Step-by-Step Guide Open the tool by double clicking on the \"Additional Tools\" folder on the BitCurator desktop and then double clicking on the \"HFS Explorer\" icon (see Figure 1). Figure 1 : Opening HFS Explorer. 2. The HFS Explorer window will open. Click on the \"File\" menu item in the top left corner of the window, and then select \"Load file system from file\" (see Figure 2). Figure 2 : Navigating to the HFS-formatted file. 3. Choose the file you wish to explore, and click \"OK\" (see Figure 3). Note: If the file you chose isn't one of the supported file types (HFS, HFS+, HFSX), you'll receive an error message (see Figure 4). Figure 4 : This error message occurs if your file is not HFS-formatted. 4. Select a file from the list and click the \"Info\" button for more information on a file (see Figure 5). Figure 5 : Files are viewable. 5. You can now view a summary of basic information about the file, such as when the file was last modified (see Figure 6). To view more detailed information about the file, choose the \"Detailed\" tab from the top of the window (see Figure 7). Figure 6 : View basic information about your file. Figure 7 : View advanced information about your file. 6. To extract files from the HFS-formatted disk to the BitCurator environment, from the main HFS Explorer screen, select the files you wish to extract and then click the \"Extract\" button from the top left of the window (see Figure 8). Figure 8 : Extracting files from the HFS-formatted disk. 7. Navigate to the directory to which you wish to extract the file(s) and click on the \"Extract here\" button on the lower left (see Figure 9). Figure 9 : Navigating to the folder to which to export the file(s). 8. A pop-up will appear asking whether you wish to follow symbolic links when extracting; click the \"Yes\" button (see Figure 10). Figure 10 : Tell HFS Explorer you wish to follow symbolic links. 9. A pop-up will inform you when the extraction is finished (see Figure 11). You can navigate to the extraction directory you specified in Step 7 to view your extracted files (in this example, we extracted a number of files to our desktop; see Figure 12). Figure 11 : The extraction is complete. Figure 12 : Viewing the extracted files on the desktop. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"HFS Explorer"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/HFS%20Explorer/#hfs-explorer","text":"","title":"HFS Explorer"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/HFS%20Explorer/#overview","text":"This utility allows you to view the contents of and detailed information on HFS-formatted disk image files, as well as extract files from those images to the BitCurator environment. HFS is a proprietary file system developed by Apple Inc. for use in computer systems running Mac OS. The HFS Explorer is included in the BitCurator environment because many of BitCurator's features (such as Sleuth Kit tools like fiwalk , which is used to generate DFXML output) cannot currently read HFS-formatted disks. To use HFS Explorer, first image the disk using Guymager .","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/HFS%20Explorer/#step-by-step-guide","text":"Open the tool by double clicking on the \"Additional Tools\" folder on the BitCurator desktop and then double clicking on the \"HFS Explorer\" icon (see Figure 1). Figure 1 : Opening HFS Explorer. 2. The HFS Explorer window will open. Click on the \"File\" menu item in the top left corner of the window, and then select \"Load file system from file\" (see Figure 2). Figure 2 : Navigating to the HFS-formatted file. 3. Choose the file you wish to explore, and click \"OK\" (see Figure 3). Note: If the file you chose isn't one of the supported file types (HFS, HFS+, HFSX), you'll receive an error message (see Figure 4). Figure 4 : This error message occurs if your file is not HFS-formatted. 4. Select a file from the list and click the \"Info\" button for more information on a file (see Figure 5). Figure 5 : Files are viewable. 5. You can now view a summary of basic information about the file, such as when the file was last modified (see Figure 6). To view more detailed information about the file, choose the \"Detailed\" tab from the top of the window (see Figure 7). Figure 6 : View basic information about your file. Figure 7 : View advanced information about your file. 6. To extract files from the HFS-formatted disk to the BitCurator environment, from the main HFS Explorer screen, select the files you wish to extract and then click the \"Extract\" button from the top left of the window (see Figure 8). Figure 8 : Extracting files from the HFS-formatted disk. 7. Navigate to the directory to which you wish to extract the file(s) and click on the \"Extract here\" button on the lower left (see Figure 9). Figure 9 : Navigating to the folder to which to export the file(s). 8. A pop-up will appear asking whether you wish to follow symbolic links when extracting; click the \"Yes\" button (see Figure 10). Figure 10 : Tell HFS Explorer you wish to follow symbolic links. 9. A pop-up will inform you when the extraction is finished (see Figure 11). You can navigate to the extraction directory you specified in Step 7 to view your extracted files (in this example, we extracted a number of files to our desktop; see Figure 12). Figure 11 : The extraction is complete. Figure 12 : Viewing the extracted files on the desktop. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Live%20Search%20for%20Files%20%28Nautilus%29/","text":"Live Search for Files (Nautilus) Search for files by either name or content Open the Nautilus file browser Right click anywhere within the browser and select Scripts > Find Files (see Figure 7). Figure 7 : Choose which of the Find Files options works best for your search. 3. Select either \"Find by Content\" or \"Find by Name\", depending on your search requirements. 4. After the find interface opens, type your search terms into the search window (see Figure 8). Figure 8 : Enter your search terms in the appropriate window. Search for images recursively from the present directory Open the Nautilus file browser. Navigate to the top of the directory tree you would like to search. (Example: to search for all images in a users home directory, navigate to /home/[username]) Right click anywhere within Nautilus and select Scripts > Find Files > Find Images (recursively). Nautilus will open a new window and create a temp directory with symlinks to all of the images found in the directory/directories you searched. Click 'No' when asked if you would like to delete the new temp directory (see Figure 9). Figure 9 : Click 'No' when asked if you would like to delete the temp directory. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Live Search for Files (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Live%20Search%20for%20Files%20%28Nautilus%29/#live-search-for-files-nautilus","text":"","title":"Live Search for Files (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Live%20Search%20for%20Files%20%28Nautilus%29/#search-for-files-by-either-name-or-content","text":"Open the Nautilus file browser Right click anywhere within the browser and select Scripts > Find Files (see Figure 7). Figure 7 : Choose which of the Find Files options works best for your search. 3. Select either \"Find by Content\" or \"Find by Name\", depending on your search requirements. 4. After the find interface opens, type your search terms into the search window (see Figure 8). Figure 8 : Enter your search terms in the appropriate window.","title":"Search for files by either name or content"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Live%20Search%20for%20Files%20%28Nautilus%29/#search-for-images-recursively-from-the-present-directory","text":"Open the Nautilus file browser. Navigate to the top of the directory tree you would like to search. (Example: to search for all images in a users home directory, navigate to /home/[username]) Right click anywhere within Nautilus and select Scripts > Find Files > Find Images (recursively). Nautilus will open a new window and create a temp directory with symlinks to all of the images found in the directory/directories you searched. Click 'No' when asked if you would like to delete the new temp directory (see Figure 9). Figure 9 : Click 'No' when asked if you would like to delete the temp directory. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Search for images recursively from the present directory"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Regular%20Expressions%20in%20Bulk%20Extractor/","text":"Regular Expressions in Bulk Extractor Matching patterns with regular expressions in bulk_extractor The bulk_extractor tool includes the option to find items that match a particular regular expression. (There are many good introductions to working with regular expressions online. If you're not sure where to start, try here ). Figure 1 : Enabling the find (by regex's in file) and find (by a single regex string) in BEViewer. When using the bulk_extractor GUI, BEViewer , there are two options for providing bulk_extractor regular expressions with which to scan a disk image. Selecting Use Find Regex Text File will prompt bulk_extractor to read in regular expressions (one per line in the file) and generate the appropriate output in the report file find.txt . Selecting Use Find Regex Text allows the user to enter a single regular expression to be analyzed in the current run (in the text box within the GUI). Selection of both of these options can be seen in Figure 1 . Creating new regular expressions within a regex text file If you with to create your own regular expressions, please follow the guidelines in the Bulk Extractor Users Manual . A description of regular expression handling begins on Page 29 . Performance considerations As noted in the bulk_extractor users manual, regular expression searches using the default find code can considerably lengthen the time required to process an image. The bulk_extractor tool is capable of using lightgrep , which provides better performance when executing such searches as long as the lightgrep software is installed. Lightgrep is installed in BitCurator by default in BitCurator 1.6.2 and later. The chart in Figure 2 provides guidance on searches with lightgrep . Figure 2 : Lightgrep cheat sheet. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Regular Expressions in Bulk Extractor"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Regular%20Expressions%20in%20Bulk%20Extractor/#regular-expressions-in-bulk-extractor","text":"","title":"Regular Expressions in Bulk Extractor"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Regular%20Expressions%20in%20Bulk%20Extractor/#matching-patterns-with-regular-expressions-in-bulk_extractor","text":"The bulk_extractor tool includes the option to find items that match a particular regular expression. (There are many good introductions to working with regular expressions online. If you're not sure where to start, try here ). Figure 1 : Enabling the find (by regex's in file) and find (by a single regex string) in BEViewer. When using the bulk_extractor GUI, BEViewer , there are two options for providing bulk_extractor regular expressions with which to scan a disk image. Selecting Use Find Regex Text File will prompt bulk_extractor to read in regular expressions (one per line in the file) and generate the appropriate output in the report file find.txt . Selecting Use Find Regex Text allows the user to enter a single regular expression to be analyzed in the current run (in the text box within the GUI). Selection of both of these options can be seen in Figure 1 .","title":"Matching patterns with regular expressions in bulk_extractor"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Regular%20Expressions%20in%20Bulk%20Extractor/#creating-new-regular-expressions-within-a-regex-text-file","text":"If you with to create your own regular expressions, please follow the guidelines in the Bulk Extractor Users Manual . A description of regular expression handling begins on Page 29 .","title":"Creating new regular expressions within a regex text file"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Regular%20Expressions%20in%20Bulk%20Extractor/#performance-considerations","text":"As noted in the bulk_extractor users manual, regular expression searches using the default find code can considerably lengthen the time required to process an image. The bulk_extractor tool is capable of using lightgrep , which provides better performance when executing such searches as long as the lightgrep software is installed. Lightgrep is installed in BitCurator by default in BitCurator 1.6.2 and later. The chart in Figure 2 provides guidance on searches with lightgrep . Figure 2 : Lightgrep cheat sheet. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Performance considerations"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Review%20File%20Info%20and%20Details%20%28Nautilus%29/","text":"Review File Info and Details (Nautilus) File Info The File Info add-on to Nautilus allows the user to perform a number of file-identifying tasks including gathering metadata, generating ASCII and Unicode streams, and viewing MD5 and SHA1 hash sums. To run File Info: Open Nautilus and navigate to the desired file. Right click on the file and select Scripts > FileInfo. Choose the desired report from the menu. (see Figure 4) To close File Info, click the \"Cancel\" button. Figure 4 : Choose the desired information from the File Info menu. Show File Details Show file name, size, blocks, access permissions, and history (see Figure 5). Open Nautilus and navigate to the desired file. Right click on the file and select Scripts > File Analysis > Show File Details. Figure 5 : Use the Show File Details script to display the file name, size, permissions, and more. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Review File Info and Details (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Review%20File%20Info%20and%20Details%20%28Nautilus%29/#review-file-info-and-details-nautilus","text":"","title":"Review File Info and Details (Nautilus)"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Review%20File%20Info%20and%20Details%20%28Nautilus%29/#file-info","text":"The File Info add-on to Nautilus allows the user to perform a number of file-identifying tasks including gathering metadata, generating ASCII and Unicode streams, and viewing MD5 and SHA1 hash sums. To run File Info: Open Nautilus and navigate to the desired file. Right click on the file and select Scripts > FileInfo. Choose the desired report from the menu. (see Figure 4) To close File Info, click the \"Cancel\" button. Figure 4 : Choose the desired information from the File Info menu.","title":"File Info"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Review%20File%20Info%20and%20Details%20%28Nautilus%29/#show-file-details","text":"Show file name, size, blocks, access permissions, and history (see Figure 5). Open Nautilus and navigate to the desired file. Right click on the file and select Scripts > File Analysis > Show File Details. Figure 5 : Use the Show File Details script to display the file name, size, permissions, and more. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Show File Details"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Understanding%20Bulk%20Extractor%20Scanners/","text":"Understanding Bulk Extractor Scanners For help using the Bulk Extractor Viewer, please see the Bulk Extractor Viewer tutorial .### Overview BitCurator can help you locate and explore specific types of information in your disk image; this feature both allows you to protect the materials' donor by discovering potentially sensitive information before making a disk public (e.g. social security numbers), and explore materials by finding specific types of information (e.g. search for email addresses in order to locate correspondence between an author and her editors) Step-by-Step Guide Before pressing the \"Start bulk_extractor\" button in the Bulk Extractor Viewer, you have the option of including or excluding a variety of scanners in the Bulk Extractor reports, via the checkboxes on the right side of the page (i.e. after completing Step 6 of the Bulk Extractor tutorial ). Note that there is not necessarily a one-to-one relationship between scanners (toggled on or off) and the produced reports. For example, the pii.txt report, although it is currently only written to by the \"Accounts\" scanner, will not necessarily only contain PII from credit cards and SSNs. Multiple scanners might write to the same feature file: the \"exif\" scanner searches the file formats used by digital cameras, finds GPS coordinates in images, and writes those findings to the output file gps.txt; a separate scanner, the gps scanner, searches Garmin Trackpoint data and also finds GPS coordinates and writes them to gps.txt[1]. Additionally, many of the scanners produce a histogram file an addition to the main output file; for example, the email scanner generates \"email_histogram.txt\" in addition to \"email.txt\". Reports may contain false positives; the \"accounts\" scanner may produce credit-card-number-like strings in its ccn.txt output file that are not, in fact, credit card numbers. Below are the possible scanner options and what each scanner locates on your disk image. Bulk Extractor Scanners: Where They Output and What They Do Scanner name Output feature file Recovery description / archival usefulness bulk bulk.txt Performs a bulk data scan. wordlist wordlist.txt, wordlist_*.txt A list of all \u201cwords\u201d extracted from the disk, useful for password cracking or to discover if an author ever used a specific term (including in deleted/hidden files). Note that the words this scanner can access depend on which other scanners are on; to include words in .zip files, for example, you'd need to have the \"zip\" scanner enabled. xor XOR is a technique for obfuscating data, often used to conceal sensitive data and code within malicious files and programs [4] ; this scanner searches for data hidden by XOR. accounts telephone.txt, ccn.txt, ccn_track2.txt, pii.txt Credit card numbers, credit card track 2 information (the magnetic stripe data track read by ATMs and credit card checkers [5] ), phone numbers, and other formatted numbers. Useful for tracking how a device's user(s) conducted business. aes aes_keys.txt AES key schedules in memory (AES key schedules expand a short key into a number of separate round keys [6] ). base16 hex.txt BASE16 coding, aka hexadecimal or hex code (includes MD5 codes embedded in the data). The primary use of hexadecimal notation is a human-friendly representation of binary-coded values in computing and digital electronics. Hexadecimal is also commonly used to represent computer memory addresses. [7] base64 BASE64 coding. Base64 is a group of similar binary-to-text encoding schemes that represent binary data in an ASCII string format by translating it into a radix-64 representation [8] . elf elf.txt Linux Executable and Linkable Format (formerly called Extensible Linking Format). A common standard file format for executables, object code, shared libraries, and core dumps [9] . email email.txt, rfc822.txt, domain.txt, ether.txt, url.txt Discovers RFC822 email headers, HTTP cookies, hostnames, IP addresses, email addresses, and URLs. Useful for recreating email correspondence on a device. exif exif.txt, gps.txt, jpeg_carved.txt Exifs, or exchangeable image file format, is a standard that specifies the formats for images, sound, and ancillary tags used by digital cameras (including smartphones), scanners and other systems handling image and sound files recorded by digital cameras; it includes .JPG, .TIFF, and .WAV [10] . This scan finds EXIFs from JPEGs and video segments (and carving of JPEG files); this feature file contains all of the EXIF fields, expanded as XML records. find find.txt Returns the results of specific regular expression search requests. A regular expression is a way of searching for patterns in strings of characters; RegexOne.com offers a good basic tutorial on writing regular expressions to create extremely specific searches. GPS gps.txt Garmin-formatted XML containing GPS (global positioning system, i.e. location mapping) coordinates. gzip Files compressed with the gzip algorithm (such as browser cache entries, HTTP streams) and ZLIB-compressed gzip streams. hiber Windows Hibernation file fragments. Windows \"hibernate mode\" saves a copy of everything in your PC\u2019s memory (RAM) onto your hard disk before it shuts down [11] . json json.txt Javascript Object Notation (JSON), a text-based open standard designed for human-readable data interchange [12] , objects downloaded from web servers, and well as JSON-like objects found in source code. kml kml.txt KML files (carved). KML is Keyhole Markup Language (KML), an XML notation for expressing geographic annotation and visualization within Internet-based, two-dimensional maps and three-dimensional Earth browsers [13] . net ip.txt, ether.txt IP and TCP packets (types of network packets, formatted units of data carried by a packet-switched network [14] ) in virtual memory, and creates libpcap files (the libpcap file format is the main capture file format used in TcpDump/WinDump, Wireshark/TShark, snort, and many other networking tools [15] ). pdf Text from PDF files. rar rar.txt, unrar_carved.txt RAR components in unencrypted archives are decrypted and processed. Encrypted RAR file are carved. RAR is a proprietary archive file format that supports data compression, error recovery and file spanning [16] . vCard vcard.txt vCard recovery. vCard is a file format standard for electronic business cards [17] . windrs windrs.txt Windows FAT32 and NTFS directory entries. winpe winpe.txt Windows Preinstallation Environment (PE) executables (.exe and .dll files notated with an MD5 hash of the first 4k). PE is a minimal Win32 operating system with limited services, built on the Windows Vista kernel. It is used to prepare a computer for Windows installation, to copy disk images from a network file server, and to initiate Windows Setup [18] . winprefetch winprefetch.txt Windows prefetch files and file fragments. Each time you turn on your computer, Windows keeps track of the way your computer starts and which programs you commonly open; Windows saves this information as a number of small files in the prefetch folder [19] . zip zip.txt, unzip_carved.txt A file containing information regarding every ZIP file component found on the media. This is exceptionally useful as ZIP files contain internal structure and ZIP is increasingly the compound file format of choice for a variety of products such as Microsoft Office. Will find zlib-compressed regions. Notes: http://digitalcorpora.org/downloads/bulk_extractor/BEUsersManual.pdf // https://forensicswiki.xyz/wiki/index.php?title=Bulk_extractor // digitalcorpora.org/downloads/bulk_extractor/doc/2013.COSE.bulk_extractor.pdf https://raw.github.com/simsong/bulk_extractor/master/doc/programmer_manual/BEProgrammersManual.tex https://web.archive.org/web/20170705220707/http://www.acmetech.com/documentation/credit_cards/magstripe_track_format.html https://en.wikipedia.org/wiki/Rijndael_key_schedule https://en.wikipedia.org/wiki/Base16 https://en.wikipedia.org/wiki/Base64 https://en.wikipedia.org/wiki/Executable_and_Linkable_Format http://en.wikipedia.org/wiki/Exchangeable_image_file_format http://helpdeskgeek.com/windows-vista-tips/delete-remove-hiberfil-sys/ https://en.wikipedia.org/wiki/JSON https://en.wikipedia.org/wiki/Kml https://en.wikipedia.org/wiki/Network_packet http://wiki.wireshark.org/Development/LibpcapFileFormat https://en.wikipedia.org/wiki/Rar https://en.wikipedia.org/wiki/Vcard http://technet.microsoft.com/en-us/library/cc766093%28v=ws.10%29.aspx http://windows.microsoft.com/en-us/windows-vista/what-is-the-prefetch-folder If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Understanding Bulk Extractor Scanners"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Understanding%20Bulk%20Extractor%20Scanners/#understanding-bulk-extractor-scanners","text":"For help using the Bulk Extractor Viewer, please see the Bulk Extractor Viewer tutorial .### Overview BitCurator can help you locate and explore specific types of information in your disk image; this feature both allows you to protect the materials' donor by discovering potentially sensitive information before making a disk public (e.g. social security numbers), and explore materials by finding specific types of information (e.g. search for email addresses in order to locate correspondence between an author and her editors)","title":"Understanding Bulk Extractor Scanners"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Understanding%20Bulk%20Extractor%20Scanners/#step-by-step-guide","text":"Before pressing the \"Start bulk_extractor\" button in the Bulk Extractor Viewer, you have the option of including or excluding a variety of scanners in the Bulk Extractor reports, via the checkboxes on the right side of the page (i.e. after completing Step 6 of the Bulk Extractor tutorial ). Note that there is not necessarily a one-to-one relationship between scanners (toggled on or off) and the produced reports. For example, the pii.txt report, although it is currently only written to by the \"Accounts\" scanner, will not necessarily only contain PII from credit cards and SSNs. Multiple scanners might write to the same feature file: the \"exif\" scanner searches the file formats used by digital cameras, finds GPS coordinates in images, and writes those findings to the output file gps.txt; a separate scanner, the gps scanner, searches Garmin Trackpoint data and also finds GPS coordinates and writes them to gps.txt[1]. Additionally, many of the scanners produce a histogram file an addition to the main output file; for example, the email scanner generates \"email_histogram.txt\" in addition to \"email.txt\". Reports may contain false positives; the \"accounts\" scanner may produce credit-card-number-like strings in its ccn.txt output file that are not, in fact, credit card numbers. Below are the possible scanner options and what each scanner locates on your disk image.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Understanding%20Bulk%20Extractor%20Scanners/#bulk-extractor-scanners-where-they-output-and-what-they-do","text":"Scanner name Output feature file Recovery description / archival usefulness bulk bulk.txt Performs a bulk data scan. wordlist wordlist.txt, wordlist_*.txt A list of all \u201cwords\u201d extracted from the disk, useful for password cracking or to discover if an author ever used a specific term (including in deleted/hidden files). Note that the words this scanner can access depend on which other scanners are on; to include words in .zip files, for example, you'd need to have the \"zip\" scanner enabled. xor XOR is a technique for obfuscating data, often used to conceal sensitive data and code within malicious files and programs [4] ; this scanner searches for data hidden by XOR. accounts telephone.txt, ccn.txt, ccn_track2.txt, pii.txt Credit card numbers, credit card track 2 information (the magnetic stripe data track read by ATMs and credit card checkers [5] ), phone numbers, and other formatted numbers. Useful for tracking how a device's user(s) conducted business. aes aes_keys.txt AES key schedules in memory (AES key schedules expand a short key into a number of separate round keys [6] ). base16 hex.txt BASE16 coding, aka hexadecimal or hex code (includes MD5 codes embedded in the data). The primary use of hexadecimal notation is a human-friendly representation of binary-coded values in computing and digital electronics. Hexadecimal is also commonly used to represent computer memory addresses. [7] base64 BASE64 coding. Base64 is a group of similar binary-to-text encoding schemes that represent binary data in an ASCII string format by translating it into a radix-64 representation [8] . elf elf.txt Linux Executable and Linkable Format (formerly called Extensible Linking Format). A common standard file format for executables, object code, shared libraries, and core dumps [9] . email email.txt, rfc822.txt, domain.txt, ether.txt, url.txt Discovers RFC822 email headers, HTTP cookies, hostnames, IP addresses, email addresses, and URLs. Useful for recreating email correspondence on a device. exif exif.txt, gps.txt, jpeg_carved.txt Exifs, or exchangeable image file format, is a standard that specifies the formats for images, sound, and ancillary tags used by digital cameras (including smartphones), scanners and other systems handling image and sound files recorded by digital cameras; it includes .JPG, .TIFF, and .WAV [10] . This scan finds EXIFs from JPEGs and video segments (and carving of JPEG files); this feature file contains all of the EXIF fields, expanded as XML records. find find.txt Returns the results of specific regular expression search requests. A regular expression is a way of searching for patterns in strings of characters; RegexOne.com offers a good basic tutorial on writing regular expressions to create extremely specific searches. GPS gps.txt Garmin-formatted XML containing GPS (global positioning system, i.e. location mapping) coordinates. gzip Files compressed with the gzip algorithm (such as browser cache entries, HTTP streams) and ZLIB-compressed gzip streams. hiber Windows Hibernation file fragments. Windows \"hibernate mode\" saves a copy of everything in your PC\u2019s memory (RAM) onto your hard disk before it shuts down [11] . json json.txt Javascript Object Notation (JSON), a text-based open standard designed for human-readable data interchange [12] , objects downloaded from web servers, and well as JSON-like objects found in source code. kml kml.txt KML files (carved). KML is Keyhole Markup Language (KML), an XML notation for expressing geographic annotation and visualization within Internet-based, two-dimensional maps and three-dimensional Earth browsers [13] . net ip.txt, ether.txt IP and TCP packets (types of network packets, formatted units of data carried by a packet-switched network [14] ) in virtual memory, and creates libpcap files (the libpcap file format is the main capture file format used in TcpDump/WinDump, Wireshark/TShark, snort, and many other networking tools [15] ). pdf Text from PDF files. rar rar.txt, unrar_carved.txt RAR components in unencrypted archives are decrypted and processed. Encrypted RAR file are carved. RAR is a proprietary archive file format that supports data compression, error recovery and file spanning [16] . vCard vcard.txt vCard recovery. vCard is a file format standard for electronic business cards [17] . windrs windrs.txt Windows FAT32 and NTFS directory entries. winpe winpe.txt Windows Preinstallation Environment (PE) executables (.exe and .dll files notated with an MD5 hash of the first 4k). PE is a minimal Win32 operating system with limited services, built on the Windows Vista kernel. It is used to prepare a computer for Windows installation, to copy disk images from a network file server, and to initiate Windows Setup [18] . winprefetch winprefetch.txt Windows prefetch files and file fragments. Each time you turn on your computer, Windows keeps track of the way your computer starts and which programs you commonly open; Windows saves this information as a number of small files in the prefetch folder [19] . zip zip.txt, unzip_carved.txt A file containing information regarding every ZIP file component found on the media. This is exceptionally useful as ZIP files contain internal structure and ZIP is increasingly the compound file format of choice for a variety of products such as Microsoft Office. Will find zlib-compressed regions.","title":"Bulk Extractor Scanners: Where They Output and What They Do"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/Understanding%20Bulk%20Extractor%20Scanners/#notes","text":"http://digitalcorpora.org/downloads/bulk_extractor/BEUsersManual.pdf // https://forensicswiki.xyz/wiki/index.php?title=Bulk_extractor // digitalcorpora.org/downloads/bulk_extractor/doc/2013.COSE.bulk_extractor.pdf https://raw.github.com/simsong/bulk_extractor/master/doc/programmer_manual/BEProgrammersManual.tex https://web.archive.org/web/20170705220707/http://www.acmetech.com/documentation/credit_cards/magstripe_track_format.html https://en.wikipedia.org/wiki/Rijndael_key_schedule https://en.wikipedia.org/wiki/Base16 https://en.wikipedia.org/wiki/Base64 https://en.wikipedia.org/wiki/Executable_and_Linkable_Format http://en.wikipedia.org/wiki/Exchangeable_image_file_format http://helpdeskgeek.com/windows-vista-tips/delete-remove-hiberfil-sys/ https://en.wikipedia.org/wiki/JSON https://en.wikipedia.org/wiki/Kml https://en.wikipedia.org/wiki/Network_packet http://wiki.wireshark.org/Development/LibpcapFileFormat https://en.wikipedia.org/wiki/Rar https://en.wikipedia.org/wiki/Vcard http://technet.microsoft.com/en-us/library/cc766093%28v=ws.10%29.aspx http://windows.microsoft.com/en-us/windows-vista/what-is-the-prefetch-folder If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Notes:"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/pyExifToolGUI/","text":"pyExifToolGUI As of February 5, 2020, pyExifToolGUI is no longer included in the BitCurator Environment (version 2.2.0 and beyond). It can still be installed in the environment - see the project website for more details. Overview BitCurator includes Harvey Van Der Wolf\u2019s pyExifToolGUI , a front\u00ad\u2010end for ExifTool, to simplify the process of viewing, editing, and manually exporting data from select image files. Step-by-Step Guide Step 1: Open PyExifToolGUI by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"PyExifToolGUI\" icon (see Figure 1). Figure 1: Opening PyExifToolGUI. Step 2: Click on \"File\" in the upper-left of the screen, then click on \"Load Images\" from the resulting drop-down menu (see Figure 2). Figure 2: Loading the image file. Step 3: Navigate to the image file in which you are interested, then click \"open\" in the bottom right-hand corner (see Figure 3). The image file you chose should now appear in the lefthand column of the screen (see Figure 4). Figure 3: Navigating to the image file. Figure 4: The image file appears in the lefthand column. Step 4: Click on the image file name in the lefthand column; this will load information about the image in the right-hand side of the screen (see Figure 5). Browse through this data to discover information about the image such as date and time of its last modification, file size, and bit depth. Figure 5: Viewing information about the image file. Step 5: The radio buttons above this data allow you to explore specific information about the image. For example, choosing the \"GOS/Location\" radio button would provide you with the GPS coordinates for where an image was take if they were available (in the example in Figure 6, no GPS coordinates were available for the image). | width=\"50%\" style=\"vertical-align:top\" Figure 6: Using the radio buttons to further explore the image file. Step 6: The tabs above the radio buttons provide additional options for exploring and editing your image file. The \"edit data\" tab is of particular interest (see Figure 7); this tab allows you to change the data saved to your image file, letting you (for example) add missing data known to you, such as the GPS coordinates of where an image was taken. Figure 7: The \"Edit Data\" tab allows you to add or change data in the image file. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"pyExifToolGUI"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/pyExifToolGUI/#pyexiftoolgui","text":"As of February 5, 2020, pyExifToolGUI is no longer included in the BitCurator Environment (version 2.2.0 and beyond). It can still be installed in the environment - see the project website for more details.","title":"pyExifToolGUI"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/pyExifToolGUI/#overview","text":"BitCurator includes Harvey Van Der Wolf\u2019s pyExifToolGUI , a front\u00ad\u2010end for ExifTool, to simplify the process of viewing, editing, and manually exporting data from select image files.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Forensics%20and%20Reporting%20Guides/pyExifToolGUI/#step-by-step-guide","text":"Step 1: Open PyExifToolGUI by double clicking on the \"Forensics Tools\" folder on the BitCurator desktop and then double clicking on the \"PyExifToolGUI\" icon (see Figure 1). Figure 1: Opening PyExifToolGUI. Step 2: Click on \"File\" in the upper-left of the screen, then click on \"Load Images\" from the resulting drop-down menu (see Figure 2). Figure 2: Loading the image file. Step 3: Navigate to the image file in which you are interested, then click \"open\" in the bottom right-hand corner (see Figure 3). The image file you chose should now appear in the lefthand column of the screen (see Figure 4). Figure 3: Navigating to the image file. Figure 4: The image file appears in the lefthand column. Step 4: Click on the image file name in the lefthand column; this will load information about the image in the right-hand side of the screen (see Figure 5). Browse through this data to discover information about the image such as date and time of its last modification, file size, and bit depth. Figure 5: Viewing information about the image file. Step 5: The radio buttons above this data allow you to explore specific information about the image. For example, choosing the \"GOS/Location\" radio button would provide you with the GPS coordinates for where an image was take if they were available (in the example in Figure 6, no GPS coordinates were available for the image). | width=\"50%\" style=\"vertical-align:top\" Figure 6: Using the radio buttons to further explore the image file. Step 6: The tabs above the radio buttons provide additional options for exploring and editing your image file. The \"edit data\" tab is of particular interest (see Figure 7); this tab allows you to change the data saved to your image file, letting you (for example) add missing data known to you, such as the GPS coordinates of where an image was taken. Figure 7: The \"Edit Data\" tab allows you to add or change data in the image file. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Imaging%20with%20Guymager/","text":"Imaging with Guymager Overview The BitCurator environment includes Guymager , an open-source, graphic application for creating disk images. Guymager supports the creation of raw (.dd) or Expert Witness Format (.E01) disk images. The Expert Witness Format is commonly used in the digital forensics community because it incorporates metadata about the original media into the disk image itself. Step-by-Step Guide Step 1: Create a directory to store your disk image by opening Nautilus (the \"Home\" folder on the top left-hand side of the screen) and right-clicking anywhere on the white background. Select \"New Folder\" from the drop-down menu. Name the folder as you see fit \u2013 we will use the folder name \"diskimages\" in this example. Step 2: Connect the device you wish to image to your computer (USB flash drive, CD-ROM, hard drive, or floppy disk drive). A device does not need to be mounted in order to be imaged by Guymager, and BitCurator will not mount devices automatically (the icon that appears in the Unity bar on the left indicates that the device is attached , rather than mounted ). If you need to examine the contents of the disk before creating the disk image, you can safely mount the device . Step 3: Open Guymager by right-clicking the icon in the \"Imaging and Recovery\" folder on the desktop. In the contextual menu, select \"Open\" ( Figure 1 ). Guymager will ask to be run with root user rights. When prompted, enter the password associated with the BitCurator user account. This is usually 'bcadmin', or it is blank if you did not enter a password during installation and setup ( Figure 2 ). Figure 1 : The contextual menu for opening Guymager. Figure 2 : Guymager prompts for authentication to allow the program root-level rights. Step 4: When Guymager launches, it will display a list of all mounted disks on the system. Select and right-click on the disk you wish to image, and select \"Acquire image\" ( Figure 3 ). Figure 3: Click on \"Acquire image\" to begin the imaging process. Step 5: Clicking on \"Acquire Image\" will open the Acquire Image window. In this window you will first select the disk image format you would like to use. The options include raw Linux dd and Expert Witness (.E01) formats. An Expert Witness image will store user-added metadata within the forensically-packaged image. Guymager provides the option to split the image into multiple files, thus making it more easily transferable. So, for example, a 4 GB image could be split into four 1 GB files, or two 2 GB files, etc. Step 6: After selecting the image format type, fill out the metadata as needed. The Expert Witness format was designed for the digital forensics community, so metadata fields are labeled for criminal investigation. However, these fields can easily be repurposed for the needs of archivists and curators. For example, an archivist might use the \"Case number\" field to record an accession number. Step 7: Next choose the image directory, which in this example would be \"/home/bcadmin/diskimages\". Don't create new directories from within Guymager. Instead, create new directories before launching Guymager (as described in Step 1 ). This is because Guymager runs as the root user and so any directories that it creates will require administrator permissions. Step 8: Name your disk image and choose which verification options you would like Guymager to perform. Click \"OK\" to begin the imaging process. Step 9: Once the the imaging process begins you will see a progress bar on the main Guymager screen. Step 10: After Guymager has finished creating the disk image, close Guymager and verify the image by navigating to the directory you created in Step 1. Notice that there are two files, the image itself and an info file (Figure 4). The info file includes the metadata we input in step 7 along with additional metadata collected during the acquisition process. The imaging process is now complete. Figure 4 : Verify the disk image and metadata. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Imaging with Guymager"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Imaging%20with%20Guymager/#imaging-with-guymager","text":"","title":"Imaging with Guymager"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Imaging%20with%20Guymager/#overview","text":"The BitCurator environment includes Guymager , an open-source, graphic application for creating disk images. Guymager supports the creation of raw (.dd) or Expert Witness Format (.E01) disk images. The Expert Witness Format is commonly used in the digital forensics community because it incorporates metadata about the original media into the disk image itself. Step-by-Step Guide Step 1: Create a directory to store your disk image by opening Nautilus (the \"Home\" folder on the top left-hand side of the screen) and right-clicking anywhere on the white background. Select \"New Folder\" from the drop-down menu. Name the folder as you see fit \u2013 we will use the folder name \"diskimages\" in this example. Step 2: Connect the device you wish to image to your computer (USB flash drive, CD-ROM, hard drive, or floppy disk drive). A device does not need to be mounted in order to be imaged by Guymager, and BitCurator will not mount devices automatically (the icon that appears in the Unity bar on the left indicates that the device is attached , rather than mounted ). If you need to examine the contents of the disk before creating the disk image, you can safely mount the device . Step 3: Open Guymager by right-clicking the icon in the \"Imaging and Recovery\" folder on the desktop. In the contextual menu, select \"Open\" ( Figure 1 ). Guymager will ask to be run with root user rights. When prompted, enter the password associated with the BitCurator user account. This is usually 'bcadmin', or it is blank if you did not enter a password during installation and setup ( Figure 2 ). Figure 1 : The contextual menu for opening Guymager. Figure 2 : Guymager prompts for authentication to allow the program root-level rights. Step 4: When Guymager launches, it will display a list of all mounted disks on the system. Select and right-click on the disk you wish to image, and select \"Acquire image\" ( Figure 3 ). Figure 3: Click on \"Acquire image\" to begin the imaging process. Step 5: Clicking on \"Acquire Image\" will open the Acquire Image window. In this window you will first select the disk image format you would like to use. The options include raw Linux dd and Expert Witness (.E01) formats. An Expert Witness image will store user-added metadata within the forensically-packaged image. Guymager provides the option to split the image into multiple files, thus making it more easily transferable. So, for example, a 4 GB image could be split into four 1 GB files, or two 2 GB files, etc. Step 6: After selecting the image format type, fill out the metadata as needed. The Expert Witness format was designed for the digital forensics community, so metadata fields are labeled for criminal investigation. However, these fields can easily be repurposed for the needs of archivists and curators. For example, an archivist might use the \"Case number\" field to record an accession number. Step 7: Next choose the image directory, which in this example would be \"/home/bcadmin/diskimages\". Don't create new directories from within Guymager. Instead, create new directories before launching Guymager (as described in Step 1 ). This is because Guymager runs as the root user and so any directories that it creates will require administrator permissions. Step 8: Name your disk image and choose which verification options you would like Guymager to perform. Click \"OK\" to begin the imaging process. Step 9: Once the the imaging process begins you will see a progress bar on the main Guymager screen. Step 10: After Guymager has finished creating the disk image, close Guymager and verify the image by navigating to the directory you created in Step 1. Notice that there are two files, the image itself and an info file (Figure 4). The info file includes the metadata we input in step 7 along with additional metadata collected during the acquisition process. The imaging process is now complete. Figure 4 : Verify the disk image and metadata. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Safely%20Mount%20Devices/","text":"Safely Mount Devices Overview BitCurator's Safe Mount script allows you to view the content of a disk by mounting it with read-only access, thereby preventing any data from being inadvertently written to disk. Examples of disks might include USB thumb drives, a hard drive, or a USB-connected floppy disk drive. The safe mount script currently supports the following file systems: NTFS Fat32 HFS and HFS+ ext2/3/4 Note: If multiple volumes are stored on a disk, the safe mount script will mount the first user volume only. Developer details: This tool is a front-end for mmls and icat, two programs provided by The Sleuth Kit , along with file system ID and FUSE mounting code. Step-by-Step Guide Step 1: Attach your device to the computer (in our example, we've attached a USB thumb drive to the computer on which BitCurator is running). The attached device should appear as an icon in the lower left corner of the screen (see Figure 1). Right-click on that icon and choose \"Scripts\", then click on \"Safe Mount\" (see Figure 2). Figure 1 : Your attached device appears as an icon in the lower left of the screen. Step 2: Right-click on that icon and choose \"Scripts\", then click on \"Safe Mount\" (see Figure 2). Figure 2 : Navigate to the Safe Mount script. Step 3: The Safe Mount window will open. Choose the device you wish to mount from the drop-down menu next to \"Device\" and click \"OK\". If you are not certain which of the items in the drop-down list is your device, click on the \"Device Information\" button on the lower left of the window (see Figure 3). Figure 3 : Choose your device form the drop-down menu, or click on \"Device Information\" for help identifying your device. This will open a window with more information about the devices available to you in the drop-down list, which should help you identify your device (see Figure 4). In the example shown here, I used the following to identify the correct device: Looking at the label column, I recognized the USB drive's \"KINGSTON\" label; Looking at the fs type column, I double-checked that the listed file system type (vfat; learn more about file system types here ) matched what I knew to be the file system of the USB drive in question; Looking at the mount point column, I noted that the device is currently not mounted. Figure 4 : Use the \"Device Information\" window to identify your device. Once the correct device has been identified, select the device from the drop-down (see Figure 5) and click the \"OK\" button. Figure 5: Select your device from the drop down menu. Step 4: A pop-up message will confirm that your device has been mounted (see Figure 7). Figure 7 : A pop-up message confirming the device mounting. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Safely Mount Devices"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Safely%20Mount%20Devices/#safely-mount-devices","text":"","title":"Safely Mount Devices"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Safely%20Mount%20Devices/#overview","text":"BitCurator's Safe Mount script allows you to view the content of a disk by mounting it with read-only access, thereby preventing any data from being inadvertently written to disk. Examples of disks might include USB thumb drives, a hard drive, or a USB-connected floppy disk drive. The safe mount script currently supports the following file systems: NTFS Fat32 HFS and HFS+ ext2/3/4 Note: If multiple volumes are stored on a disk, the safe mount script will mount the first user volume only. Developer details: This tool is a front-end for mmls and icat, two programs provided by The Sleuth Kit , along with file system ID and FUSE mounting code.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Imaging%20and%20Recovery%20Guides/Safely%20Mount%20Devices/#step-by-step-guide","text":"Step 1: Attach your device to the computer (in our example, we've attached a USB thumb drive to the computer on which BitCurator is running). The attached device should appear as an icon in the lower left corner of the screen (see Figure 1). Right-click on that icon and choose \"Scripts\", then click on \"Safe Mount\" (see Figure 2). Figure 1 : Your attached device appears as an icon in the lower left of the screen. Step 2: Right-click on that icon and choose \"Scripts\", then click on \"Safe Mount\" (see Figure 2). Figure 2 : Navigate to the Safe Mount script. Step 3: The Safe Mount window will open. Choose the device you wish to mount from the drop-down menu next to \"Device\" and click \"OK\". If you are not certain which of the items in the drop-down list is your device, click on the \"Device Information\" button on the lower left of the window (see Figure 3). Figure 3 : Choose your device form the drop-down menu, or click on \"Device Information\" for help identifying your device. This will open a window with more information about the devices available to you in the drop-down list, which should help you identify your device (see Figure 4). In the example shown here, I used the following to identify the correct device: Looking at the label column, I recognized the USB drive's \"KINGSTON\" label; Looking at the fs type column, I double-checked that the listed file system type (vfat; learn more about file system types here ) matched what I knew to be the file system of the USB drive in question; Looking at the mount point column, I noted that the device is currently not mounted. Figure 4 : Use the \"Device Information\" window to identify your device. Once the correct device has been identified, select the device from the drop-down (see Figure 5) and click the \"OK\" button. Figure 5: Select your device from the drop down menu. Step 4: A pop-up message will confirm that your device has been mounted (see Figure 7). Figure 7 : A pop-up message confirming the device mounting. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step-by-Step Guide"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Package%20files%20and%20metadata%20with%20Bagger/","text":"Package files and metadata with Bagger Bagger is no longer included in the BitCurator Environment. It can still be installed in the environment - see the project website for more details. Overview: The Bagger software from the Library of Congress, provides a GUI application for creating and working with packages that conform to the BagIt specification . This application can be installed on BitCurator following instructions on the project's page . Step By Step: Step 1: To begin creating a bag, click to 'Create a new bag' and select an existing profile to start with a set of predefined metadata fields or start with no profile to define your own. Step 2: If choosing no profile, add standard or custom fields in the 'Bag-info' section. Step 3: Add data to your bag by clicking the plus icon in the corner of the Payload section. Select files or directories of files. Step 4 : Click the 'Save Bag As' link, providing a name and location for the bag. Select the algorithm used for generating hashes that will be used for fixity checking, and click ok. You will receive an on-screen notification that the bag has been successfully created. External links: Bagger - Github BagIt Specification Bagger\u2019s Enhancements for Digital Accessions If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Package files and metadata with Bagger"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Package%20files%20and%20metadata%20with%20Bagger/#package-files-and-metadata-with-bagger","text":"Bagger is no longer included in the BitCurator Environment. It can still be installed in the environment - see the project website for more details. Overview: The Bagger software from the Library of Congress, provides a GUI application for creating and working with packages that conform to the BagIt specification . This application can be installed on BitCurator following instructions on the project's page .","title":"Package files and metadata with Bagger"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Package%20files%20and%20metadata%20with%20Bagger/#step-by-step","text":"Step 1: To begin creating a bag, click to 'Create a new bag' and select an existing profile to start with a set of predefined metadata fields or start with no profile to define your own. Step 2: If choosing no profile, add standard or custom fields in the 'Bag-info' section. Step 3: Add data to your bag by clicking the plus icon in the corner of the Payload section. Select files or directories of files. Step 4 : Click the 'Save Bag As' link, providing a name and location for the bag. Select the algorithm used for generating hashes that will be used for fixity checking, and click ok. You will receive an on-screen notification that the bag has been successfully created. External links: Bagger - Github BagIt Specification Bagger\u2019s Enhancements for Digital Accessions If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Step By Step:"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/","text":"Share files to and from the BitCurator Environment Overview When using the BitCurator virtual machine, you may wish to transfer a file, multiple files, or folder between the BitCurator environment and your machine (e.g. from the BitCurator VM desktop to the desktop of the machine on which you're running BitCurator); the following instructions will help you do this. If you're interested in creating a disk image of a piece of born-digital media, it's highly recommended you follow these instructions to create the disk image within the BitCurator environment, which will package information about the imaging process with the disk image so that in the future, it's easy to call up information about that image such as who imaged it and when the imaging took place. Setup folder sharing between BitCurator and your machine Before you start up the BitCurator virtual machine, select Settings in the VirtualBox window, and select Shared Folders (see Figure 1). Note: A prompt may open asking if you would like to install the VirtualBox Guest Additions. Although BitCurator comes with the Guest Additions preinstalled, you may need to install an updated Guest Additions package if you are running a recent release of VirtualBox. Figure 1 : Select \"Shared Folders\" from the Devices menu. Click on the folder icon with the green plus in it, and select \u201cOther...\u201d under \u201cFolder Path...\u201d (see Figure 2). Click \u201cMake New Folder\u201d to make a new shared folder somewhere on your host machine (e.g. in the home directory of your host computer). Use the VirtualBox tool to create the new folder in order to make sure that your guest OS will have permission to access it. 2. Select \u201cAuto Mount\u201d and leave \"Read Only\" unchecked, and click OK. 3. Click OK again, in the main window. 4. The BitCurator desktop includes a folder named \"Shared Folders and Media\" that points to the /media directory (see Figure 5). Once you've added a host shared folder using the instructions above, that host shared folder will automatically appear in this desktop \"Shared Folders and Media\" folder location with an \"sf_\" prefix. If you can open this shared directory, then you can save files here that will be available both in the host environment and the BitCurator virtual machine. Likewise, you can place files in this directory when you are in the host environment and they will be available for the BitCurator virtual machine as well. Drag and Drop folders between BitCurator and your machine Depending on your Virtual Machine set-up, you may already be able to drag and drop files from your machine into and out of the BitCurator virtual machine (\"drag and drop\" means to click on a file and then continue holding the mouse button down while moving your ouse cursor where you wish the file to go, which gives the appearance of physically \"dragging\" the file to a new location). If this is not the case, start up the BitCurator virtual machine and follow these steps: In the menu bar along the top of your machine's screen (outside the virtual machine window), click on \"Devices\" > \"Drag'n'Drop\" > \"Bidirectional\". \"Bidirectional\" should now have a checkmark appear next to it in the menu. 2. You should now be able to drag and drop files between BitCurator and your host machine (e.g. you can drag an already created disk image into the BitCurator environment for exploration, though note that it's highly recommended you follow these instructions to create the disk image within the BitCurator environment in the first place rather than creating it elsewhere, as this will package information about the imaging process with the disk image so that in the future, it's easy to call up information about that image such as who imaged it and when the imaging took place). Due to a VirtualBox limitation, \"dragging and dropping\" files from the host to the BitCurator virtual machine will no longer work when only one processing core is assigned. If you wish to use this feature, please assign at least two processing cores to the virtual machine (via \"Settings\" in the VirtualBox manager). Share your Clipboard In the menu bar along the top of your machine's screen (outside the virtual machine window), click on \"Devices\" > \"Shared Clipboard\" > \"Bidirectional\". \"Bidirectional\" should now have a checkmark appear next to it in the menu. 2. Items copied to your clipboard in either the BitCurator or host machine environment should now be available in the other environment (e.g. text copied from a website in a browser on your host machine will be available to paste from the clipboard into a text document in the BitCurator environment). VirtualBox incompatibilities USB 3.0 ports are not currently supported by VirtualBox for use with USB flash and hard drives. If you get the error \"USB device [name and UUID of device] is busy with a previous request. Please try again later.\", try using either a 2.0 or 1.1 USB port (many desktops include both 2.0 and 3.0 ports, but newer laptops may only have 3.0 USB ports). Firewire input is also not supported by VirtualBox. For media devices that require firewire (e.g. to image a Mac laptop in target disk mode), you will need to use BitCurator on an existing Linux machine or installed from the ISO as a stand-alone operating system. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"Share files to and from the BitCurator Environment"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/#share-files-to-and-from-the-bitcurator-environment","text":"","title":"Share files to and from the BitCurator Environment"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/#overview","text":"When using the BitCurator virtual machine, you may wish to transfer a file, multiple files, or folder between the BitCurator environment and your machine (e.g. from the BitCurator VM desktop to the desktop of the machine on which you're running BitCurator); the following instructions will help you do this. If you're interested in creating a disk image of a piece of born-digital media, it's highly recommended you follow these instructions to create the disk image within the BitCurator environment, which will package information about the imaging process with the disk image so that in the future, it's easy to call up information about that image such as who imaged it and when the imaging took place.","title":"Overview"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/#setup-folder-sharing-between-bitcurator-and-your-machine","text":"Before you start up the BitCurator virtual machine, select Settings in the VirtualBox window, and select Shared Folders (see Figure 1). Note: A prompt may open asking if you would like to install the VirtualBox Guest Additions. Although BitCurator comes with the Guest Additions preinstalled, you may need to install an updated Guest Additions package if you are running a recent release of VirtualBox. Figure 1 : Select \"Shared Folders\" from the Devices menu. Click on the folder icon with the green plus in it, and select \u201cOther...\u201d under \u201cFolder Path...\u201d (see Figure 2). Click \u201cMake New Folder\u201d to make a new shared folder somewhere on your host machine (e.g. in the home directory of your host computer). Use the VirtualBox tool to create the new folder in order to make sure that your guest OS will have permission to access it. 2. Select \u201cAuto Mount\u201d and leave \"Read Only\" unchecked, and click OK. 3. Click OK again, in the main window. 4. The BitCurator desktop includes a folder named \"Shared Folders and Media\" that points to the /media directory (see Figure 5). Once you've added a host shared folder using the instructions above, that host shared folder will automatically appear in this desktop \"Shared Folders and Media\" folder location with an \"sf_\" prefix. If you can open this shared directory, then you can save files here that will be available both in the host environment and the BitCurator virtual machine. Likewise, you can place files in this directory when you are in the host environment and they will be available for the BitCurator virtual machine as well.","title":"Setup folder sharing between BitCurator and your machine"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/#drag-and-drop-folders-between-bitcurator-and-your-machine","text":"Depending on your Virtual Machine set-up, you may already be able to drag and drop files from your machine into and out of the BitCurator virtual machine (\"drag and drop\" means to click on a file and then continue holding the mouse button down while moving your ouse cursor where you wish the file to go, which gives the appearance of physically \"dragging\" the file to a new location). If this is not the case, start up the BitCurator virtual machine and follow these steps: In the menu bar along the top of your machine's screen (outside the virtual machine window), click on \"Devices\" > \"Drag'n'Drop\" > \"Bidirectional\". \"Bidirectional\" should now have a checkmark appear next to it in the menu. 2. You should now be able to drag and drop files between BitCurator and your host machine (e.g. you can drag an already created disk image into the BitCurator environment for exploration, though note that it's highly recommended you follow these instructions to create the disk image within the BitCurator environment in the first place rather than creating it elsewhere, as this will package information about the imaging process with the disk image so that in the future, it's easy to call up information about that image such as who imaged it and when the imaging took place). Due to a VirtualBox limitation, \"dragging and dropping\" files from the host to the BitCurator virtual machine will no longer work when only one processing core is assigned. If you wish to use this feature, please assign at least two processing cores to the virtual machine (via \"Settings\" in the VirtualBox manager).","title":"Drag and Drop folders between BitCurator and your machine"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/#share-your-clipboard","text":"In the menu bar along the top of your machine's screen (outside the virtual machine window), click on \"Devices\" > \"Shared Clipboard\" > \"Bidirectional\". \"Bidirectional\" should now have a checkmark appear next to it in the menu. 2. Items copied to your clipboard in either the BitCurator or host machine environment should now be available in the other environment (e.g. text copied from a website in a browser on your host machine will be available to paste from the clipboard into a text document in the BitCurator environment).","title":"Share your Clipboard"},{"location":"All%20Step-by-Step%20Guides/Packaging%20and%20Transfer%20Guides/Share%20files%20to%20and%20from%20the%20BitCurator%20Environment/#virtualbox-incompatibilities","text":"USB 3.0 ports are not currently supported by VirtualBox for use with USB flash and hard drives. If you get the error \"USB device [name and UUID of device] is busy with a previous request. Please try again later.\", try using either a 2.0 or 1.1 USB port (many desktops include both 2.0 and 3.0 ports, but newer laptops may only have 3.0 USB ports). Firewire input is also not supported by VirtualBox. For media devices that require firewire (e.g. to image a Mac laptop in target disk mode), you will need to use BitCurator on an existing Linux machine or installed from the ISO as a stand-alone operating system. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator All Step-by-Step Guides section.","title":"VirtualBox incompatibilities"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/","text":"BitCurator Walkthrough See below for a high-level workflow users can follow when in the BitCurator Environment. 1 Imaging and Recovery 1.1 Safely Mount Devices 1.2 Create Disk Images 2 Forensics and Reporting 2.1 Extract metadata from disk images and files 2.2 Identify potentially private and sensitive information 2.3 Generate Forensic Reports 2.4 Deduplicate Files 2.5 File Export 2.6 Forensics and Reporting Nautilus Scripts 3 Package and Export 3.1 Package files and metadata with BagIt Python 3.2 Transfer files and metadata with grsync Imaging and Recovery BitCurator supports multiple acquisition scenarios: attaching physical media to inspect and analyze digital materials, creating forensic disk images, or transferring files into the environment. Safely Mount Devices If you have devices (e.g. USB drives, CD-ROMs) that you'd like to image or explore with BitCurator, you can connect them so that BitCurator can see them, but safely: no worries about writing any data back to the device. For example, last modified dates assigned by the target media's file system won't be overwritten with the current date. The safe mount script provides write-blocked access to removable media. Mounting is a technical term for registering a storage device with the host system so it can be browsed or used, and you will need to mount any external device attached to the BitCurator system, whether that occurs automatically or by invoking the safe mount script. Images of devices, (e.g. forensic images of floppies, CDs or drives) need to be mounted as well for most uses. Safely Mount Devices (Step-by-Step Guide) Create Disk Images BitCurator uses open source disk imaging tools, such as Guymager and dcfldd , to capture bit-identical images from magnetic, optical, solid-state, and hybrid media. Disk images can be captured in various formats, including raw (just the bitstream), E01 (Expert Witness Format, which we support using the open source libewf library), and AFF (Advanced Forensic Format). Capturing disk images in forensic formats such as E01 and AFF provides many advantages. The images can be stored compressed or uncompressed, can be split into multiple storage containers, can be parsed at the file system level without explicitly extracting the raw image, and can be embedded with provenance and capture metadata. Forensic images ensure that no inadvertent changes are made during pre-ingest chain-of-custody , and provide a consistent baseline for generating different types of access materials. In the BitCurator Environment, forensically-packaged disk images can be mounted by right-clicking on them and selecting \"Mount Disk Image\". This allows you to browse the source in a safe, read-only environment. Image with Guymager: Create a perfect capture of your device's file structure and all contents (including hidden files and fragments) PLUS package this image with information about the disk imaging process. When anyone accesses the disk image later on, they'll have information about who imaged the device, when the device was imaged, etc. as well as be able to explore the exact state of the device as it was when you imaged it. Imaging with Guymager (Step-by-Step Guide) Image with dcfldd: This command line program is an enhance version of the dd program. If you are having trouble with Guymager, or if you are comfortable with command line use, dcfldd can be very useful and scriptable. Please see the dcfldd entry on the Forensics Wiki for general use. Along with dcfldd , there are a host of command line tools in the Imaging and Recovery folder on the BitCurator Environment desktop, all listed on the Tools page. Forensics and Reporting BitCurator includes multiple software tools that assist users with identifying and prioritizing important information in raw and forensically packaged disk images. This includes files format identification, location of deleted files and files fragments, cryptographic hashing, and reporting on potentially private and personally identifying information. BitCurator generates technical metadata in the form of Digital Forensics XML (DFXML). DFXML has been developed around a set of digital forensics tools that can both consume and produce a common set of tags; DFXML has an evolving schema and tag library, and is well documented . BitCurator also generates PREMIS metadata for each data forensics tool that is applied to a disk image, providing an accurate record of provenance for each stage of processing. Extract metadata from disk images and files BitCurator incorporates file system analytics and stream-based forensics technologies to identify and assist with redaction of potentially private and sensitive information (including personally identifiable information). In particular, BitCurator incorporates fiwalk , a tool originally developed by Simson Garfinkel (and later incorporated into The Sleuth Kit ), to export an XML file detailing file system hierarchy within a disk image, including files and folders, deleted materials, and information in slack space. Please see the following Step-by-Step Guides : Generate file system metadata as DFXML: Fiwalk View, edit, and export metadata from image files: pyExifToolGUI View and export information from HFS-formatted disk images: HFS Explorer Identify potentially private and sensitive information BitCurator includes bulk_extractor (and the bulk_extractor GUI, BEViewer) to assist users in finding potentially private and sensitive information. The bulk_extractor tool employs stream-based forensics (analyzing the disk image at the block level) to identify features such as email addresses, geolocation metadata, and credit card numbers. Please see the following Step-by-Step Guides : Find potentially sensitive information: Bulk Extractor Viewer Guide to regular expressions in Bulk Extractor: Regular Expressions in Bulk Extractor Guide to Bulk Extractor scanners and what they do: Understanding Bulk Extractor Scanners Generate Forensic Reports Users can generate human-friendly BitCurator Forensic Reports using the data produced by Guymager, the Bulk Extractor Viewer, fiwalk, and Annotated Features report to explore born-digital materials completely (including hidden or partially deleted files and file fragments) with visualizations, XLSX transcriptions of file system metadata, high-level reports on file types, and overviews of features identified by bulk_extractor. There are two ways to generate BitCurator Forensic Reports, please reference the following Step-by-Step Guides : Option A: Use \"Run All\" feature to generate all reports in one step: Creating Disk Image Reports using the BitCurator Reporting Tool Option B: Run each step individually for additional control and customization: Find potentially sensitive information: Bulk Extractor Viewer Generate filesystem metadata as DFXML: Fiwalk Generate Annotated Features Reports: Annotated Features Report Generate Forensic Reports: Forensic Reports Deduplicate Files Identify and delete duplicate files: FSlint (Step-by-Step Guide) File Export Access and export files from disk images: Access and Export Files from Disk Images (Step-by-Step Guide) Forensics and Reporting Nautilus Scripts Nautilus is a popular GUI file manager for Linux and it functions similarly to Windows Explorer on Windows systems and Finder on Macs. One key feature of Nautilus is the ability to add custom functionality by incorporating user-created back-end scripts. These scripts work much like plug-ins for a web browser and extend Nautilus's basic functionality. A number of custom Nautilus scripts are included in the BitCurator Environment specifically geared to assist the digital archivist in pre-ingest data analysis. See below for Step-by-Step Guides on how to use Nautilus to perform a number of critical data analysis tasks: Create MD5 Sums (Nautilus) Extract Compressed Files (Nautilus) Review File Info and Details (Nautilus) Disk Image Metadata (Nautilus) Display a file in Hex editor (Nautilus) Live Search for Files (Nautilus) BitCurator includes a number of other tools to assist users with data triage; identifying and prioritizing important information in raw and forensically packaged disk images. This includes files format identification, location of deleted files and file fragments, cryptographic hashing, and reporting on potentially private and personally identifying information. BitCurator includes Vassil Roussev's sdhash to report on file similarity, regripper for Windows registry analysis, and ClamAV for virus and malware detection. These are listed on the Tools page. Package and Export The BitCurator environment also includes tools to assist in preparing and packaging born-digital materials for transfer to preservation storage and access platforms. Package files and metadata with BagIt Python Bagit Python is a library and command line utility for working with BagIt style packages. Documentation on using Bagit Python utility can be found here . Bags are useful for transferring packages of data from one location to another location across a network. This might be a local area network or somewhere across the internet. You can then verify the receipt of the bags and ensure that the data has not changed during transfer. An example use would be to create a bag of the data that you have processed in BitCurator. This bag could include the disk images, report outputs, extracted files, and any other metadata generated. Transfer files and metadata with grsync Grsync is a rsync GUI (Graphical User Interface). Rsync is a well-known and powerful command line directory and file synchronization tool that can be used to synchronize files, folders, and make backups. Documentation and more information on Grsync here . If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Overview"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#bitcurator-walkthrough","text":"See below for a high-level workflow users can follow when in the BitCurator Environment. 1 Imaging and Recovery 1.1 Safely Mount Devices 1.2 Create Disk Images 2 Forensics and Reporting 2.1 Extract metadata from disk images and files 2.2 Identify potentially private and sensitive information 2.3 Generate Forensic Reports 2.4 Deduplicate Files 2.5 File Export 2.6 Forensics and Reporting Nautilus Scripts 3 Package and Export 3.1 Package files and metadata with BagIt Python 3.2 Transfer files and metadata with grsync","title":"BitCurator Walkthrough"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#imaging-and-recovery","text":"BitCurator supports multiple acquisition scenarios: attaching physical media to inspect and analyze digital materials, creating forensic disk images, or transferring files into the environment.","title":"Imaging and Recovery"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#safely-mount-devices","text":"If you have devices (e.g. USB drives, CD-ROMs) that you'd like to image or explore with BitCurator, you can connect them so that BitCurator can see them, but safely: no worries about writing any data back to the device. For example, last modified dates assigned by the target media's file system won't be overwritten with the current date. The safe mount script provides write-blocked access to removable media. Mounting is a technical term for registering a storage device with the host system so it can be browsed or used, and you will need to mount any external device attached to the BitCurator system, whether that occurs automatically or by invoking the safe mount script. Images of devices, (e.g. forensic images of floppies, CDs or drives) need to be mounted as well for most uses. Safely Mount Devices (Step-by-Step Guide)","title":"Safely Mount Devices"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#create-disk-images","text":"BitCurator uses open source disk imaging tools, such as Guymager and dcfldd , to capture bit-identical images from magnetic, optical, solid-state, and hybrid media. Disk images can be captured in various formats, including raw (just the bitstream), E01 (Expert Witness Format, which we support using the open source libewf library), and AFF (Advanced Forensic Format). Capturing disk images in forensic formats such as E01 and AFF provides many advantages. The images can be stored compressed or uncompressed, can be split into multiple storage containers, can be parsed at the file system level without explicitly extracting the raw image, and can be embedded with provenance and capture metadata. Forensic images ensure that no inadvertent changes are made during pre-ingest chain-of-custody , and provide a consistent baseline for generating different types of access materials. In the BitCurator Environment, forensically-packaged disk images can be mounted by right-clicking on them and selecting \"Mount Disk Image\". This allows you to browse the source in a safe, read-only environment. Image with Guymager: Create a perfect capture of your device's file structure and all contents (including hidden files and fragments) PLUS package this image with information about the disk imaging process. When anyone accesses the disk image later on, they'll have information about who imaged the device, when the device was imaged, etc. as well as be able to explore the exact state of the device as it was when you imaged it. Imaging with Guymager (Step-by-Step Guide) Image with dcfldd: This command line program is an enhance version of the dd program. If you are having trouble with Guymager, or if you are comfortable with command line use, dcfldd can be very useful and scriptable. Please see the dcfldd entry on the Forensics Wiki for general use. Along with dcfldd , there are a host of command line tools in the Imaging and Recovery folder on the BitCurator Environment desktop, all listed on the Tools page.","title":"Create Disk Images"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#forensics-and-reporting","text":"BitCurator includes multiple software tools that assist users with identifying and prioritizing important information in raw and forensically packaged disk images. This includes files format identification, location of deleted files and files fragments, cryptographic hashing, and reporting on potentially private and personally identifying information. BitCurator generates technical metadata in the form of Digital Forensics XML (DFXML). DFXML has been developed around a set of digital forensics tools that can both consume and produce a common set of tags; DFXML has an evolving schema and tag library, and is well documented . BitCurator also generates PREMIS metadata for each data forensics tool that is applied to a disk image, providing an accurate record of provenance for each stage of processing.","title":"Forensics and Reporting"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#extract-metadata-from-disk-images-and-files","text":"BitCurator incorporates file system analytics and stream-based forensics technologies to identify and assist with redaction of potentially private and sensitive information (including personally identifiable information). In particular, BitCurator incorporates fiwalk , a tool originally developed by Simson Garfinkel (and later incorporated into The Sleuth Kit ), to export an XML file detailing file system hierarchy within a disk image, including files and folders, deleted materials, and information in slack space. Please see the following Step-by-Step Guides : Generate file system metadata as DFXML: Fiwalk View, edit, and export metadata from image files: pyExifToolGUI View and export information from HFS-formatted disk images: HFS Explorer","title":"Extract metadata from disk images and files"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#identify-potentially-private-and-sensitive-information","text":"BitCurator includes bulk_extractor (and the bulk_extractor GUI, BEViewer) to assist users in finding potentially private and sensitive information. The bulk_extractor tool employs stream-based forensics (analyzing the disk image at the block level) to identify features such as email addresses, geolocation metadata, and credit card numbers. Please see the following Step-by-Step Guides : Find potentially sensitive information: Bulk Extractor Viewer Guide to regular expressions in Bulk Extractor: Regular Expressions in Bulk Extractor Guide to Bulk Extractor scanners and what they do: Understanding Bulk Extractor Scanners","title":"Identify potentially private and sensitive information"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#generate-forensic-reports","text":"Users can generate human-friendly BitCurator Forensic Reports using the data produced by Guymager, the Bulk Extractor Viewer, fiwalk, and Annotated Features report to explore born-digital materials completely (including hidden or partially deleted files and file fragments) with visualizations, XLSX transcriptions of file system metadata, high-level reports on file types, and overviews of features identified by bulk_extractor. There are two ways to generate BitCurator Forensic Reports, please reference the following Step-by-Step Guides : Option A: Use \"Run All\" feature to generate all reports in one step: Creating Disk Image Reports using the BitCurator Reporting Tool Option B: Run each step individually for additional control and customization: Find potentially sensitive information: Bulk Extractor Viewer Generate filesystem metadata as DFXML: Fiwalk Generate Annotated Features Reports: Annotated Features Report Generate Forensic Reports: Forensic Reports","title":"Generate Forensic Reports"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#deduplicate-files","text":"Identify and delete duplicate files: FSlint (Step-by-Step Guide)","title":"Deduplicate Files"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#file-export","text":"Access and export files from disk images: Access and Export Files from Disk Images (Step-by-Step Guide)","title":"File Export"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#forensics-and-reporting-nautilus-scripts","text":"Nautilus is a popular GUI file manager for Linux and it functions similarly to Windows Explorer on Windows systems and Finder on Macs. One key feature of Nautilus is the ability to add custom functionality by incorporating user-created back-end scripts. These scripts work much like plug-ins for a web browser and extend Nautilus's basic functionality. A number of custom Nautilus scripts are included in the BitCurator Environment specifically geared to assist the digital archivist in pre-ingest data analysis. See below for Step-by-Step Guides on how to use Nautilus to perform a number of critical data analysis tasks: Create MD5 Sums (Nautilus) Extract Compressed Files (Nautilus) Review File Info and Details (Nautilus) Disk Image Metadata (Nautilus) Display a file in Hex editor (Nautilus) Live Search for Files (Nautilus) BitCurator includes a number of other tools to assist users with data triage; identifying and prioritizing important information in raw and forensically packaged disk images. This includes files format identification, location of deleted files and file fragments, cryptographic hashing, and reporting on potentially private and personally identifying information. BitCurator includes Vassil Roussev's sdhash to report on file similarity, regripper for Windows registry analysis, and ClamAV for virus and malware detection. These are listed on the Tools page.","title":"Forensics and Reporting Nautilus Scripts"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#package-and-export","text":"The BitCurator environment also includes tools to assist in preparing and packaging born-digital materials for transfer to preservation storage and access platforms.","title":"Package and Export"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#package-files-and-metadata-with-bagit-python","text":"Bagit Python is a library and command line utility for working with BagIt style packages. Documentation on using Bagit Python utility can be found here . Bags are useful for transferring packages of data from one location to another location across a network. This might be a local area network or somewhere across the internet. You can then verify the receipt of the bags and ensure that the data has not changed during transfer. An example use would be to create a bag of the data that you have processed in BitCurator. This bag could include the disk images, report outputs, extracted files, and any other metadata generated.","title":"Package files and metadata with BagIt Python"},{"location":"BitCurator%20Walkthrough/BitCurator%20Walkthrough/#transfer-files-and-metadata-with-grsync","text":"Grsync is a rsync GUI (Graphical User Interface). Rsync is a well-known and powerful command line directory and file synchronization tool that can be used to synchronize files, folders, and make backups. Documentation and more information on Grsync here . If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Transfer files and metadata with grsync"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/","text":"BitCurator Workflow Diagrams Overview This page provides an overview of the four basic areas of archival workflow with born-digital materials that BitCurator supports. Workflow Components Forensic disk imaging Data triage Identification of private and sensitive information Metadata export Member Workflows View additional workflows created by members of the BitCurator Consortium members here: https://bitcuratorconsortium.org/workflows If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"BitCurator Workflow Diagrams"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/#bitcurator-workflow-diagrams","text":"","title":"BitCurator Workflow Diagrams"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/#overview","text":"This page provides an overview of the four basic areas of archival workflow with born-digital materials that BitCurator supports.","title":"Overview"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/#workflow-components","text":"Forensic disk imaging Data triage Identification of private and sensitive information Metadata export","title":"Workflow Components"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/#member-workflows","text":"View additional workflows created by members of the BitCurator Consortium members here: https://bitcuratorconsortium.org/workflows If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Member Workflows"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Data%20Triage/","text":"Data Triage BitCurator triage facilities (click image to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Data Triage"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Data%20Triage/#data-triage","text":"BitCurator triage facilities (click image to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Data Triage"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Forensic%20Disk%20Imaging/","text":"Forensic Disk Imaging BitCurator imaging procedure (click to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Forensic Disk Imaging"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Forensic%20Disk%20Imaging/#forensic-disk-imaging","text":"BitCurator imaging procedure (click to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Forensic Disk Imaging"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Forensic%20Processing%20and%20Identification%20of%20Potentially%20Sensitive%20Information/","text":"Forensic Processing and Identification of Potentially Sensitive Information BitCurator Potentially Sensitive Information/PII identification (click image to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Forensic Processing and Identification of Potentially Sensitive Information"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Forensic%20Processing%20and%20Identification%20of%20Potentially%20Sensitive%20Information/#forensic-processing-and-identification-of-potentially-sensitive-information","text":"BitCurator Potentially Sensitive Information/PII identification (click image to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Forensic Processing and Identification of Potentially Sensitive Information"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Metadata%20Export/","text":"Metadata Export BitCurator metadata export (click image to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Metadata Export"},{"location":"BitCurator%20Walkthrough/BitCurator%20Workflow%20Diagrams/Metadata%20Export/#metadata-export","text":"BitCurator metadata export (click image to zoom) If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the BitCurator Walkthrough section.","title":"Metadata Export"},{"location":"Development/Development/","text":"Development BitCurator software is housed in a set of repositories on GitHub. The BitCurator GitHub organization serves as an entry-point for these repositories. Visit https://github.com/bitcurator to see current and legacy repositories, or https://bitcurator.github.io/ for a description of how these repositories are organized by project. Release Process and Schedule Provides information on how the Consortium manages feature updates, bugfixes, and release scheduling. Roadmap Additional information on future development and integration tasks. Onboarding documentation for developers Read about areas you can contribute to and the technologies used. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Development section.","title":"Overview"},{"location":"Development/Development/#development","text":"BitCurator software is housed in a set of repositories on GitHub. The BitCurator GitHub organization serves as an entry-point for these repositories. Visit https://github.com/bitcurator to see current and legacy repositories, or https://bitcurator.github.io/ for a description of how these repositories are organized by project.","title":"Development"},{"location":"Development/Development/#release-process-and-schedule","text":"Provides information on how the Consortium manages feature updates, bugfixes, and release scheduling.","title":"Release Process and Schedule"},{"location":"Development/Development/#roadmap","text":"Additional information on future development and integration tasks.","title":"Roadmap"},{"location":"Development/Development/#onboarding-documentation-for-developers","text":"Read about areas you can contribute to and the technologies used. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Development section.","title":"Onboarding documentation for developers"},{"location":"Development/Onboarding/","text":"Onboarding BitCurator projects are maintained by members of the community. Interested in being added as a member? Read about areas you can contribute to and the technologies used below! Contact with our Software Development Committee The code and development documentation for all BitCurator projects are maintained in Github Repositories ( https://github.com/bitcurator ), where both non-coding and development work is maintained and completed. More information on using Git and Github: Git Handbook \u00b7 GitHub Guides Non-coding There are a variety of tasks essential to the development and maintenance of BCC projects that don't require prior experience with coding. Testing software , documenting bugs: Top 7 Major Goals of A Good Software Tester How to Write A Good Bug Report? Tips and Tricks Bug report writing guidelines - Mozilla | MDN Check and Confirm bugs that been submitted as issues Issue Pages for BitCurator Projects* https://github.com/BitCurator/bitcurator-distro/issues * https://github.com/BitCurator/bitcurator-distro-installer/issues * https://github.com/BitCurator/bitcurator-distro-tools/issues * https://github.com/BitCurator/bitcurator-distro-metadata/issues * https://github.com/BitCurator/bitcurator-access-webtools/issues * https://github.com/BitCurator/bitcurator-access-redaction/issues * https://github.com/BitCurator/bitcurator-redact-pdf/issues * https://github.com/BitCurator/bitcurator-nlp-gentm/issues * https://github.com/BitCurator/bitcurator-nlp-entspan/issues Documentation - Take part in keeping project user and development documentation up-to-date. https://confluence.educopia.org/display/BC/Development https://github.com/BitCurator/bitcurator-distro/wiki https://github.com/BitCurator/bitcurator-access/wiki . README Pages for BitCurator Projects - install and development info* https://github.com/BitCurator/bitcurator-distro/blob/master/README.md * https://github.com/BitCurator/bitcurator-distro-salt/blob/master/README.md * https://github.com/BitCurator/bitcurator-distro-tools/blob/master/README.md * https://github.com/BitCurator/bitcurator-distro-metadata/blob/master/README.md * https://github.com/BitCurator/bitcurator-access-webtools/blob/master/README.md * https://github.com/BitCurator/bitcurator-access-redaction/blob/master/README.md * https://github.com/BitCurator/bitcurator-redact-pdf/blob/master/README.md * https://github.com/BitCurator/bitcurator-nlp-gentm/blob/master/README.md * https://github.com/BitCurator/bitcurator-nlp-entspan/blob/master/README.md For developers The BitCurator family of research projects include three main projects: BitCurator, BitCurator Access, and BitCurator NLP. The repositories for each are linked below along with links to documentation for working with the technology stacks used in each project. BitCurator Environment The BitCurator environment is a customized variant of Ubuntu, configured using Salt Stack along with several repositories of custom tools including: bitcurator-adduser and bitcurator-metadata Current repositories: https://github.com/BitCurator/bitcurator-distro https://github.com/BitCurator/bitcurator-distro-installer https://github.com/BitCurator/bitcurator-distro-salt https://github.com/BitCurator/bitcurator-distro-tools Optional functionality and scripts: https://github.com/BitCurator/bitcurator-distro-adduser https://github.com/BitCurator/bitcurator-distro-metadata Technology Stack: Ubuntu - Base operating system, user interface, tools help.ubuntu.com Salt Stack - SaltStack Documentation Shell Scripting - BASH Programming - Introduction HOW-TO Bash Scripting Tutorial for Beginners Python - Our Documentation - python.org Related components - reingart/pyfpdf: Simple PDF generation for Python (FPDF PHP port) XSLT - Introduction to XSLT BitCurator Access Webtools The BitCurator Access Webtools project is comprised of a single repository. The README provides instructions for both end users and developers to clone and build from source. Current repository: https://github.com/BitCurator/bitcurator-access-webtools Technology Stack: The Sleuth Kit - http://www.sleuthkit.org/sleuthkit/ PyTSK - https://github.com/py4n6/pytsk Flask - https://flask.pocoo.org/ Postgres - https://www.postgresql.org/docs/current/ BitCurator Access Redaction Tools The BitCurator Access Redaction tools project is comprised of two repositories. The READMEs provide instructions for both end users and developers to clone and build from source. Current repositories: https://github.com/BitCurator/bitcurator-access-redaction https://github.com/bitcurator/bitcurator-redact-pdf Technology Stack: The Sleuth Kit - http://www.sleuthkit.org/sleuthkit/ Liblightgrep - http://strozfriedberg.github.io/liblightgrep/ BitCurator NLP Tools The BitCurator NLP project includes several repositories. The topic model generation environment (bitcurator-nlp-gentm) enables automatic extraction of text from heterogeneous document collections within disk images to generate user-browsable topic models within a web browser. The disk browsing environment (bitcurator-access-webtools) provides full-text browsing of documents contained within disk images, along with (in progress) analysis of entities identified within those documents. Various command-line tools are provided in another repository (bitcurator-nlp-entspan). Current repositories: https://github.com/BitCurator/bitcurator-nlp-gentm https://github.com/BitCurator/bitcurator-access-webtools https://github.com/BitCurator/bitcurator-nlp-entspan Technology Stack: Sleuth Ki t- to parse file systems in disk images, https://github.com/sleuthkit/sleuthkit textract- to extract text from common file formats https://textract.readthedocs.io/en/stable/ gensim - to generate topic models https://radimrehurek.com/gensim/ pyLDAvis - https://github.com/bmabey/pyLDAvis )","title":"Onboarding"},{"location":"Development/Onboarding/#onboarding","text":"BitCurator projects are maintained by members of the community. Interested in being added as a member? Read about areas you can contribute to and the technologies used below! Contact with our Software Development Committee The code and development documentation for all BitCurator projects are maintained in Github Repositories ( https://github.com/bitcurator ), where both non-coding and development work is maintained and completed. More information on using Git and Github: Git Handbook \u00b7 GitHub Guides","title":"Onboarding"},{"location":"Development/Onboarding/#non-coding","text":"There are a variety of tasks essential to the development and maintenance of BCC projects that don't require prior experience with coding. Testing software , documenting bugs: Top 7 Major Goals of A Good Software Tester How to Write A Good Bug Report? Tips and Tricks Bug report writing guidelines - Mozilla | MDN Check and Confirm bugs that been submitted as issues Issue Pages for BitCurator Projects* https://github.com/BitCurator/bitcurator-distro/issues * https://github.com/BitCurator/bitcurator-distro-installer/issues * https://github.com/BitCurator/bitcurator-distro-tools/issues * https://github.com/BitCurator/bitcurator-distro-metadata/issues * https://github.com/BitCurator/bitcurator-access-webtools/issues * https://github.com/BitCurator/bitcurator-access-redaction/issues * https://github.com/BitCurator/bitcurator-redact-pdf/issues * https://github.com/BitCurator/bitcurator-nlp-gentm/issues * https://github.com/BitCurator/bitcurator-nlp-entspan/issues Documentation - Take part in keeping project user and development documentation up-to-date. https://confluence.educopia.org/display/BC/Development https://github.com/BitCurator/bitcurator-distro/wiki https://github.com/BitCurator/bitcurator-access/wiki . README Pages for BitCurator Projects - install and development info* https://github.com/BitCurator/bitcurator-distro/blob/master/README.md * https://github.com/BitCurator/bitcurator-distro-salt/blob/master/README.md * https://github.com/BitCurator/bitcurator-distro-tools/blob/master/README.md * https://github.com/BitCurator/bitcurator-distro-metadata/blob/master/README.md * https://github.com/BitCurator/bitcurator-access-webtools/blob/master/README.md * https://github.com/BitCurator/bitcurator-access-redaction/blob/master/README.md * https://github.com/BitCurator/bitcurator-redact-pdf/blob/master/README.md * https://github.com/BitCurator/bitcurator-nlp-gentm/blob/master/README.md * https://github.com/BitCurator/bitcurator-nlp-entspan/blob/master/README.md","title":"Non-coding"},{"location":"Development/Onboarding/#for-developers","text":"The BitCurator family of research projects include three main projects: BitCurator, BitCurator Access, and BitCurator NLP. The repositories for each are linked below along with links to documentation for working with the technology stacks used in each project.","title":"For developers"},{"location":"Development/Onboarding/#bitcurator-environment","text":"The BitCurator environment is a customized variant of Ubuntu, configured using Salt Stack along with several repositories of custom tools including: bitcurator-adduser and bitcurator-metadata Current repositories: https://github.com/BitCurator/bitcurator-distro https://github.com/BitCurator/bitcurator-distro-installer https://github.com/BitCurator/bitcurator-distro-salt https://github.com/BitCurator/bitcurator-distro-tools Optional functionality and scripts: https://github.com/BitCurator/bitcurator-distro-adduser https://github.com/BitCurator/bitcurator-distro-metadata Technology Stack: Ubuntu - Base operating system, user interface, tools help.ubuntu.com Salt Stack - SaltStack Documentation Shell Scripting - BASH Programming - Introduction HOW-TO Bash Scripting Tutorial for Beginners Python - Our Documentation - python.org Related components - reingart/pyfpdf: Simple PDF generation for Python (FPDF PHP port) XSLT - Introduction to XSLT","title":"BitCurator Environment"},{"location":"Development/Onboarding/#bitcurator-access-webtools","text":"The BitCurator Access Webtools project is comprised of a single repository. The README provides instructions for both end users and developers to clone and build from source. Current repository: https://github.com/BitCurator/bitcurator-access-webtools Technology Stack: The Sleuth Kit - http://www.sleuthkit.org/sleuthkit/ PyTSK - https://github.com/py4n6/pytsk Flask - https://flask.pocoo.org/ Postgres - https://www.postgresql.org/docs/current/","title":"BitCurator Access Webtools"},{"location":"Development/Onboarding/#bitcurator-access-redaction-tools","text":"The BitCurator Access Redaction tools project is comprised of two repositories. The READMEs provide instructions for both end users and developers to clone and build from source. Current repositories: https://github.com/BitCurator/bitcurator-access-redaction https://github.com/bitcurator/bitcurator-redact-pdf Technology Stack: The Sleuth Kit - http://www.sleuthkit.org/sleuthkit/ Liblightgrep - http://strozfriedberg.github.io/liblightgrep/","title":"BitCurator Access Redaction Tools"},{"location":"Development/Onboarding/#bitcurator-nlp-tools","text":"The BitCurator NLP project includes several repositories. The topic model generation environment (bitcurator-nlp-gentm) enables automatic extraction of text from heterogeneous document collections within disk images to generate user-browsable topic models within a web browser. The disk browsing environment (bitcurator-access-webtools) provides full-text browsing of documents contained within disk images, along with (in progress) analysis of entities identified within those documents. Various command-line tools are provided in another repository (bitcurator-nlp-entspan). Current repositories: https://github.com/BitCurator/bitcurator-nlp-gentm https://github.com/BitCurator/bitcurator-access-webtools https://github.com/BitCurator/bitcurator-nlp-entspan Technology Stack: Sleuth Ki t- to parse file systems in disk images, https://github.com/sleuthkit/sleuthkit textract- to extract text from common file formats https://textract.readthedocs.io/en/stable/ gensim - to generate topic models https://radimrehurek.com/gensim/ pyLDAvis - https://github.com/bmabey/pyLDAvis )","title":"BitCurator NLP Tools"},{"location":"Development/Release%20Process%20and%20Schedule/","text":"Release Process and Schedule BitCurator Consortium Software Development Committee This page outlines a process by which issues identified in the public BitCurator User Forum can be raised to the attention of BitCurator Consortium members for possible action or resolution. A proposed software release schedule is also outlined. Current Identification of Software Issues and Features Non-member users identify issues and post them to public BitCurator User Forum. Member users identify issues and post in the BitCurator User Forum. Members can also create new feature requests Proposed Software Release Process MONTHLY A designated site monitor reviews all posts on public BitCurator User Forum and generates a list to the BCC Software Development Committee, containing: Frequently mentioned issues (those receiving a high number of views/responses) High-priority issues that may document major bugs or other software issues Feature requests that may be outcomes of ongoing user group communication MONTHLY Designated site monitor creates tickets for any User Forum issues that will be included for voting. The Software Development Committee briefly reviews and discusses these tickets during that group\u2019s monthly meeting. QUARTERLY A reminder to BCC members is put out for votes on issue list (votes and feedback are always available to members however). QUARTERLY The Software Development Committee reviews issue list and recommends features and fixes to be prioritized for Executive Council action. SDC recommendation can be either green/red/yellow, where: RED is for fixes/features that are not recommended for the current or upcoming release cycle, or for features which are being removed from the suite due to incompatibilities or discontinuation of a tool, etc. YELLOW is for fixes/features that are not recommended for the current release cycle but may be recommended for subsequent releases (with reasons for why not - could be dependencies, lack of funding, etc.) GREEN is for fixes/features that are recommended for current release cycle, with reasons why, plus any additional information (i.e., should be included as a bounty, or requires external funding partnership for inclusion) NOTE: Prioritization should be as transparent as possible, with notes on justifications for recommendations provided for Executive Council and available to all BCC members. The BCC Executive Council approves the SDC recommendation or discusses and proceeds to adjustments of the recommended plan. Development targets are announced for next quarterly release and linked to specific threads in the BitCurator user mailing list as warranted Post is made to BitCurator User Forum Email is sent to all BCC members Announced and discussed at BCC monthly call Release notes from BitCurator User Forum also posted to Confluence wiki site Added to public Road Map on Confluence site Software Release Schedule Major issues and new features Every 12 months Maintenance (core OS, VirtualBox updates) Every 3 months Roles and Responsibilities Non-member Users Submit issues, bugs, feature requests to public BitCurator Users Forum Member Users Submit issues and bugs Create new feature requests Vote on open issues and feature requests User Forum Site Monitor Review issues on public BitCurator Users Forum Compiles report for SDC Software Development Committee Reviews report of BC user forum Decides which fixes/features will go to Executive Council Documents recommendations in report for Executive Council Committee Chair sends out announcements about new software releases Executive Council Confirms/counters recommendations from SDC If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Development section.","title":"Release Process and Schedule"},{"location":"Development/Release%20Process%20and%20Schedule/#release-process-and-schedule","text":"","title":"Release Process and Schedule"},{"location":"Development/Release%20Process%20and%20Schedule/#bitcurator-consortium-software-development-committee","text":"This page outlines a process by which issues identified in the public BitCurator User Forum can be raised to the attention of BitCurator Consortium members for possible action or resolution. A proposed software release schedule is also outlined.","title":"BitCurator Consortium Software Development Committee"},{"location":"Development/Release%20Process%20and%20Schedule/#current-identification-of-software-issues-and-features","text":"Non-member users identify issues and post them to public BitCurator User Forum. Member users identify issues and post in the BitCurator User Forum. Members can also create new feature requests","title":"Current Identification of Software Issues and Features"},{"location":"Development/Release%20Process%20and%20Schedule/#proposed-software-release-process","text":"MONTHLY A designated site monitor reviews all posts on public BitCurator User Forum and generates a list to the BCC Software Development Committee, containing: Frequently mentioned issues (those receiving a high number of views/responses) High-priority issues that may document major bugs or other software issues Feature requests that may be outcomes of ongoing user group communication MONTHLY Designated site monitor creates tickets for any User Forum issues that will be included for voting. The Software Development Committee briefly reviews and discusses these tickets during that group\u2019s monthly meeting. QUARTERLY A reminder to BCC members is put out for votes on issue list (votes and feedback are always available to members however). QUARTERLY The Software Development Committee reviews issue list and recommends features and fixes to be prioritized for Executive Council action. SDC recommendation can be either green/red/yellow, where: RED is for fixes/features that are not recommended for the current or upcoming release cycle, or for features which are being removed from the suite due to incompatibilities or discontinuation of a tool, etc. YELLOW is for fixes/features that are not recommended for the current release cycle but may be recommended for subsequent releases (with reasons for why not - could be dependencies, lack of funding, etc.) GREEN is for fixes/features that are recommended for current release cycle, with reasons why, plus any additional information (i.e., should be included as a bounty, or requires external funding partnership for inclusion) NOTE: Prioritization should be as transparent as possible, with notes on justifications for recommendations provided for Executive Council and available to all BCC members. The BCC Executive Council approves the SDC recommendation or discusses and proceeds to adjustments of the recommended plan. Development targets are announced for next quarterly release and linked to specific threads in the BitCurator user mailing list as warranted Post is made to BitCurator User Forum Email is sent to all BCC members Announced and discussed at BCC monthly call Release notes from BitCurator User Forum also posted to Confluence wiki site Added to public Road Map on Confluence site","title":"Proposed Software Release Process"},{"location":"Development/Release%20Process%20and%20Schedule/#software-release-schedule","text":"Major issues and new features Every 12 months Maintenance (core OS, VirtualBox updates) Every 3 months","title":"Software Release Schedule"},{"location":"Development/Release%20Process%20and%20Schedule/#roles-and-responsibilities","text":"Non-member Users Submit issues, bugs, feature requests to public BitCurator Users Forum Member Users Submit issues and bugs Create new feature requests Vote on open issues and feature requests User Forum Site Monitor Review issues on public BitCurator Users Forum Compiles report for SDC Software Development Committee Reviews report of BC user forum Decides which fixes/features will go to Executive Council Documents recommendations in report for Executive Council Committee Chair sends out announcements about new software releases Executive Council Confirms/counters recommendations from SDC If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Development section.","title":"Roles and Responsibilities"},{"location":"Development/Roadmap/","text":"Roadmap Current Development Goals Implement a sustainable software release process and schedule Action: Develop release process and schedule (for software and documentation). Action: Implement annual software update releases. Improve user experience of BitCurator environment Action: Determine which BitCurator tools are in most need of user testing through surveys or direct feedback from users. Action: Schedule pilot usability tests with select members of the community to test key components of the BitCurator system. Ensure data and tool outputs are able to interoperate with other systems and tools Action: Evaluate outputs generated by BitCurator reports and toolsets and identify those whose outputs are not in machine-actionable text formats, such as XML, text, JSON, etc. Action: Determine the feasibility of parsing existing tool output to a structured text format , looking for work that already might exist on blogs, GitHub, or StackOverflow. Research increased functionality and support for working with files Action: Inventory tools and utilities existing in the BitCurator environment and identify whether they work on disk images and/or individual files. Action: Determine functionality gaps where tools for working with files don\u2019t exist, and generate a plan to locate and/or develop tools to fit those needs. Support software development by individual developers from member institutions Action: Provide an official platform for individual/independent developers of open source digital forensics tools to promote or further develop their work. Action: Officially recognize and reward products of development work through promotion on BCC communication channels and public programming. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Development section.","title":"Roadmap"},{"location":"Development/Roadmap/#roadmap","text":"","title":"Roadmap"},{"location":"Development/Roadmap/#current-development-goals","text":"","title":"Current Development Goals"},{"location":"Development/Roadmap/#implement-a-sustainable-software-release-process-and-schedule","text":"Action: Develop release process and schedule (for software and documentation). Action: Implement annual software update releases.","title":"Implement a sustainable software release process and schedule"},{"location":"Development/Roadmap/#improve-user-experience-of-bitcurator-environment","text":"Action: Determine which BitCurator tools are in most need of user testing through surveys or direct feedback from users. Action: Schedule pilot usability tests with select members of the community to test key components of the BitCurator system.","title":"Improve user experience of BitCurator environment"},{"location":"Development/Roadmap/#ensure-data-and-tool-outputs-are-able-to-interoperate-with-other-systems-and-tools","text":"Action: Evaluate outputs generated by BitCurator reports and toolsets and identify those whose outputs are not in machine-actionable text formats, such as XML, text, JSON, etc. Action: Determine the feasibility of parsing existing tool output to a structured text format , looking for work that already might exist on blogs, GitHub, or StackOverflow.","title":"Ensure data and tool outputs are able to interoperate with other systems and tools"},{"location":"Development/Roadmap/#research-increased-functionality-and-support-for-working-with-files","text":"Action: Inventory tools and utilities existing in the BitCurator environment and identify whether they work on disk images and/or individual files. Action: Determine functionality gaps where tools for working with files don\u2019t exist, and generate a plan to locate and/or develop tools to fit those needs.","title":"Research increased functionality and support for working with files"},{"location":"Development/Roadmap/#support-software-development-by-individual-developers-from-member-institutions","text":"Action: Provide an official platform for individual/independent developers of open source digital forensics tools to promote or further develop their work. Action: Officially recognize and reward products of development work through promotion on BCC communication channels and public programming. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Development section.","title":"Support software development by individual developers from member institutions"},{"location":"Installing%20BitCurator/Configuring%20BitCurator%20to%20enable%20users%20to%20authenticate%20with%20Active%20Directory%20accounts/","text":"Configuring BitCurator to enable users to authenticate with Active Directory accounts Overview: Active Directory is a service used by many institutions to provide authentication and authorization of users in a Windows Domain type network. The below instructions describe how to configure BitCurator installations to enable multiple user accounts and to enable users to authenticate with accounts that are managed by Active Directory. The result will allow users to login to the BitCurator environment using their centrally managed password. Step-by-step guide Step 1 : Active Directory services are an implementation of the open source Kerberos 5 protocol. Installation of Kerberos client software enables the use of Active Directory for BitCurator. From within BitCurator open the terminal by pressing CTRL + ALT + t and enter the following command to install the needed software: sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config Enter your user password when prompted. Step 2: When prompted, enter the URI of the Active Directory server that you will be connecting to. Example: AD.TEST.ORG The Active Directory server used in your institution can be found from a currently logged in Windows system: From the Windows desktop, right click on the Computer icon Select Properties Look under the Computer name, domain, and workgroup settings for an entry that look similar to: Domain: ad.yourinstitution.edu Step 3: After installing the Kerberos software, we will use the Users and Groups application add the users that will be using Active Directory for authentication. Press the SUPER key and start typing \"Users and Groups\", select the icon once it appears. Click the button for 'Add' to add a new user to the installation. When prompted, enter the Active Directory username in both the Name and Username boxes (username and name must be the same). When prompted to set a password, click cancel. The password for the account will be managed by the Active Directory service. Step 4: The newly created user will need to be added sudo group. With the user highlighted in the left column, click the Manage Groups button, check the necessary groups, and click Ok. Step 5 : Install BitCurator tools for newly created user following using the bitcurator-distro-installer . If not already installed, follow the linked instructions for cloning the installation files. For each new user enter the following command in the Terminal: sudo ./install.sh -u username If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Configuring BitCurator to enable users to authenticate with Active Directory accounts"},{"location":"Installing%20BitCurator/Configuring%20BitCurator%20to%20enable%20users%20to%20authenticate%20with%20Active%20Directory%20accounts/#configuring-bitcurator-to-enable-users-to-authenticate-with-active-directory-accounts","text":"Overview: Active Directory is a service used by many institutions to provide authentication and authorization of users in a Windows Domain type network. The below instructions describe how to configure BitCurator installations to enable multiple user accounts and to enable users to authenticate with accounts that are managed by Active Directory. The result will allow users to login to the BitCurator environment using their centrally managed password.","title":"Configuring BitCurator to enable users to authenticate with Active Directory accounts"},{"location":"Installing%20BitCurator/Configuring%20BitCurator%20to%20enable%20users%20to%20authenticate%20with%20Active%20Directory%20accounts/#step-by-step-guide","text":"Step 1 : Active Directory services are an implementation of the open source Kerberos 5 protocol. Installation of Kerberos client software enables the use of Active Directory for BitCurator. From within BitCurator open the terminal by pressing CTRL + ALT + t and enter the following command to install the needed software: sudo apt-get install krb5-user libpam-krb5 libpam-ccreds auth-client-config Enter your user password when prompted. Step 2: When prompted, enter the URI of the Active Directory server that you will be connecting to. Example: AD.TEST.ORG The Active Directory server used in your institution can be found from a currently logged in Windows system: From the Windows desktop, right click on the Computer icon Select Properties Look under the Computer name, domain, and workgroup settings for an entry that look similar to: Domain: ad.yourinstitution.edu Step 3: After installing the Kerberos software, we will use the Users and Groups application add the users that will be using Active Directory for authentication. Press the SUPER key and start typing \"Users and Groups\", select the icon once it appears. Click the button for 'Add' to add a new user to the installation. When prompted, enter the Active Directory username in both the Name and Username boxes (username and name must be the same). When prompted to set a password, click cancel. The password for the account will be managed by the Active Directory service. Step 4: The newly created user will need to be added sudo group. With the user highlighted in the left column, click the Manage Groups button, check the necessary groups, and click Ok. Step 5 : Install BitCurator tools for newly created user following using the bitcurator-distro-installer . If not already installed, follow the linked instructions for cloning the installation files. For each new user enter the following command in the Terminal: sudo ./install.sh -u username If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Step-by-step guide"},{"location":"Installing%20BitCurator/Installation%20via%20Live%20ISO/","text":"Installation via Live ISO Overview The BitCurator Environment is distributed as a Live ISO (Dedicated Install) that can be used to install the software on a dedicated partition of a machine's drive. This is recommended for production installs. A dedicated install removes the added complexity of working through a virtual machine, and allows the BitCurator Environment to use the full resources of the system. Hardware Requirements Desktop or laptop with an Intel Core i5 or Core i7 processor (or AMD equivalent) 8 GB RAM minimum (16 GB or more recommended) For best performance, we recommend using an SSD (256 GB or larger) when installing and running BitCurator on a dedicated machine. You will need to use an existing machine to write the ISO to a bootable medium (4 GB or larger USB drive, preferably USB 3.0 or better). Installation Instructions Step 1: Create a Bootable USB Drive (Windows and Mac)Download the current BitCurator ISO image from: https://github.com/BitCurator/bitcurator-distro/wiki/Releases Create a bootable USB drive: Windows: follow the instructions at: https://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows Mac: follow the instructions at: https://www.ubuntu.com/download/desktop/create-a-usb-stick-on-macos Step 2: Installing BitCuratorOnce you have a bootable USB drive, power down the machine you wish to install BitCurator on, and plug the USB drive into a primary USB port (do not use a USB hub). Power on the machine. On certain PCs, you may need to enter the BIOS to allow booting from USB drives. Consult the documentation for your particular machine. BitCurator 1.6.22 (and prior versions): Follow the instructions on-screen. The BitCurator installation process is identical to the Ubuntu installation process, with the exception that the default user (bcadmin) has already been created. BitCurator 1.7.16 (and later versions): Boot to the Live desktop, and then double-click on the Installer icon located on the desktop. If your drive is appropriately partitioned, BitCurator can be installed alongside an existing Windows or Linux operating system. The installer will attempt to automatically identify whether an existing OS is present. Please consult the existing Ubuntu documentation regarding dual installs for additional detail. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Installation via Live ISO"},{"location":"Installing%20BitCurator/Installation%20via%20Live%20ISO/#installation-via-live-iso","text":"","title":"Installation via Live ISO"},{"location":"Installing%20BitCurator/Installation%20via%20Live%20ISO/#overview","text":"The BitCurator Environment is distributed as a Live ISO (Dedicated Install) that can be used to install the software on a dedicated partition of a machine's drive. This is recommended for production installs. A dedicated install removes the added complexity of working through a virtual machine, and allows the BitCurator Environment to use the full resources of the system. Hardware Requirements Desktop or laptop with an Intel Core i5 or Core i7 processor (or AMD equivalent) 8 GB RAM minimum (16 GB or more recommended) For best performance, we recommend using an SSD (256 GB or larger) when installing and running BitCurator on a dedicated machine. You will need to use an existing machine to write the ISO to a bootable medium (4 GB or larger USB drive, preferably USB 3.0 or better).","title":"Overview"},{"location":"Installing%20BitCurator/Installation%20via%20Live%20ISO/#installation-instructions","text":"Step 1: Create a Bootable USB Drive (Windows and Mac)Download the current BitCurator ISO image from: https://github.com/BitCurator/bitcurator-distro/wiki/Releases Create a bootable USB drive: Windows: follow the instructions at: https://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows Mac: follow the instructions at: https://www.ubuntu.com/download/desktop/create-a-usb-stick-on-macos Step 2: Installing BitCuratorOnce you have a bootable USB drive, power down the machine you wish to install BitCurator on, and plug the USB drive into a primary USB port (do not use a USB hub). Power on the machine. On certain PCs, you may need to enter the BIOS to allow booting from USB drives. Consult the documentation for your particular machine. BitCurator 1.6.22 (and prior versions): Follow the instructions on-screen. The BitCurator installation process is identical to the Ubuntu installation process, with the exception that the default user (bcadmin) has already been created. BitCurator 1.7.16 (and later versions): Boot to the Live desktop, and then double-click on the Installer icon located on the desktop. If your drive is appropriately partitioned, BitCurator can be installed alongside an existing Windows or Linux operating system. The installer will attempt to automatically identify whether an existing OS is present. Please consult the existing Ubuntu documentation regarding dual installs for additional detail. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Installation Instructions"},{"location":"Installing%20BitCurator/Installation%20via%20Virtual%20Machine/","text":"Installation via Virtual Machine Overview Using the BitCurator Environment through a virtual machine allows you to install the software as another program on an existing computer. This can be very useful for both testing the software and instruction. It is also helpful if you do not have access or the ability to install directly on a drive. However, if you anticipate using the software regularly or routinely, it is best to arrange for a dedicated install. Hardware Requirements Desktop or laptop with an Intel Core i7 (or similar) processor running 64-bit Windows 7/8/8.1/10, macOS 10.10 (or newer), or a 64-bit Linux variant 8 GB RAM or more 12 GB free hard disk space minimum. The virtual machine is approximately 9 GB. It will expand to 256 GB as needed Installation Instructions Step 1: Download Software BitCurator Virtual Machine or Live CD: https://github.com/BitCurator/bitcurator-distro/wiki/Releases * Current release of VirtualBox: https://www.virtualbox.org/wiki/Downloads * The VirtualBox Extension Pack must be installed on the host for shared folder support, USB 2.0/3.0 support, and support for some NVMe SSDs. Once you\u2019ve installed VirtualBox, use the link below the main download on VirtualBox download site to install the Extension Pack on your host. Step 2: Unpack the BitCurator Virtual MachineThe BitCurator Virtual Machine is packaged as a tar archive and compressed with gzip. The file will look something like: \u201cBitCurator-X.X.X.tar.gz\u201d * On a Mac (OS X 10.10 or later) or Linux host machine, you can simply double-click on the file to unpack the contents. On a Windows machine, you may need a 3rd party utility such as 7-zip: https://www.7-zip.org/download.html When using 7-zip, you\u2019ll need to unpack the .tar.gz file. Right click on the .tar.gz file and select \u201cExtract here\u2026\u201d to extract the .tar file. Then right click on the .tar file and select \u201cExtract here\u2026\u201d again. This will extract a directory containing the BitCurator virtual machine disk image (.vbox) and configuration (.vdi) files. Once you\u2019ve unpacked the archive, you\u2019ll find a directory containing two files (where X.X.X is your downloaded version): BitCurator-X.X.X.vbox (the VirtualBox configuration file) BitCurator-X.X.X.vdi (the VirtualBox disk image) Copy this directory to a location of your choosing (inside the \u201cVirtualBox VMs\u201d directory in your home directory is a good place), and start up VirtualBox. If you\u2019ve never created or used a VM in VirtualBox before, you won\u2019t have a \u201cVirtualBox VMs\u201d directory. Don\u2019t worry \u2013 just remember where you extracted the BitCurator directory. Step 3: Open Oracle VM VirtualBox ManagerOnce you\u2019ve installed VirtualBox and the VirtualBox extension pack, start up VirtualBox. If you\u2019ve never used VirtualBox before, your list of machines (on the left) will be blank. You may need to right-click on the VirtualBox icon and select \u201cRun as Administrator\u201d. Windows machines with certain administrative controls may prevent you from accessing USB devices (or lock out control of the mouse and keyboard) otherwise. VirtualBox Manager in Windows: VirtualBox Manager in macOS: Step 4: Add a Virtual MachineFrom the menu bar, select the menu item \u201cMachine -> Add\u2026\u201d Navigate to the folder containing .vbox file that you extracted. Choose that file, and the Virtual Machine should appear in the list within the manager. Adding a machine (VirtualBox in Windows): Adding a machine (VirtualBox in macOS): Step 5: Configure RAM and ProcessorsClick on the Settings icon, and select the system tab. We recommend a minimum of 4096 MB RAM and 2 processors assigned to the VM. You may wish to change the RAM and number of processors depending on the hardware that you\u2019re running on. For best results, select the largest number in the \u201cgreen\u201d areas for each. Two or more processors assigned for VirtualBox are need to support drag-and-drop functionality. Configuring the VM (VirtualBox in Windows): Configuring the VM (VirtualBox in macOS): Step 6: Enable USB Device CaptureBitCurator depends on a VirtualBox device filter to capture USB devices. In macOS, you\u2019ll find this filter under the USB tab of the \u201cPorts\u201d icon under \u201cSettings\u201d. In Windows, you\u2019ll find it in the \u201cUSB\u201d tab in settings. You don\u2019t need to do anything here, unless you don\u2019t see an entry under \u201cUSB Device Filters\u201d. If you don\u2019t see an entry, select the USB 3.0 radio button, and then create a new filter by clicking on the blue icon to the right of the list. If you don\u2019t need access to USB devices (for example, if you plan to do analysis of existing born-digital data but no disk imaging), you can delete this filter. USB Filters (VirtualBox in Windows): USB Filters (VirtualBox in macOS): Step 7: Setup Shared FoldersIf you wish to move processed materials back to your host machine from the BitCurator VM, you can set up a shared folder that both the host and the VM can write to. In the Shared Folders tab, click the folder with the green \u201cplus\u201d on it to choose a folder on your host machine to share. Select \u201cAutomount\u201d but not \u201cRead Only\u201d. When the machine is booted, the folder will appear in the \u201cShared Folders and Media\u201d folder on the desktop in the VM. Shared Folders (VirtualBox in Windows): Shared Folders (VirtualBox in macOS): Step 8: Starting the BitCurator Environment (VM)Click on the green \u201cStart\u201d arrow in the Oracle VM VirtualBox Manager screen to start the BitCurator environment. You will see a startup screen, and then the BitCurator environment will boot and automatically log in. If you encounter a menu screen on boot, simply hit the Return key to continue. If you see an error message mentioning virtualization extensions, or \u201cIntel VT-x\u201d, your host machine\u2019s BIOS does not have the VT-x extensions enabled. You\u2019ll need to reboot your computer, holding down \u201cDel\u201d (or \u201cEsc\u201d, or the \u201cThinkPad\u201d button, depending on your machine). Once you\u2019re in the BIOS, locate the correct menu entry and enable the \u201cIntel Virtualization Extensions\u201d. If BitCurator fails to boot for other reasons, it may be due to a \u201cnon-optimal setting\u201d detected for your particular hardware. Try powering off the virtual machine, checking your settings, and starting again. If you\u2019re still having a problem, let us know on the BitCurator users group . The BitCurator virtual machine should log in automatically. If you log out or the machine goes to sleep, the password to log back in is \u201c bcadmin \u201d. You can also use this password to update installed software, if prompted. Virtual Machine Login BitCurator includes a default user. You are strongly encouraged to change the default password following the first login. username: bcadmin password: bcadmin If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Installation via Virtual Machine"},{"location":"Installing%20BitCurator/Installation%20via%20Virtual%20Machine/#installation-via-virtual-machine","text":"","title":"Installation via Virtual Machine"},{"location":"Installing%20BitCurator/Installation%20via%20Virtual%20Machine/#overview","text":"Using the BitCurator Environment through a virtual machine allows you to install the software as another program on an existing computer. This can be very useful for both testing the software and instruction. It is also helpful if you do not have access or the ability to install directly on a drive. However, if you anticipate using the software regularly or routinely, it is best to arrange for a dedicated install. Hardware Requirements Desktop or laptop with an Intel Core i7 (or similar) processor running 64-bit Windows 7/8/8.1/10, macOS 10.10 (or newer), or a 64-bit Linux variant 8 GB RAM or more 12 GB free hard disk space minimum. The virtual machine is approximately 9 GB. It will expand to 256 GB as needed","title":"Overview"},{"location":"Installing%20BitCurator/Installation%20via%20Virtual%20Machine/#installation-instructions","text":"Step 1: Download Software BitCurator Virtual Machine or Live CD: https://github.com/BitCurator/bitcurator-distro/wiki/Releases * Current release of VirtualBox: https://www.virtualbox.org/wiki/Downloads * The VirtualBox Extension Pack must be installed on the host for shared folder support, USB 2.0/3.0 support, and support for some NVMe SSDs. Once you\u2019ve installed VirtualBox, use the link below the main download on VirtualBox download site to install the Extension Pack on your host. Step 2: Unpack the BitCurator Virtual MachineThe BitCurator Virtual Machine is packaged as a tar archive and compressed with gzip. The file will look something like: \u201cBitCurator-X.X.X.tar.gz\u201d * On a Mac (OS X 10.10 or later) or Linux host machine, you can simply double-click on the file to unpack the contents. On a Windows machine, you may need a 3rd party utility such as 7-zip: https://www.7-zip.org/download.html When using 7-zip, you\u2019ll need to unpack the .tar.gz file. Right click on the .tar.gz file and select \u201cExtract here\u2026\u201d to extract the .tar file. Then right click on the .tar file and select \u201cExtract here\u2026\u201d again. This will extract a directory containing the BitCurator virtual machine disk image (.vbox) and configuration (.vdi) files. Once you\u2019ve unpacked the archive, you\u2019ll find a directory containing two files (where X.X.X is your downloaded version): BitCurator-X.X.X.vbox (the VirtualBox configuration file) BitCurator-X.X.X.vdi (the VirtualBox disk image) Copy this directory to a location of your choosing (inside the \u201cVirtualBox VMs\u201d directory in your home directory is a good place), and start up VirtualBox. If you\u2019ve never created or used a VM in VirtualBox before, you won\u2019t have a \u201cVirtualBox VMs\u201d directory. Don\u2019t worry \u2013 just remember where you extracted the BitCurator directory. Step 3: Open Oracle VM VirtualBox ManagerOnce you\u2019ve installed VirtualBox and the VirtualBox extension pack, start up VirtualBox. If you\u2019ve never used VirtualBox before, your list of machines (on the left) will be blank. You may need to right-click on the VirtualBox icon and select \u201cRun as Administrator\u201d. Windows machines with certain administrative controls may prevent you from accessing USB devices (or lock out control of the mouse and keyboard) otherwise. VirtualBox Manager in Windows: VirtualBox Manager in macOS: Step 4: Add a Virtual MachineFrom the menu bar, select the menu item \u201cMachine -> Add\u2026\u201d Navigate to the folder containing .vbox file that you extracted. Choose that file, and the Virtual Machine should appear in the list within the manager. Adding a machine (VirtualBox in Windows): Adding a machine (VirtualBox in macOS): Step 5: Configure RAM and ProcessorsClick on the Settings icon, and select the system tab. We recommend a minimum of 4096 MB RAM and 2 processors assigned to the VM. You may wish to change the RAM and number of processors depending on the hardware that you\u2019re running on. For best results, select the largest number in the \u201cgreen\u201d areas for each. Two or more processors assigned for VirtualBox are need to support drag-and-drop functionality. Configuring the VM (VirtualBox in Windows): Configuring the VM (VirtualBox in macOS): Step 6: Enable USB Device CaptureBitCurator depends on a VirtualBox device filter to capture USB devices. In macOS, you\u2019ll find this filter under the USB tab of the \u201cPorts\u201d icon under \u201cSettings\u201d. In Windows, you\u2019ll find it in the \u201cUSB\u201d tab in settings. You don\u2019t need to do anything here, unless you don\u2019t see an entry under \u201cUSB Device Filters\u201d. If you don\u2019t see an entry, select the USB 3.0 radio button, and then create a new filter by clicking on the blue icon to the right of the list. If you don\u2019t need access to USB devices (for example, if you plan to do analysis of existing born-digital data but no disk imaging), you can delete this filter. USB Filters (VirtualBox in Windows): USB Filters (VirtualBox in macOS): Step 7: Setup Shared FoldersIf you wish to move processed materials back to your host machine from the BitCurator VM, you can set up a shared folder that both the host and the VM can write to. In the Shared Folders tab, click the folder with the green \u201cplus\u201d on it to choose a folder on your host machine to share. Select \u201cAutomount\u201d but not \u201cRead Only\u201d. When the machine is booted, the folder will appear in the \u201cShared Folders and Media\u201d folder on the desktop in the VM. Shared Folders (VirtualBox in Windows): Shared Folders (VirtualBox in macOS): Step 8: Starting the BitCurator Environment (VM)Click on the green \u201cStart\u201d arrow in the Oracle VM VirtualBox Manager screen to start the BitCurator environment. You will see a startup screen, and then the BitCurator environment will boot and automatically log in. If you encounter a menu screen on boot, simply hit the Return key to continue. If you see an error message mentioning virtualization extensions, or \u201cIntel VT-x\u201d, your host machine\u2019s BIOS does not have the VT-x extensions enabled. You\u2019ll need to reboot your computer, holding down \u201cDel\u201d (or \u201cEsc\u201d, or the \u201cThinkPad\u201d button, depending on your machine). Once you\u2019re in the BIOS, locate the correct menu entry and enable the \u201cIntel Virtualization Extensions\u201d. If BitCurator fails to boot for other reasons, it may be due to a \u201cnon-optimal setting\u201d detected for your particular hardware. Try powering off the virtual machine, checking your settings, and starting again. If you\u2019re still having a problem, let us know on the BitCurator users group . The BitCurator virtual machine should log in automatically. If you log out or the machine goes to sleep, the password to log back in is \u201c bcadmin \u201d. You can also use this password to update installed software, if prompted.","title":"Installation Instructions"},{"location":"Installing%20BitCurator/Installation%20via%20Virtual%20Machine/#virtual-machine-login","text":"BitCurator includes a default user. You are strongly encouraged to change the default password following the first login. username: bcadmin password: bcadmin If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Virtual Machine Login"},{"location":"Installing%20BitCurator/Installing%20BitCurator/","text":"Installing BitCurator Overview The BitCurator Environment is distributed as a Live ISO (a CD disk image) that can be used to install the software on a dedicated machine. This is recommended for production installs. The BitCurator Environment is also distributed as a virtual machine that can be run in VirtualBox. This is recommended for testing the software. Downloads Follow the link below to download current and past releases of the BitCurator Environment from the official GitHub repository. The current stable release is always at the top of the Releases page. Past and upcoming releases, along with select release notes, are in the Release Notes (GitHub) section. Get BitCurator (ISO or Virtual Machine) Quick Start Guide The Quick Start Guide provides in instructions on installation and an initial walkthrough of the BitCurator Environment. Recommended if you have not used BitCurator before! Installation Instructions Installation via Live ISO This is the preferred method for running the BitCurator Environment. Install the BitCurator toolset in an existing Ubuntu environment If you have an existing Ubuntu compatible environment on either a direct partition or in a virtual machine, you can build the BitCurator stack in it. Installation via Virtual Machine The virtual machine version of BitCurator is useful for testing and experimentation, but it is recommended that you run BitCurator on a dedicated machine in production environments by installing from the Live ISO image. Language Support and Ubuntu The BitCurator Environment is built using Ubuntu, which has extensive support for a wide range of languages. However, language support packs are large. To keep the installation ISO and virtual environment small, we distribute BitCurator with only the English (US) language pack installed. Installing additional language packs is easy using the following steps. First, open the Ubuntu System Settings window by clicking on \"System Settings\" in the top right-hand icon in the menu bar at the top. See the guide: Internationalization and Ubuntu If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Installing BitCurator"},{"location":"Installing%20BitCurator/Installing%20BitCurator/#installing-bitcurator","text":"","title":"Installing BitCurator"},{"location":"Installing%20BitCurator/Installing%20BitCurator/#overview","text":"The BitCurator Environment is distributed as a Live ISO (a CD disk image) that can be used to install the software on a dedicated machine. This is recommended for production installs. The BitCurator Environment is also distributed as a virtual machine that can be run in VirtualBox. This is recommended for testing the software.","title":"Overview"},{"location":"Installing%20BitCurator/Installing%20BitCurator/#downloads","text":"Follow the link below to download current and past releases of the BitCurator Environment from the official GitHub repository. The current stable release is always at the top of the Releases page. Past and upcoming releases, along with select release notes, are in the Release Notes (GitHub) section. Get BitCurator (ISO or Virtual Machine) Quick Start Guide The Quick Start Guide provides in instructions on installation and an initial walkthrough of the BitCurator Environment. Recommended if you have not used BitCurator before! Installation Instructions Installation via Live ISO This is the preferred method for running the BitCurator Environment. Install the BitCurator toolset in an existing Ubuntu environment If you have an existing Ubuntu compatible environment on either a direct partition or in a virtual machine, you can build the BitCurator stack in it. Installation via Virtual Machine The virtual machine version of BitCurator is useful for testing and experimentation, but it is recommended that you run BitCurator on a dedicated machine in production environments by installing from the Live ISO image.","title":"Downloads"},{"location":"Installing%20BitCurator/Installing%20BitCurator/#language-support-and-ubuntu","text":"The BitCurator Environment is built using Ubuntu, which has extensive support for a wide range of languages. However, language support packs are large. To keep the installation ISO and virtual environment small, we distribute BitCurator with only the English (US) language pack installed. Installing additional language packs is easy using the following steps. First, open the Ubuntu System Settings window by clicking on \"System Settings\" in the top right-hand icon in the menu bar at the top. See the guide: Internationalization and Ubuntu If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Language Support and Ubuntu"},{"location":"Installing%20BitCurator/Internationalization%20and%20Ubuntu/","text":"Internationalization and Ubuntu Language Support in Ubuntu The BitCurator environment is built using Ubuntu 16.04LTS, which has extensive support for a wide range of languages. However, language support packs are large. To keep the installation ISO and virtual environment small, we distribute BitCurator with only the English (US) language pack installed. Installing additional language packs is easy using the following steps. First, open the Ubuntu System Settings window by clicking on \"System Settings\" in the top right-hand icon in the menu bar at the top. Figure 1 : Entering the system settings Starting the Language Support Tool Once in the System Settings window, click on the \"Language Support\" icon to enter the Language Support tool. You will see a warning indicating \"The language support is not installed completely.\" Click \"Install\", and you will be prompted for the password (which in the BitCurator environment is \"bcadmin\"). Figure 2 : Opening the Language Support tool. Figure 3 : Authenticating to install. Selecting a language to be installed When language support has finished installing, you'll see a window that looks like Figure 4. Click on \"Install/remove languages\", and in the following window select your desired language(s) (in Figure 4, we've selected \"German\"). Click \"Apply changes\", and the language pack should be installed. Make sure you're connected to the internet - the language packs can't be downloaded otherwise! Figure 4 : Main language settings window. Figure 5 : Selecting a language to install. Selecting a system-wide application and menu language Now that the language pack has been installed, you'll need to drag your language of choice above any entries for English. Here, we've pulled the new Deutsche entry up to the top. Now, you'll need to log out, log back in again, and the environment should appear natively in your language of choice. Figure 6 : Language dragged to top of list and selected. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Internationalization and Ubuntu"},{"location":"Installing%20BitCurator/Internationalization%20and%20Ubuntu/#internationalization-and-ubuntu","text":"","title":"Internationalization and Ubuntu"},{"location":"Installing%20BitCurator/Internationalization%20and%20Ubuntu/#language-support-in-ubuntu","text":"The BitCurator environment is built using Ubuntu 16.04LTS, which has extensive support for a wide range of languages. However, language support packs are large. To keep the installation ISO and virtual environment small, we distribute BitCurator with only the English (US) language pack installed. Installing additional language packs is easy using the following steps. First, open the Ubuntu System Settings window by clicking on \"System Settings\" in the top right-hand icon in the menu bar at the top. Figure 1 : Entering the system settings","title":"Language Support in Ubuntu"},{"location":"Installing%20BitCurator/Internationalization%20and%20Ubuntu/#starting-the-language-support-tool","text":"Once in the System Settings window, click on the \"Language Support\" icon to enter the Language Support tool. You will see a warning indicating \"The language support is not installed completely.\" Click \"Install\", and you will be prompted for the password (which in the BitCurator environment is \"bcadmin\"). Figure 2 : Opening the Language Support tool. Figure 3 : Authenticating to install.","title":"Starting the Language Support Tool"},{"location":"Installing%20BitCurator/Internationalization%20and%20Ubuntu/#selecting-a-language-to-be-installed","text":"When language support has finished installing, you'll see a window that looks like Figure 4. Click on \"Install/remove languages\", and in the following window select your desired language(s) (in Figure 4, we've selected \"German\"). Click \"Apply changes\", and the language pack should be installed. Make sure you're connected to the internet - the language packs can't be downloaded otherwise! Figure 4 : Main language settings window. Figure 5 : Selecting a language to install.","title":"Selecting a language to be installed"},{"location":"Installing%20BitCurator/Internationalization%20and%20Ubuntu/#selecting-a-system-wide-application-and-menu-language","text":"Now that the language pack has been installed, you'll need to drag your language of choice above any entries for English. Here, we've pulled the new Deutsche entry up to the top. Now, you'll need to log out, log back in again, and the environment should appear natively in your language of choice. Figure 6 : Language dragged to top of list and selected. If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Selecting a system-wide application and menu language"},{"location":"Installing%20BitCurator/Migrating%20BitCurator%20VirtualBox%20VM%20to%20Hyper-V/","text":"Migrating BitCurator VirtualBox VM to Hyper-V Overview These instructions were provided by Shelly Black, North Carolina State University Libraries. Note that VirtualBox VM is a cross-platform virtualization application and Hyper-V cannot handle non-Windows operating systems. System Requirements for Hyper-V The Hyper-V role can be enabled on these versions of Windows 10: Windows 10 Enterprise Windows 10 Pro Windows 10 Education The Hyper-V role cannot be installed on: Windows 10 Home Windows 10 Mobile Windows 10 Mobile Enterprise Not a complete list, but the following items are necessary according to Hyper-V documentation from Microsoft : 64-bit Processor with Second Level Address Translation (SLAT). CPU support for VM Monitor Mode Extension (VT-x on Intel CPU's). Minimum of 4 GB memory. The following items will need to be enabled in the system BIOS: Virtualization Technology - may have a different label depending on motherboard manufacturer. Hardware Enforced Data Execution Prevention. Migration Instructions Download BitCurator VM and Oracle Virtualbox, plus VirtualBox Extension Pack, and ensure BitCurator opens in VirtualBoxSee installing BitCurator via virtual machine instructions 2. Export .vbox to .ova using VirtualBox (\u201cWrite Manifest file\u201d and \u201cInclude ISO image files\u201d should be checked) Figure 1 : Within File, navigate to Export Appliance Figure 2 : Select the BitCurator VM Figure 3 : \"Write Manifest file\" and \"Include ISO image files\" should be checked 3. Extract .ova in Terminal tar -xvf BitCurator-2.2.8.ova Convert .vmdk to .vhdx growable image using Starwind V2V ConverterUse Starwind V2V Converter , a tool for cloning and transforming VMs from one format to another. Figure 4 : Select local file as location of image to convert Figure 5 : Select file name and file info Figure 6 : Select local file as location of destination image Figure 7 : Select VHD/VHDX Microsoft Virtual Hard Disk as destination image format Figure 8 : Select VHDX growable image as VHD/VHDX image format Use Hyper-V New Virtual Machine Wizard (NOT Quick Create) and specified Generation Figure 9 : From the Action menu, navigate to New, and Virtual Machine Figure 10 : Within Specify Generation menu, choose the generation of the virtual machine Figure 11 : Within Connect Virtual Hard Disk menu, select \"Use an existing virtual hard disk\" Troubleshooting For addressing internet connectivity issues, create a New Virtual Switch if VM does not connect to the Default Switch used for other VMs. Potential errors when extracting ova file using 7zip Converted to vhd growable image, but couldn\u2019t open in Hyper-V when using Quick Create Repeated above but extracted ova in Terminal, got similar error in Hyper-V, even with secure boot on or off If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Migrating BitCurator VirtualBox VM to Hyper-V"},{"location":"Installing%20BitCurator/Migrating%20BitCurator%20VirtualBox%20VM%20to%20Hyper-V/#migrating-bitcurator-virtualbox-vm-to-hyper-v","text":"","title":"Migrating BitCurator VirtualBox VM to Hyper-V"},{"location":"Installing%20BitCurator/Migrating%20BitCurator%20VirtualBox%20VM%20to%20Hyper-V/#overview","text":"These instructions were provided by Shelly Black, North Carolina State University Libraries. Note that VirtualBox VM is a cross-platform virtualization application and Hyper-V cannot handle non-Windows operating systems.","title":"Overview"},{"location":"Installing%20BitCurator/Migrating%20BitCurator%20VirtualBox%20VM%20to%20Hyper-V/#system-requirements-for-hyper-v","text":"The Hyper-V role can be enabled on these versions of Windows 10: Windows 10 Enterprise Windows 10 Pro Windows 10 Education The Hyper-V role cannot be installed on: Windows 10 Home Windows 10 Mobile Windows 10 Mobile Enterprise Not a complete list, but the following items are necessary according to Hyper-V documentation from Microsoft : 64-bit Processor with Second Level Address Translation (SLAT). CPU support for VM Monitor Mode Extension (VT-x on Intel CPU's). Minimum of 4 GB memory. The following items will need to be enabled in the system BIOS: Virtualization Technology - may have a different label depending on motherboard manufacturer. Hardware Enforced Data Execution Prevention.","title":"System Requirements for Hyper-V"},{"location":"Installing%20BitCurator/Migrating%20BitCurator%20VirtualBox%20VM%20to%20Hyper-V/#migration-instructions","text":"Download BitCurator VM and Oracle Virtualbox, plus VirtualBox Extension Pack, and ensure BitCurator opens in VirtualBoxSee installing BitCurator via virtual machine instructions 2. Export .vbox to .ova using VirtualBox (\u201cWrite Manifest file\u201d and \u201cInclude ISO image files\u201d should be checked) Figure 1 : Within File, navigate to Export Appliance Figure 2 : Select the BitCurator VM Figure 3 : \"Write Manifest file\" and \"Include ISO image files\" should be checked 3. Extract .ova in Terminal tar -xvf BitCurator-2.2.8.ova Convert .vmdk to .vhdx growable image using Starwind V2V ConverterUse Starwind V2V Converter , a tool for cloning and transforming VMs from one format to another. Figure 4 : Select local file as location of image to convert Figure 5 : Select file name and file info Figure 6 : Select local file as location of destination image Figure 7 : Select VHD/VHDX Microsoft Virtual Hard Disk as destination image format Figure 8 : Select VHDX growable image as VHD/VHDX image format Use Hyper-V New Virtual Machine Wizard (NOT Quick Create) and specified Generation Figure 9 : From the Action menu, navigate to New, and Virtual Machine Figure 10 : Within Specify Generation menu, choose the generation of the virtual machine Figure 11 : Within Connect Virtual Hard Disk menu, select \"Use an existing virtual hard disk\"","title":"Migration Instructions"},{"location":"Installing%20BitCurator/Migrating%20BitCurator%20VirtualBox%20VM%20to%20Hyper-V/#troubleshooting","text":"For addressing internet connectivity issues, create a New Virtual Switch if VM does not connect to the Default Switch used for other VMs. Potential errors when extracting ova file using 7zip Converted to vhd growable image, but couldn\u2019t open in Hyper-V when using Quick Create Repeated above but extracted ova in Terminal, got similar error in Hyper-V, even with secure boot on or off If you would like to provide feedback for this page, please follow this link to the BitCurator Wiki Google Form for the Installing BitCurator section.","title":"Troubleshooting"}]}